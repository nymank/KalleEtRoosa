function cov_13ccgkbar1(){var path="C:\\git\\KalleEtRoosa\\src\\isEmpty.js";var hash="50d5070c122346e441f684ce16257906e26af1cb";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\isEmpty.js",statementMap:{"0":{start:{line:9,column:23},end:{line:9,column:54}},"1":{start:{line:46,column:2},end:{line:48,column:3}},"2":{start:{line:47,column:4},end:{line:47,column:15}},"3":{start:{line:49,column:2},end:{line:53,column:3}},"4":{start:{line:52,column:4},end:{line:52,column:24}},"5":{start:{line:54,column:14},end:{line:54,column:27}},"6":{start:{line:55,column:2},end:{line:57,column:3}},"7":{start:{line:56,column:4},end:{line:56,column:22}},"8":{start:{line:58,column:2},end:{line:60,column:3}},"9":{start:{line:59,column:4},end:{line:59,column:37}},"10":{start:{line:61,column:2},end:{line:65,column:3}},"11":{start:{line:62,column:4},end:{line:64,column:5}},"12":{start:{line:63,column:6},end:{line:63,column:18}},"13":{start:{line:66,column:2},end:{line:66,column:13}}},fnMap:{"0":{name:"isEmpty",decl:{start:{line:45,column:9},end:{line:45,column:16}},loc:{start:{line:45,column:24},end:{line:67,column:1}},line:45}},branchMap:{"0":{loc:{start:{line:46,column:2},end:{line:48,column:3}},type:"if",locations:[{start:{line:46,column:2},end:{line:48,column:3}},{start:{line:46,column:2},end:{line:48,column:3}}],line:46},"1":{loc:{start:{line:49,column:2},end:{line:53,column:3}},type:"if",locations:[{start:{line:49,column:2},end:{line:53,column:3}},{start:{line:49,column:2},end:{line:53,column:3}}],line:49},"2":{loc:{start:{line:49,column:6},end:{line:51,column:69}},type:"binary-expr",locations:[{start:{line:49,column:6},end:{line:49,column:24}},{start:{line:50,column:7},end:{line:50,column:27}},{start:{line:50,column:31},end:{line:50,column:56}},{start:{line:50,column:60},end:{line:50,column:94}},{start:{line:51,column:8},end:{line:51,column:23}},{start:{line:51,column:27},end:{line:51,column:46}},{start:{line:51,column:50},end:{line:51,column:68}}],line:49},"3":{loc:{start:{line:55,column:2},end:{line:57,column:3}},type:"if",locations:[{start:{line:55,column:2},end:{line:57,column:3}},{start:{line:55,column:2},end:{line:57,column:3}}],line:55},"4":{loc:{start:{line:55,column:6},end:{line:55,column:52}},type:"binary-expr",locations:[{start:{line:55,column:6},end:{line:55,column:27}},{start:{line:55,column:31},end:{line:55,column:52}}],line:55},"5":{loc:{start:{line:58,column:2},end:{line:60,column:3}},type:"if",locations:[{start:{line:58,column:2},end:{line:60,column:3}},{start:{line:58,column:2},end:{line:60,column:3}}],line:58},"6":{loc:{start:{line:62,column:4},end:{line:64,column:5}},type:"if",locations:[{start:{line:62,column:4},end:{line:64,column:5}},{start:{line:62,column:4},end:{line:64,column:5}}],line:62}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0,0,0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"50d5070c122346e441f684ce16257906e26af1cb"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_13ccgkbar1=function(){return actualCoverage;};}return actualCoverage;}cov_13ccgkbar1();import getTag from'./.internal/getTag.js';import isArguments from'./isArguments.js';import isArrayLike from'./isArrayLike.js';import isBuffer from'./isBuffer.js';import isPrototype from'./.internal/isPrototype.js';import isTypedArray from'./isTypedArray.js';/** Used to check objects for own properties. */const hasOwnProperty=(cov_13ccgkbar1().s[0]++,Object.prototype.hasOwnProperty);/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * isEmpty(null)
 * // => true
 *
 * isEmpty(true)
 * // => true
 *
 * isEmpty(1)
 * // => true
 *
 * isEmpty([1, 2, 3])
 * // => false
 *
 * isEmpty('abc')
 * // => false
 *
 * isEmpty({ 'a': 1 })
 * // => false
 */function isEmpty(value){cov_13ccgkbar1().f[0]++;cov_13ccgkbar1().s[1]++;if(value==null){cov_13ccgkbar1().b[0][0]++;cov_13ccgkbar1().s[2]++;return true;}else{cov_13ccgkbar1().b[0][1]++;}cov_13ccgkbar1().s[3]++;if((cov_13ccgkbar1().b[2][0]++,isArrayLike(value))&&((cov_13ccgkbar1().b[2][1]++,Array.isArray(value))||(cov_13ccgkbar1().b[2][2]++,typeof value==='string')||(cov_13ccgkbar1().b[2][3]++,typeof value.splice==='function')||(cov_13ccgkbar1().b[2][4]++,isBuffer(value))||(cov_13ccgkbar1().b[2][5]++,isTypedArray(value))||(cov_13ccgkbar1().b[2][6]++,isArguments(value)))){cov_13ccgkbar1().b[1][0]++;cov_13ccgkbar1().s[4]++;return!value.length;}else{cov_13ccgkbar1().b[1][1]++;}const tag=(cov_13ccgkbar1().s[5]++,getTag(value));cov_13ccgkbar1().s[6]++;if((cov_13ccgkbar1().b[4][0]++,tag=='[object Map]')||(cov_13ccgkbar1().b[4][1]++,tag=='[object Set]')){cov_13ccgkbar1().b[3][0]++;cov_13ccgkbar1().s[7]++;return!value.size;}else{cov_13ccgkbar1().b[3][1]++;}cov_13ccgkbar1().s[8]++;if(isPrototype(value)){cov_13ccgkbar1().b[5][0]++;cov_13ccgkbar1().s[9]++;return!Object.keys(value).length;}else{cov_13ccgkbar1().b[5][1]++;}cov_13ccgkbar1().s[10]++;for(const key in value){cov_13ccgkbar1().s[11]++;if(hasOwnProperty.call(value,key)){cov_13ccgkbar1().b[6][0]++;cov_13ccgkbar1().s[12]++;return false;}else{cov_13ccgkbar1().b[6][1]++;}}cov_13ccgkbar1().s[13]++;return true;}export default isEmpty;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRUYWciLCJpc0FyZ3VtZW50cyIsImlzQXJyYXlMaWtlIiwiaXNCdWZmZXIiLCJpc1Byb3RvdHlwZSIsImlzVHlwZWRBcnJheSIsImhhc093blByb3BlcnR5IiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaXNFbXB0eSIsInZhbHVlIiwiQXJyYXkiLCJpc0FycmF5Iiwic3BsaWNlIiwibGVuZ3RoIiwidGFnIiwic2l6ZSIsImtleXMiLCJrZXkiLCJjYWxsIl0sInNvdXJjZXMiOlsiaXNFbXB0eS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ2V0VGFnIGZyb20gJy4vLmludGVybmFsL2dldFRhZy5qcydcclxuaW1wb3J0IGlzQXJndW1lbnRzIGZyb20gJy4vaXNBcmd1bWVudHMuanMnXHJcbmltcG9ydCBpc0FycmF5TGlrZSBmcm9tICcuL2lzQXJyYXlMaWtlLmpzJ1xyXG5pbXBvcnQgaXNCdWZmZXIgZnJvbSAnLi9pc0J1ZmZlci5qcydcclxuaW1wb3J0IGlzUHJvdG90eXBlIGZyb20gJy4vLmludGVybmFsL2lzUHJvdG90eXBlLmpzJ1xyXG5pbXBvcnQgaXNUeXBlZEFycmF5IGZyb20gJy4vaXNUeXBlZEFycmF5LmpzJ1xyXG5cclxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXHJcbmNvbnN0IGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eVxyXG5cclxuLyoqXHJcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGFuIGVtcHR5IG9iamVjdCwgY29sbGVjdGlvbiwgbWFwLCBvciBzZXQuXHJcbiAqXHJcbiAqIE9iamVjdHMgYXJlIGNvbnNpZGVyZWQgZW1wdHkgaWYgdGhleSBoYXZlIG5vIG93biBlbnVtZXJhYmxlIHN0cmluZyBrZXllZFxyXG4gKiBwcm9wZXJ0aWVzLlxyXG4gKlxyXG4gKiBBcnJheS1saWtlIHZhbHVlcyBzdWNoIGFzIGBhcmd1bWVudHNgIG9iamVjdHMsIGFycmF5cywgYnVmZmVycywgc3RyaW5ncywgb3JcclxuICogalF1ZXJ5LWxpa2UgY29sbGVjdGlvbnMgYXJlIGNvbnNpZGVyZWQgZW1wdHkgaWYgdGhleSBoYXZlIGEgYGxlbmd0aGAgb2YgYDBgLlxyXG4gKiBTaW1pbGFybHksIG1hcHMgYW5kIHNldHMgYXJlIGNvbnNpZGVyZWQgZW1wdHkgaWYgdGhleSBoYXZlIGEgYHNpemVgIG9mIGAwYC5cclxuICpcclxuICogQHNpbmNlIDAuMS4wXHJcbiAqIEBjYXRlZ29yeSBMYW5nXHJcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxyXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBlbXB0eSwgZWxzZSBgZmFsc2VgLlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiBpc0VtcHR5KG51bGwpXHJcbiAqIC8vID0+IHRydWVcclxuICpcclxuICogaXNFbXB0eSh0cnVlKVxyXG4gKiAvLyA9PiB0cnVlXHJcbiAqXHJcbiAqIGlzRW1wdHkoMSlcclxuICogLy8gPT4gdHJ1ZVxyXG4gKlxyXG4gKiBpc0VtcHR5KFsxLCAyLCAzXSlcclxuICogLy8gPT4gZmFsc2VcclxuICpcclxuICogaXNFbXB0eSgnYWJjJylcclxuICogLy8gPT4gZmFsc2VcclxuICpcclxuICogaXNFbXB0eSh7ICdhJzogMSB9KVxyXG4gKiAvLyA9PiBmYWxzZVxyXG4gKi9cclxuZnVuY3Rpb24gaXNFbXB0eSh2YWx1ZSkge1xyXG4gIGlmICh2YWx1ZSA9PSBudWxsKSB7XHJcbiAgICByZXR1cm4gdHJ1ZVxyXG4gIH1cclxuICBpZiAoaXNBcnJheUxpa2UodmFsdWUpICYmXHJcbiAgICAgIChBcnJheS5pc0FycmF5KHZhbHVlKSB8fCB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiB2YWx1ZS5zcGxpY2UgPT09ICdmdW5jdGlvbicgfHxcclxuICAgICAgICBpc0J1ZmZlcih2YWx1ZSkgfHwgaXNUeXBlZEFycmF5KHZhbHVlKSB8fCBpc0FyZ3VtZW50cyh2YWx1ZSkpKSB7XHJcbiAgICByZXR1cm4gIXZhbHVlLmxlbmd0aFxyXG4gIH1cclxuICBjb25zdCB0YWcgPSBnZXRUYWcodmFsdWUpXHJcbiAgaWYgKHRhZyA9PSAnW29iamVjdCBNYXBdJyB8fCB0YWcgPT0gJ1tvYmplY3QgU2V0XScpIHtcclxuICAgIHJldHVybiAhdmFsdWUuc2l6ZVxyXG4gIH1cclxuICBpZiAoaXNQcm90b3R5cGUodmFsdWUpKSB7XHJcbiAgICByZXR1cm4gIU9iamVjdC5rZXlzKHZhbHVlKS5sZW5ndGhcclxuICB9XHJcbiAgZm9yIChjb25zdCBrZXkgaW4gdmFsdWUpIHtcclxuICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbHVlLCBrZXkpKSB7XHJcbiAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gdHJ1ZVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBpc0VtcHR5XHJcbiJdLCJtYXBwaW5ncyI6IjhyR0FlWTtBQUFBLDJGQWZaLE1BQU9BLE9BQU0sS0FBTSx1QkFBdUIsQ0FDMUMsTUFBT0MsWUFBVyxLQUFNLGtCQUFrQixDQUMxQyxNQUFPQyxZQUFXLEtBQU0sa0JBQWtCLENBQzFDLE1BQU9DLFNBQVEsS0FBTSxlQUFlLENBQ3BDLE1BQU9DLFlBQVcsS0FBTSw0QkFBNEIsQ0FDcEQsTUFBT0MsYUFBWSxLQUFNLG1CQUFtQixDQUU1QyxnREFDQSxLQUFNQyxlQUFjLDBCQUFHQyxNQUFNLENBQUNDLFNBQVMsQ0FBQ0YsY0FBYyxFQUV0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVNHLFFBQU8sQ0FBQ0MsS0FBSyxDQUFFLGlEQUN0QixHQUFJQSxLQUFLLEVBQUksSUFBSSxDQUFFLG9EQUNqQixNQUFPLEtBQUksQ0FDYixDQUFDLHlEQUNELEdBQUksNEJBQUFSLFdBQVcsQ0FBQ1EsS0FBSyxDQUFDLElBQ2pCLDRCQUFBQyxLQUFLLENBQUNDLE9BQU8sQ0FBQ0YsS0FBSyxDQUFDLCtCQUFJLE1BQU9BLE1BQUssR0FBSyxRQUFRLCtCQUFJLE1BQU9BLE1BQUssQ0FBQ0csTUFBTSxHQUFLLFVBQVUsK0JBQ3RGVixRQUFRLENBQUNPLEtBQUssQ0FBQywrQkFBSUwsWUFBWSxDQUFDSyxLQUFLLENBQUMsK0JBQUlULFdBQVcsQ0FBQ1MsS0FBSyxDQUFDLEVBQUMsQ0FBRSxvREFDbkUsTUFBTyxDQUFDQSxLQUFLLENBQUNJLE1BQU0sQ0FDdEIsQ0FBQyxpQ0FDRCxLQUFNQyxJQUFHLDBCQUFHZixNQUFNLENBQUNVLEtBQUssQ0FBQywwQkFDekIsR0FBSSw0QkFBQUssR0FBRyxFQUFJLGNBQWMsK0JBQUlBLEdBQUcsRUFBSSxjQUFjLEVBQUUsb0RBQ2xELE1BQU8sQ0FBQ0wsS0FBSyxDQUFDTSxJQUFJLENBQ3BCLENBQUMseURBQ0QsR0FBSVosV0FBVyxDQUFDTSxLQUFLLENBQUMsQ0FBRSxvREFDdEIsTUFBTyxDQUFDSCxNQUFNLENBQUNVLElBQUksQ0FBQ1AsS0FBSyxDQUFDLENBQUNJLE1BQU0sQ0FDbkMsQ0FBQywwREFDRCxJQUFLLEtBQU1JLElBQUcsR0FBSVIsTUFBSyxDQUFFLDBCQUN2QixHQUFJSixjQUFjLENBQUNhLElBQUksQ0FBQ1QsS0FBSyxDQUFFUSxHQUFHLENBQUMsQ0FBRSxxREFDbkMsTUFBTyxNQUFLLENBQ2QsQ0FBQyxpQ0FDSCxDQUFDLHlCQUNELE1BQU8sS0FBSSxDQUNiLENBRUEsY0FBZVQsUUFBTyJ9