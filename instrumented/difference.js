function cov_2fn9x5shro(){var path="C:\\git\\KalleEtRoosa\\src\\difference.js";var hash="ebeeb1789ea4e7d9d6fc2606b7b324973fe4c0f7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\difference.js",statementMap:{"0":{start:{line:25,column:2},end:{line:27,column:8}}},fnMap:{"0":{name:"difference",decl:{start:{line:24,column:9},end:{line:24,column:19}},loc:{start:{line:24,column:38},end:{line:28,column:1}},line:24}},branchMap:{"0":{loc:{start:{line:25,column:9},end:{line:27,column:8}},type:"cond-expr",locations:[{start:{line:26,column:6},end:{line:26,column:76}},{start:{line:27,column:6},end:{line:27,column:8}}],line:25}},s:{"0":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ebeeb1789ea4e7d9d6fc2606b7b324973fe4c0f7"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2fn9x5shro=function(){return actualCoverage;};}return actualCoverage;}cov_2fn9x5shro();import baseDifference from'./.internal/baseDifference.js';import baseFlatten from'./.internal/baseFlatten.js';import isArrayLikeObject from'./isArrayLikeObject.js';/**
 * Creates an array of `array` values not included in the other given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * **Note:** Unlike `pullAll`, this method returns a new array.
 *
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see union, unionBy, unionWith, without, xor, xorBy, xorWith,
 * @example
 *
 * difference([2, 1], [2, 3])
 * // => [1]
 */function difference(array,...values){cov_2fn9x5shro().f[0]++;cov_2fn9x5shro().s[0]++;return isArrayLikeObject(array)?(cov_2fn9x5shro().b[0][0]++,baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true))):(cov_2fn9x5shro().b[0][1]++,[]);}export default difference;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlRGlmZmVyZW5jZSIsImJhc2VGbGF0dGVuIiwiaXNBcnJheUxpa2VPYmplY3QiLCJkaWZmZXJlbmNlIiwiYXJyYXkiLCJ2YWx1ZXMiXSwic291cmNlcyI6WyJkaWZmZXJlbmNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiYXNlRGlmZmVyZW5jZSBmcm9tICcuLy5pbnRlcm5hbC9iYXNlRGlmZmVyZW5jZS5qcydcclxuaW1wb3J0IGJhc2VGbGF0dGVuIGZyb20gJy4vLmludGVybmFsL2Jhc2VGbGF0dGVuLmpzJ1xyXG5pbXBvcnQgaXNBcnJheUxpa2VPYmplY3QgZnJvbSAnLi9pc0FycmF5TGlrZU9iamVjdC5qcydcclxuXHJcbi8qKlxyXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIGBhcnJheWAgdmFsdWVzIG5vdCBpbmNsdWRlZCBpbiB0aGUgb3RoZXIgZ2l2ZW4gYXJyYXlzXHJcbiAqIHVzaW5nIFtgU2FtZVZhbHVlWmVyb2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXNhbWV2YWx1ZXplcm8pXHJcbiAqIGZvciBlcXVhbGl0eSBjb21wYXJpc29ucy4gVGhlIG9yZGVyIGFuZCByZWZlcmVuY2VzIG9mIHJlc3VsdCB2YWx1ZXMgYXJlXHJcbiAqIGRldGVybWluZWQgYnkgdGhlIGZpcnN0IGFycmF5LlxyXG4gKlxyXG4gKiAqKk5vdGU6KiogVW5saWtlIGBwdWxsQWxsYCwgdGhpcyBtZXRob2QgcmV0dXJucyBhIG5ldyBhcnJheS5cclxuICpcclxuICogQHNpbmNlIDAuMS4wXHJcbiAqIEBjYXRlZ29yeSBBcnJheVxyXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaW5zcGVjdC5cclxuICogQHBhcmFtIHsuLi5BcnJheX0gW3ZhbHVlc10gVGhlIHZhbHVlcyB0byBleGNsdWRlLlxyXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBhcnJheSBvZiBmaWx0ZXJlZCB2YWx1ZXMuXHJcbiAqIEBzZWUgdW5pb24sIHVuaW9uQnksIHVuaW9uV2l0aCwgd2l0aG91dCwgeG9yLCB4b3JCeSwgeG9yV2l0aCxcclxuICogQGV4YW1wbGVcclxuICpcclxuICogZGlmZmVyZW5jZShbMiwgMV0sIFsyLCAzXSlcclxuICogLy8gPT4gWzFdXHJcbiAqL1xyXG5mdW5jdGlvbiBkaWZmZXJlbmNlKGFycmF5LCAuLi52YWx1ZXMpIHtcclxuICByZXR1cm4gaXNBcnJheUxpa2VPYmplY3QoYXJyYXkpXHJcbiAgICA/IGJhc2VEaWZmZXJlbmNlKGFycmF5LCBiYXNlRmxhdHRlbih2YWx1ZXMsIDEsIGlzQXJyYXlMaWtlT2JqZWN0LCB0cnVlKSlcclxuICAgIDogW11cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZGlmZmVyZW5jZVxyXG4iXSwibWFwcGluZ3MiOiI2OUJBZVk7QUFBQSwyRkFmWixNQUFPQSxlQUFjLEtBQU0sK0JBQStCLENBQzFELE1BQU9DLFlBQVcsS0FBTSw0QkFBNEIsQ0FDcEQsTUFBT0Msa0JBQWlCLEtBQU0sd0JBQXdCLENBRXREO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBU0MsV0FBVSxDQUFDQyxLQUFLLENBQUUsR0FBR0MsTUFBTSxDQUFFLGlEQUNwQyxNQUFPSCxrQkFBaUIsQ0FBQ0UsS0FBSyxDQUFDLDZCQUMzQkosY0FBYyxDQUFDSSxLQUFLLENBQUVILFdBQVcsQ0FBQ0ksTUFBTSxDQUFFLENBQUMsQ0FBRUgsaUJBQWlCLENBQUUsSUFBSSxDQUFDLENBQUMsOEJBQ3RFLEVBQUUsRUFDUixDQUVBLGNBQWVDLFdBQVUifQ==