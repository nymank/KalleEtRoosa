function cov_1qihej7unr(){var path="C:\\git\\KalleEtRoosa\\src\\map.js";var hash="1c18f127d43bd3a4091353d3d3b9a427d52a7a51";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\map.js",statementMap:{"0":{start:{line:20,column:14},end:{line:20,column:16}},"1":{start:{line:21,column:17},end:{line:21,column:49}},"2":{start:{line:22,column:17},end:{line:22,column:34}},"3":{start:{line:24,column:2},end:{line:26,column:3}},"4":{start:{line:25,column:4},end:{line:25,column:56}},"5":{start:{line:27,column:2},end:{line:27,column:15}}},fnMap:{"0":{name:"map",decl:{start:{line:19,column:9},end:{line:19,column:12}},loc:{start:{line:19,column:30},end:{line:28,column:1}},line:19}},branchMap:{"0":{loc:{start:{line:21,column:17},end:{line:21,column:49}},type:"cond-expr",locations:[{start:{line:21,column:33},end:{line:21,column:34}},{start:{line:21,column:37},end:{line:21,column:49}}],line:21}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"1c18f127d43bd3a4091353d3d3b9a427d52a7a51"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1qihej7unr=function(){return actualCoverage;};}return actualCoverage;}cov_1qihej7unr();/**
 * Creates an array of values by running each element of `array` thru `iteratee`.
 * The iteratee is invoked with three arguments: (value, index, array).
 *
 * @since 5.0.0
 * @category Array
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n
 * }
 *
 * map([4, 8], square)
 * // => [16, 64]
 */function map(array,iteratee){cov_1qihej7unr().f[0]++;let index=(cov_1qihej7unr().s[0]++,-1);const length=(cov_1qihej7unr().s[1]++,array==null?(cov_1qihej7unr().b[0][0]++,0):(cov_1qihej7unr().b[0][1]++,array.length));const result=(cov_1qihej7unr().s[2]++,new Array(length));cov_1qihej7unr().s[3]++;while(++index<length){cov_1qihej7unr().s[4]++;result[index]=iteratee(array[index],index,array);}cov_1qihej7unr().s[5]++;return result;}export default map;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtYXAiLCJhcnJheSIsIml0ZXJhdGVlIiwiaW5kZXgiLCJsZW5ndGgiLCJyZXN1bHQiLCJBcnJheSJdLCJzb3VyY2VzIjpbIm1hcC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiB2YWx1ZXMgYnkgcnVubmluZyBlYWNoIGVsZW1lbnQgb2YgYGFycmF5YCB0aHJ1IGBpdGVyYXRlZWAuXHJcbiAqIFRoZSBpdGVyYXRlZSBpcyBpbnZva2VkIHdpdGggdGhyZWUgYXJndW1lbnRzOiAodmFsdWUsIGluZGV4LCBhcnJheSkuXHJcbiAqXHJcbiAqIEBzaW5jZSA1LjAuMFxyXG4gKiBAY2F0ZWdvcnkgQXJyYXlcclxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGl0ZXJhdGUgb3Zlci5cclxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cclxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgbWFwcGVkIGFycmF5LlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiBmdW5jdGlvbiBzcXVhcmUobikge1xyXG4gKiAgIHJldHVybiBuICogblxyXG4gKiB9XHJcbiAqXHJcbiAqIG1hcChbNCwgOF0sIHNxdWFyZSlcclxuICogLy8gPT4gWzE2LCA2NF1cclxuICovXHJcbmZ1bmN0aW9uIG1hcChhcnJheSwgaXRlcmF0ZWUpIHtcclxuICBsZXQgaW5kZXggPSAtMVxyXG4gIGNvbnN0IGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoXHJcbiAgY29uc3QgcmVzdWx0ID0gbmV3IEFycmF5KGxlbmd0aClcclxuXHJcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcclxuICAgIHJlc3VsdFtpbmRleF0gPSBpdGVyYXRlZShhcnJheVtpbmRleF0sIGluZGV4LCBhcnJheSlcclxuICB9XHJcbiAgcmV0dXJuIHJlc3VsdFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBtYXBcclxuIl0sIm1hcHBpbmdzIjoiaXdDQWVZO0FBQUEsMkZBZlo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBU0EsSUFBRyxDQUFDQyxLQUFLLENBQUVDLFFBQVEsQ0FBRSx5QkFDNUIsR0FBSUMsTUFBSywwQkFBRyxDQUFDLENBQUMsRUFDZCxLQUFNQyxPQUFNLDBCQUFHSCxLQUFLLEVBQUksSUFBSSw2QkFBRyxDQUFDLDhCQUFHQSxLQUFLLENBQUNHLE1BQU0sR0FDL0MsS0FBTUMsT0FBTSwwQkFBRyxHQUFJQyxNQUFLLENBQUNGLE1BQU0sQ0FBQywwQkFFaEMsTUFBTyxFQUFFRCxLQUFLLENBQUdDLE1BQU0sQ0FBRSx5QkFDdkJDLE1BQU0sQ0FBQ0YsS0FBSyxDQUFDLENBQUdELFFBQVEsQ0FBQ0QsS0FBSyxDQUFDRSxLQUFLLENBQUMsQ0FBRUEsS0FBSyxDQUFFRixLQUFLLENBQUMsQ0FDdEQsQ0FBQyx3QkFDRCxNQUFPSSxPQUFNLENBQ2YsQ0FFQSxjQUFlTCxJQUFHIn0=