function cov_27cidufo66(){var path="C:\\git\\KalleEtRoosa\\src\\chunk.js";var hash="d30a713cc665cf86bd23bf626514b6b1b94bf8cc";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\chunk.js",statementMap:{"0":{start:{line:23,column:2},end:{line:23,column:37}},"1":{start:{line:24,column:17},end:{line:24,column:49}},"2":{start:{line:25,column:2},end:{line:27,column:3}},"3":{start:{line:26,column:4},end:{line:26,column:13}},"4":{start:{line:28,column:14},end:{line:28,column:15}},"5":{start:{line:29,column:17},end:{line:29,column:18}},"6":{start:{line:30,column:17},end:{line:30,column:52}},"7":{start:{line:32,column:2},end:{line:34,column:3}},"8":{start:{line:33,column:4},end:{line:33,column:59}},"9":{start:{line:35,column:2},end:{line:35,column:15}}},fnMap:{"0":{name:"chunk",decl:{start:{line:22,column:9},end:{line:22,column:14}},loc:{start:{line:22,column:32},end:{line:36,column:1}},line:22}},branchMap:{"0":{loc:{start:{line:22,column:22},end:{line:22,column:30}},type:"default-arg",locations:[{start:{line:22,column:29},end:{line:22,column:30}}],line:22},"1":{loc:{start:{line:24,column:17},end:{line:24,column:49}},type:"cond-expr",locations:[{start:{line:24,column:33},end:{line:24,column:34}},{start:{line:24,column:37},end:{line:24,column:49}}],line:24},"2":{loc:{start:{line:25,column:2},end:{line:27,column:3}},type:"if",locations:[{start:{line:25,column:2},end:{line:27,column:3}},{start:{line:25,column:2},end:{line:27,column:3}}],line:25},"3":{loc:{start:{line:25,column:6},end:{line:25,column:25}},type:"binary-expr",locations:[{start:{line:25,column:6},end:{line:25,column:13}},{start:{line:25,column:17},end:{line:25,column:25}}],line:25}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d30a713cc665cf86bd23bf626514b6b1b94bf8cc"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_27cidufo66=function(){return actualCoverage;};}return actualCoverage;}cov_27cidufo66();import slice from'./slice.js';import toInteger from'./toInteger.js';/**
 * Creates an array of elements split into groups the length of `size`.
 * If `array` can't be split evenly, the final chunk will be the remaining
 * elements.
 *
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to process.
 * @param {number} [size=1] The length of each chunk
 * @returns {Array} Returns the new array of chunks.
 * @example
 *
 * chunk(['a', 'b', 'c', 'd'], 2)
 * // => [['a', 'b'], ['c', 'd']]
 *
 * chunk(['a', 'b', 'c', 'd'], 3)
 * // => [['a', 'b', 'c'], ['d']]
 */function chunk(array,size=(cov_27cidufo66().b[0][0]++,1)){cov_27cidufo66().f[0]++;cov_27cidufo66().s[0]++;size=Math.max(toInteger(size),0);const length=(cov_27cidufo66().s[1]++,array==null?(cov_27cidufo66().b[1][0]++,0):(cov_27cidufo66().b[1][1]++,array.length));cov_27cidufo66().s[2]++;if((cov_27cidufo66().b[3][0]++,!length)||(cov_27cidufo66().b[3][1]++,size<1)){cov_27cidufo66().b[2][0]++;cov_27cidufo66().s[3]++;return[];}else{cov_27cidufo66().b[2][1]++;}let index=(cov_27cidufo66().s[4]++,0);let resIndex=(cov_27cidufo66().s[5]++,0);const result=(cov_27cidufo66().s[6]++,new Array(Math.ceil(length/size)));cov_27cidufo66().s[7]++;while(index<length){cov_27cidufo66().s[8]++;result[resIndex]=slice(array,index,index+=size);}cov_27cidufo66().s[9]++;return result;}export default chunk;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzbGljZSIsInRvSW50ZWdlciIsImNodW5rIiwiYXJyYXkiLCJzaXplIiwiTWF0aCIsIm1heCIsImxlbmd0aCIsImluZGV4IiwicmVzSW5kZXgiLCJyZXN1bHQiLCJBcnJheSIsImNlaWwiXSwic291cmNlcyI6WyJjaHVuay5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc2xpY2UgZnJvbSAnLi9zbGljZS5qcydcclxuaW1wb3J0IHRvSW50ZWdlciBmcm9tICcuL3RvSW50ZWdlci5qcydcclxuXHJcbi8qKlxyXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIGVsZW1lbnRzIHNwbGl0IGludG8gZ3JvdXBzIHRoZSBsZW5ndGggb2YgYHNpemVgLlxyXG4gKiBJZiBgYXJyYXlgIGNhbid0IGJlIHNwbGl0IGV2ZW5seSwgdGhlIGZpbmFsIGNodW5rIHdpbGwgYmUgdGhlIHJlbWFpbmluZ1xyXG4gKiBlbGVtZW50cy5cclxuICpcclxuICogQHNpbmNlIDMuMC4wXHJcbiAqIEBjYXRlZ29yeSBBcnJheVxyXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gcHJvY2Vzcy5cclxuICogQHBhcmFtIHtudW1iZXJ9IFtzaXplPTFdIFRoZSBsZW5ndGggb2YgZWFjaCBjaHVua1xyXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBhcnJheSBvZiBjaHVua3MuXHJcbiAqIEBleGFtcGxlXHJcbiAqXHJcbiAqIGNodW5rKFsnYScsICdiJywgJ2MnLCAnZCddLCAyKVxyXG4gKiAvLyA9PiBbWydhJywgJ2InXSwgWydjJywgJ2QnXV1cclxuICpcclxuICogY2h1bmsoWydhJywgJ2InLCAnYycsICdkJ10sIDMpXHJcbiAqIC8vID0+IFtbJ2EnLCAnYicsICdjJ10sIFsnZCddXVxyXG4gKi9cclxuZnVuY3Rpb24gY2h1bmsoYXJyYXksIHNpemUgPSAxKSB7XHJcbiAgc2l6ZSA9IE1hdGgubWF4KHRvSW50ZWdlcihzaXplKSwgMClcclxuICBjb25zdCBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aFxyXG4gIGlmICghbGVuZ3RoIHx8IHNpemUgPCAxKSB7XHJcbiAgICByZXR1cm4gW11cclxuICB9XHJcbiAgbGV0IGluZGV4ID0gMFxyXG4gIGxldCByZXNJbmRleCA9IDBcclxuICBjb25zdCByZXN1bHQgPSBuZXcgQXJyYXkoTWF0aC5jZWlsKGxlbmd0aCAvIHNpemUpKVxyXG5cclxuICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcclxuICAgIHJlc3VsdFtyZXNJbmRleF0gPSBzbGljZShhcnJheSwgaW5kZXgsIChpbmRleCArPSBzaXplKSlcclxuICB9XHJcbiAgcmV0dXJuIHJlc3VsdFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjaHVua1xyXG4iXSwibWFwcGluZ3MiOiJ5akVBZVk7QUFBQSwyRkFmWixNQUFPQSxNQUFLLEtBQU0sWUFBWSxDQUM5QixNQUFPQyxVQUFTLEtBQU0sZ0JBQWdCLENBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVNDLE1BQUssQ0FBQ0MsS0FBSyxDQUFFQyxJQUFJLDZCQUFHLENBQUMsRUFBRSxpREFDOUJBLElBQUksQ0FBR0MsSUFBSSxDQUFDQyxHQUFHLENBQUNMLFNBQVMsQ0FBQ0csSUFBSSxDQUFDLENBQUUsQ0FBQyxDQUFDLENBQ25DLEtBQU1HLE9BQU0sMEJBQUdKLEtBQUssRUFBSSxJQUFJLDZCQUFHLENBQUMsOEJBQUdBLEtBQUssQ0FBQ0ksTUFBTSwyQkFDL0MsR0FBSSw2QkFBQ0EsTUFBTSwrQkFBSUgsSUFBSSxDQUFHLENBQUMsRUFBRSxvREFDdkIsTUFBTyxFQUFFLENBQ1gsQ0FBQyxpQ0FDRCxHQUFJSSxNQUFLLDBCQUFHLENBQUMsRUFDYixHQUFJQyxTQUFRLDBCQUFHLENBQUMsRUFDaEIsS0FBTUMsT0FBTSwwQkFBRyxHQUFJQyxNQUFLLENBQUNOLElBQUksQ0FBQ08sSUFBSSxDQUFDTCxNQUFNLENBQUdILElBQUksQ0FBQyxDQUFDLDBCQUVsRCxNQUFPSSxLQUFLLENBQUdELE1BQU0sQ0FBRSx5QkFDckJHLE1BQU0sQ0FBQ0QsUUFBUSxDQUFDLENBQUdULEtBQUssQ0FBQ0csS0FBSyxDQUFFSyxLQUFLLENBQUdBLEtBQUssRUFBSUosSUFBSSxDQUFFLENBQ3pELENBQUMsd0JBQ0QsTUFBT00sT0FBTSxDQUNmLENBRUEsY0FBZVIsTUFBSyJ9