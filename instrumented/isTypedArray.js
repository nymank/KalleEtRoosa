function cov_27jbb8x4a(){var path="C:\\git\\KalleEtRoosa\\src\\isTypedArray.js";var hash="b2e7d28e68275e3a7c48f93471c23b35e4fda2fe";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\isTypedArray.js",statementMap:{"0":{start:{line:6,column:19},end:{line:6,column:94}},"1":{start:{line:9,column:25},end:{line:9,column:60}},"2":{start:{line:26,column:21},end:{line:28,column:68}},"3":{start:{line:27,column:15},end:{line:27,column:38}},"4":{start:{line:28,column:15},end:{line:28,column:68}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:27,column:4},end:{line:27,column:5}},loc:{start:{line:27,column:15},end:{line:27,column:38}},line:27},"1":{name:"(anonymous_1)",decl:{start:{line:28,column:4},end:{line:28,column:5}},loc:{start:{line:28,column:15},end:{line:28,column:68}},line:28}},branchMap:{"0":{loc:{start:{line:9,column:25},end:{line:9,column:60}},type:"binary-expr",locations:[{start:{line:9,column:25},end:{line:9,column:34}},{start:{line:9,column:38},end:{line:9,column:60}}],line:9},"1":{loc:{start:{line:26,column:21},end:{line:28,column:68}},type:"cond-expr",locations:[{start:{line:27,column:4},end:{line:27,column:38}},{start:{line:28,column:4},end:{line:28,column:68}}],line:26},"2":{loc:{start:{line:28,column:15},end:{line:28,column:68}},type:"binary-expr",locations:[{start:{line:28,column:15},end:{line:28,column:34}},{start:{line:28,column:38},end:{line:28,column:68}}],line:28}},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b2e7d28e68275e3a7c48f93471c23b35e4fda2fe"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_27jbb8x4a=function(){return actualCoverage;};}return actualCoverage;}cov_27jbb8x4a();import getTag from'./.internal/getTag.js';import nodeTypes from'./.internal/nodeTypes.js';import isObjectLike from'./isObjectLike.js';/** Used to match `toStringTag` values of typed arrays. */const reTypedTag=(cov_27jbb8x4a().s[0]++,/^\[object (?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)Array\]$/);/* Node.js helper references. */const nodeIsTypedArray=(cov_27jbb8x4a().s[1]++,(cov_27jbb8x4a().b[0][0]++,nodeTypes)&&(cov_27jbb8x4a().b[0][1]++,nodeTypes.isTypedArray));/**
 * Checks if `value` is classified as a typed array.
 *
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * isTypedArray(new Uint8Array)
 * // => true
 *
 * isTypedArray([])
 * // => false
 */const isTypedArray=(cov_27jbb8x4a().s[2]++,nodeIsTypedArray?(cov_27jbb8x4a().b[1][0]++,value=>{cov_27jbb8x4a().f[0]++;cov_27jbb8x4a().s[3]++;return nodeIsTypedArray(value);}):(cov_27jbb8x4a().b[1][1]++,value=>{cov_27jbb8x4a().f[1]++;cov_27jbb8x4a().s[4]++;return(cov_27jbb8x4a().b[2][0]++,isObjectLike(value))&&(cov_27jbb8x4a().b[2][1]++,reTypedTag.test(getTag(value)));}));export default isTypedArray;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRUYWciLCJub2RlVHlwZXMiLCJpc09iamVjdExpa2UiLCJyZVR5cGVkVGFnIiwibm9kZUlzVHlwZWRBcnJheSIsImlzVHlwZWRBcnJheSIsInZhbHVlIiwidGVzdCJdLCJzb3VyY2VzIjpbImlzVHlwZWRBcnJheS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ2V0VGFnIGZyb20gJy4vLmludGVybmFsL2dldFRhZy5qcydcclxuaW1wb3J0IG5vZGVUeXBlcyBmcm9tICcuLy5pbnRlcm5hbC9ub2RlVHlwZXMuanMnXHJcbmltcG9ydCBpc09iamVjdExpa2UgZnJvbSAnLi9pc09iamVjdExpa2UuanMnXHJcblxyXG4vKiogVXNlZCB0byBtYXRjaCBgdG9TdHJpbmdUYWdgIHZhbHVlcyBvZiB0eXBlZCBhcnJheXMuICovXHJcbmNvbnN0IHJlVHlwZWRUYWcgPSAvXlxcW29iamVjdCAoPzpGbG9hdCg/OjMyfDY0KXwoPzpJbnR8VWludCkoPzo4fDE2fDMyKXxVaW50OENsYW1wZWQpQXJyYXlcXF0kL1xyXG5cclxuLyogTm9kZS5qcyBoZWxwZXIgcmVmZXJlbmNlcy4gKi9cclxuY29uc3Qgbm9kZUlzVHlwZWRBcnJheSA9IG5vZGVUeXBlcyAmJiBub2RlVHlwZXMuaXNUeXBlZEFycmF5XHJcblxyXG4vKipcclxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIHR5cGVkIGFycmF5LlxyXG4gKlxyXG4gKiBAc2luY2UgMy4wLjBcclxuICogQGNhdGVnb3J5IExhbmdcclxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXHJcbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgdHlwZWQgYXJyYXksIGVsc2UgYGZhbHNlYC5cclxuICogQGV4YW1wbGVcclxuICpcclxuICogaXNUeXBlZEFycmF5KG5ldyBVaW50OEFycmF5KVxyXG4gKiAvLyA9PiB0cnVlXHJcbiAqXHJcbiAqIGlzVHlwZWRBcnJheShbXSlcclxuICogLy8gPT4gZmFsc2VcclxuICovXHJcbmNvbnN0IGlzVHlwZWRBcnJheSA9IG5vZGVJc1R5cGVkQXJyYXlcclxuICA/ICh2YWx1ZSkgPT4gbm9kZUlzVHlwZWRBcnJheSh2YWx1ZSlcclxuICA6ICh2YWx1ZSkgPT4gaXNPYmplY3RMaWtlKHZhbHVlKSAmJiByZVR5cGVkVGFnLnRlc3QoZ2V0VGFnKHZhbHVlKSlcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGlzVHlwZWRBcnJheVxyXG4iXSwibWFwcGluZ3MiOiIyeERBZVk7QUFBQSx5RkFmWixNQUFPQSxPQUFNLEtBQU0sdUJBQXVCLENBQzFDLE1BQU9DLFVBQVMsS0FBTSwwQkFBMEIsQ0FDaEQsTUFBT0MsYUFBWSxLQUFNLG1CQUFtQixDQUU1QywwREFDQSxLQUFNQyxXQUFVLHlCQUFHLDJFQUEyRSxFQUU5RixnQ0FDQSxLQUFNQyxpQkFBZ0IseUJBQUcsMkJBQUFILFNBQVMsOEJBQUlBLFNBQVMsQ0FBQ0ksWUFBWSxHQUU1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxLQUFNQSxhQUFZLHlCQUFHRCxnQkFBZ0IsNEJBQ2hDRSxLQUFLLEVBQUsscURBQUFGLGlCQUFnQixDQUFDRSxLQUFLLENBQUMsQ0FBRCxDQUFDLDZCQUNqQ0EsS0FBSyxFQUFLLGdGQUFBSixZQUFZLENBQUNJLEtBQUssQ0FBQyw4QkFBSUgsVUFBVSxDQUFDSSxJQUFJLENBQUNQLE1BQU0sQ0FBQ00sS0FBSyxDQUFDLENBQUMsRUFBRCxDQUFDLEdBRXBFLGNBQWVELGFBQVkifQ==