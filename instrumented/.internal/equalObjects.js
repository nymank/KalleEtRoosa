function cov_2m2d8yr0bb(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\equalObjects.js";var hash="7a94422a9589caf01f36c2e229be0b35c457a953";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\equalObjects.js",statementMap:{"0":{start:{line:4,column:29},end:{line:4,column:30}},"1":{start:{line:7,column:23},end:{line:7,column:54}},"2":{start:{line:23,column:20},end:{line:23,column:50}},"3":{start:{line:24,column:19},end:{line:24,column:37}},"4":{start:{line:25,column:20},end:{line:25,column:35}},"5":{start:{line:26,column:19},end:{line:26,column:36}},"6":{start:{line:27,column:20},end:{line:27,column:35}},"7":{start:{line:29,column:2},end:{line:31,column:3}},"8":{start:{line:30,column:4},end:{line:30,column:16}},"9":{start:{line:33,column:14},end:{line:33,column:23}},"10":{start:{line:34,column:2},end:{line:39,column:3}},"11":{start:{line:35,column:4},end:{line:35,column:25}},"12":{start:{line:36,column:4},end:{line:38,column:5}},"13":{start:{line:37,column:6},end:{line:37,column:18}},"14":{start:{line:41,column:18},end:{line:41,column:35}},"15":{start:{line:42,column:2},end:{line:44,column:3}},"16":{start:{line:43,column:4},end:{line:43,column:27}},"17":{start:{line:45,column:15},end:{line:45,column:19}},"18":{start:{line:46,column:2},end:{line:46,column:26}},"19":{start:{line:47,column:2},end:{line:47,column:26}},"20":{start:{line:50,column:17},end:{line:50,column:26}},"21":{start:{line:51,column:2},end:{line:70,column:3}},"22":{start:{line:52,column:4},end:{line:52,column:25}},"23":{start:{line:53,column:21},end:{line:53,column:32}},"24":{start:{line:54,column:21},end:{line:54,column:31}},"25":{start:{line:56,column:4},end:{line:60,column:5}},"26":{start:{line:57,column:6},end:{line:59,column:67}},"27":{start:{line:62,column:4},end:{line:68,column:5}},"28":{start:{line:66,column:6},end:{line:66,column:20}},"29":{start:{line:67,column:6},end:{line:67,column:11}},"30":{start:{line:69,column:4},end:{line:69,column:49}},"31":{start:{line:71,column:2},end:{line:82,column:3}},"32":{start:{line:72,column:20},end:{line:72,column:38}},"33":{start:{line:73,column:20},end:{line:73,column:37}},"34":{start:{line:76,column:4},end:{line:81,column:5}},"35":{start:{line:80,column:6},end:{line:80,column:20}},"36":{start:{line:83,column:2},end:{line:83,column:25}},"37":{start:{line:84,column:2},end:{line:84,column:24}},"38":{start:{line:85,column:2},end:{line:85,column:15}}},fnMap:{"0":{name:"equalObjects",decl:{start:{line:22,column:9},end:{line:22,column:21}},loc:{start:{line:22,column:76},end:{line:86,column:1}},line:22}},branchMap:{"0":{loc:{start:{line:29,column:2},end:{line:31,column:3}},type:"if",locations:[{start:{line:29,column:2},end:{line:31,column:3}},{start:{line:29,column:2},end:{line:31,column:3}}],line:29},"1":{loc:{start:{line:29,column:6},end:{line:29,column:42}},type:"binary-expr",locations:[{start:{line:29,column:6},end:{line:29,column:28}},{start:{line:29,column:32},end:{line:29,column:42}}],line:29},"2":{loc:{start:{line:36,column:4},end:{line:38,column:5}},type:"if",locations:[{start:{line:36,column:4},end:{line:38,column:5}},{start:{line:36,column:4},end:{line:38,column:5}}],line:36},"3":{loc:{start:{line:36,column:10},end:{line:36,column:68}},type:"cond-expr",locations:[{start:{line:36,column:22},end:{line:36,column:34}},{start:{line:36,column:37},end:{line:36,column:68}}],line:36},"4":{loc:{start:{line:42,column:2},end:{line:44,column:3}},type:"if",locations:[{start:{line:42,column:2},end:{line:44,column:3}},{start:{line:42,column:2},end:{line:44,column:3}}],line:42},"5":{loc:{start:{line:42,column:6},end:{line:42,column:33}},type:"binary-expr",locations:[{start:{line:42,column:6},end:{line:42,column:13}},{start:{line:42,column:17},end:{line:42,column:33}}],line:42},"6":{loc:{start:{line:56,column:4},end:{line:60,column:5}},type:"if",locations:[{start:{line:56,column:4},end:{line:60,column:5}},{start:{line:56,column:4},end:{line:60,column:5}}],line:56},"7":{loc:{start:{line:57,column:17},end:{line:59,column:67}},type:"cond-expr",locations:[{start:{line:58,column:10},end:{line:58,column:67}},{start:{line:59,column:10},end:{line:59,column:67}}],line:57},"8":{loc:{start:{line:62,column:4},end:{line:68,column:5}},type:"if",locations:[{start:{line:62,column:4},end:{line:68,column:5}},{start:{line:62,column:4},end:{line:68,column:5}}],line:62},"9":{loc:{start:{line:62,column:10},end:{line:64,column:16}},type:"cond-expr",locations:[{start:{line:63,column:9},end:{line:63,column:91}},{start:{line:64,column:8},end:{line:64,column:16}}],line:62},"10":{loc:{start:{line:63,column:9},end:{line:63,column:91}},type:"binary-expr",locations:[{start:{line:63,column:9},end:{line:63,column:30}},{start:{line:63,column:34},end:{line:63,column:91}}],line:63},"11":{loc:{start:{line:69,column:4},end:{line:69,column:49}},type:"binary-expr",locations:[{start:{line:69,column:4},end:{line:69,column:12}},{start:{line:69,column:17},end:{line:69,column:48}}],line:69},"12":{loc:{start:{line:71,column:2},end:{line:82,column:3}},type:"if",locations:[{start:{line:71,column:2},end:{line:82,column:3}},{start:{line:71,column:2},end:{line:82,column:3}}],line:71},"13":{loc:{start:{line:71,column:6},end:{line:71,column:25}},type:"binary-expr",locations:[{start:{line:71,column:6},end:{line:71,column:12}},{start:{line:71,column:16},end:{line:71,column:25}}],line:71},"14":{loc:{start:{line:76,column:4},end:{line:81,column:5}},type:"if",locations:[{start:{line:76,column:4},end:{line:81,column:5}},{start:{line:76,column:4},end:{line:81,column:5}}],line:76},"15":{loc:{start:{line:76,column:8},end:{line:79,column:70}},type:"binary-expr",locations:[{start:{line:76,column:8},end:{line:76,column:26}},{start:{line:77,column:9},end:{line:77,column:32}},{start:{line:77,column:36},end:{line:77,column:58}},{start:{line:78,column:8},end:{line:79,column:70}}],line:76},"16":{loc:{start:{line:78,column:10},end:{line:79,column:69}},type:"binary-expr",locations:[{start:{line:78,column:10},end:{line:78,column:39}},{start:{line:78,column:43},end:{line:78,column:69}},{start:{line:79,column:10},end:{line:79,column:39}},{start:{line:79,column:43},end:{line:79,column:69}}],line:78}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0],"16":[0,0,0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"7a94422a9589caf01f36c2e229be0b35c457a953"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2m2d8yr0bb=function(){return actualCoverage;};}return actualCoverage;}cov_2m2d8yr0bb();import getAllKeys from'./getAllKeys.js';/** Used to compose bitmasks for value comparisons. */const COMPARE_PARTIAL_FLAG=(cov_2m2d8yr0bb().s[0]++,1);/** Used to check objects for own properties. */const hasOwnProperty=(cov_2m2d8yr0bb().s[1]++,Object.prototype.hasOwnProperty);/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */function equalObjects(object,other,bitmask,customizer,equalFunc,stack){cov_2m2d8yr0bb().f[0]++;const isPartial=(cov_2m2d8yr0bb().s[2]++,bitmask&COMPARE_PARTIAL_FLAG);const objProps=(cov_2m2d8yr0bb().s[3]++,getAllKeys(object));const objLength=(cov_2m2d8yr0bb().s[4]++,objProps.length);const othProps=(cov_2m2d8yr0bb().s[5]++,getAllKeys(other));const othLength=(cov_2m2d8yr0bb().s[6]++,othProps.length);cov_2m2d8yr0bb().s[7]++;if((cov_2m2d8yr0bb().b[1][0]++,objLength!=othLength)&&(cov_2m2d8yr0bb().b[1][1]++,!isPartial)){cov_2m2d8yr0bb().b[0][0]++;cov_2m2d8yr0bb().s[8]++;return false;}else{cov_2m2d8yr0bb().b[0][1]++;}let key;let index=(cov_2m2d8yr0bb().s[9]++,objLength);cov_2m2d8yr0bb().s[10]++;while(index--){cov_2m2d8yr0bb().s[11]++;key=objProps[index];cov_2m2d8yr0bb().s[12]++;if(!(isPartial?(cov_2m2d8yr0bb().b[3][0]++,key in other):(cov_2m2d8yr0bb().b[3][1]++,hasOwnProperty.call(other,key)))){cov_2m2d8yr0bb().b[2][0]++;cov_2m2d8yr0bb().s[13]++;return false;}else{cov_2m2d8yr0bb().b[2][1]++;}}// Assume cyclic values are equal.
const stacked=(cov_2m2d8yr0bb().s[14]++,stack.get(object));cov_2m2d8yr0bb().s[15]++;if((cov_2m2d8yr0bb().b[5][0]++,stacked)&&(cov_2m2d8yr0bb().b[5][1]++,stack.get(other))){cov_2m2d8yr0bb().b[4][0]++;cov_2m2d8yr0bb().s[16]++;return stacked==other;}else{cov_2m2d8yr0bb().b[4][1]++;}let result=(cov_2m2d8yr0bb().s[17]++,true);cov_2m2d8yr0bb().s[18]++;stack.set(object,other);cov_2m2d8yr0bb().s[19]++;stack.set(other,object);let compared;let skipCtor=(cov_2m2d8yr0bb().s[20]++,isPartial);cov_2m2d8yr0bb().s[21]++;while(++index<objLength){cov_2m2d8yr0bb().s[22]++;key=objProps[index];const objValue=(cov_2m2d8yr0bb().s[23]++,object[key]);const othValue=(cov_2m2d8yr0bb().s[24]++,other[key]);cov_2m2d8yr0bb().s[25]++;if(customizer){cov_2m2d8yr0bb().b[6][0]++;cov_2m2d8yr0bb().s[26]++;compared=isPartial?(cov_2m2d8yr0bb().b[7][0]++,customizer(othValue,objValue,key,other,object,stack)):(cov_2m2d8yr0bb().b[7][1]++,customizer(objValue,othValue,key,object,other,stack));}else{cov_2m2d8yr0bb().b[6][1]++;}// Recursively compare objects (susceptible to call stack limits).
cov_2m2d8yr0bb().s[27]++;if(!(compared===undefined?(cov_2m2d8yr0bb().b[9][0]++,(cov_2m2d8yr0bb().b[10][0]++,objValue===othValue)||(cov_2m2d8yr0bb().b[10][1]++,equalFunc(objValue,othValue,bitmask,customizer,stack))):(cov_2m2d8yr0bb().b[9][1]++,compared))){cov_2m2d8yr0bb().b[8][0]++;cov_2m2d8yr0bb().s[28]++;result=false;cov_2m2d8yr0bb().s[29]++;break;}else{cov_2m2d8yr0bb().b[8][1]++;}cov_2m2d8yr0bb().s[30]++;(cov_2m2d8yr0bb().b[11][0]++,skipCtor)||(cov_2m2d8yr0bb().b[11][1]++,skipCtor=key=='constructor');}cov_2m2d8yr0bb().s[31]++;if((cov_2m2d8yr0bb().b[13][0]++,result)&&(cov_2m2d8yr0bb().b[13][1]++,!skipCtor)){cov_2m2d8yr0bb().b[12][0]++;const objCtor=(cov_2m2d8yr0bb().s[32]++,object.constructor);const othCtor=(cov_2m2d8yr0bb().s[33]++,other.constructor);// Non `Object` object instances with different constructors are not equal.
cov_2m2d8yr0bb().s[34]++;if((cov_2m2d8yr0bb().b[15][0]++,objCtor!=othCtor)&&(cov_2m2d8yr0bb().b[15][1]++,'constructor'in object)&&(cov_2m2d8yr0bb().b[15][2]++,'constructor'in other)&&(cov_2m2d8yr0bb().b[15][3]++,!((cov_2m2d8yr0bb().b[16][0]++,typeof objCtor==='function')&&(cov_2m2d8yr0bb().b[16][1]++,objCtor instanceof objCtor)&&(cov_2m2d8yr0bb().b[16][2]++,typeof othCtor==='function')&&(cov_2m2d8yr0bb().b[16][3]++,othCtor instanceof othCtor)))){cov_2m2d8yr0bb().b[14][0]++;cov_2m2d8yr0bb().s[35]++;result=false;}else{cov_2m2d8yr0bb().b[14][1]++;}}else{cov_2m2d8yr0bb().b[12][1]++;}cov_2m2d8yr0bb().s[36]++;stack['delete'](object);cov_2m2d8yr0bb().s[37]++;stack['delete'](other);cov_2m2d8yr0bb().s[38]++;return result;}export default equalObjects;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRBbGxLZXlzIiwiQ09NUEFSRV9QQVJUSUFMX0ZMQUciLCJoYXNPd25Qcm9wZXJ0eSIsIk9iamVjdCIsInByb3RvdHlwZSIsImVxdWFsT2JqZWN0cyIsIm9iamVjdCIsIm90aGVyIiwiYml0bWFzayIsImN1c3RvbWl6ZXIiLCJlcXVhbEZ1bmMiLCJzdGFjayIsImlzUGFydGlhbCIsIm9ialByb3BzIiwib2JqTGVuZ3RoIiwibGVuZ3RoIiwib3RoUHJvcHMiLCJvdGhMZW5ndGgiLCJrZXkiLCJpbmRleCIsImNhbGwiLCJzdGFja2VkIiwiZ2V0IiwicmVzdWx0Iiwic2V0IiwiY29tcGFyZWQiLCJza2lwQ3RvciIsIm9ialZhbHVlIiwib3RoVmFsdWUiLCJ1bmRlZmluZWQiLCJvYmpDdG9yIiwiY29uc3RydWN0b3IiLCJvdGhDdG9yIl0sInNvdXJjZXMiOlsiZXF1YWxPYmplY3RzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBnZXRBbGxLZXlzIGZyb20gJy4vZ2V0QWxsS2V5cy5qcydcclxuXHJcbi8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIHZhbHVlIGNvbXBhcmlzb25zLiAqL1xyXG5jb25zdCBDT01QQVJFX1BBUlRJQUxfRkxBRyA9IDFcclxuXHJcbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xyXG5jb25zdCBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHlcclxuXHJcbi8qKlxyXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VJc0VxdWFsRGVlcGAgZm9yIG9iamVjdHMgd2l0aCBzdXBwb3J0IGZvclxyXG4gKiBwYXJ0aWFsIGRlZXAgY29tcGFyaXNvbnMuXHJcbiAqXHJcbiAqIEBwcml2YXRlXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjb21wYXJlLlxyXG4gKiBAcGFyYW0ge09iamVjdH0gb3RoZXIgVGhlIG90aGVyIG9iamVjdCB0byBjb21wYXJlLlxyXG4gKiBAcGFyYW0ge251bWJlcn0gYml0bWFzayBUaGUgYml0bWFzayBmbGFncy4gU2VlIGBiYXNlSXNFcXVhbGAgZm9yIG1vcmUgZGV0YWlscy5cclxuICogQHBhcmFtIHtGdW5jdGlvbn0gY3VzdG9taXplciBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmlzb25zLlxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBlcXVhbEZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGRldGVybWluZSBlcXVpdmFsZW50cyBvZiB2YWx1ZXMuXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBzdGFjayBUcmFja3MgdHJhdmVyc2VkIGBvYmplY3RgIGFuZCBgb3RoZXJgIG9iamVjdHMuXHJcbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgb2JqZWN0cyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxyXG4gKi9cclxuZnVuY3Rpb24gZXF1YWxPYmplY3RzKG9iamVjdCwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spIHtcclxuICBjb25zdCBpc1BhcnRpYWwgPSBiaXRtYXNrICYgQ09NUEFSRV9QQVJUSUFMX0ZMQUdcclxuICBjb25zdCBvYmpQcm9wcyA9IGdldEFsbEtleXMob2JqZWN0KVxyXG4gIGNvbnN0IG9iakxlbmd0aCA9IG9ialByb3BzLmxlbmd0aFxyXG4gIGNvbnN0IG90aFByb3BzID0gZ2V0QWxsS2V5cyhvdGhlcilcclxuICBjb25zdCBvdGhMZW5ndGggPSBvdGhQcm9wcy5sZW5ndGhcclxuXHJcbiAgaWYgKG9iakxlbmd0aCAhPSBvdGhMZW5ndGggJiYgIWlzUGFydGlhbCkge1xyXG4gICAgcmV0dXJuIGZhbHNlXHJcbiAgfVxyXG4gIGxldCBrZXlcclxuICBsZXQgaW5kZXggPSBvYmpMZW5ndGhcclxuICB3aGlsZSAoaW5kZXgtLSkge1xyXG4gICAga2V5ID0gb2JqUHJvcHNbaW5kZXhdXHJcbiAgICBpZiAoIShpc1BhcnRpYWwgPyBrZXkgaW4gb3RoZXIgOiBoYXNPd25Qcm9wZXJ0eS5jYWxsKG90aGVyLCBrZXkpKSkge1xyXG4gICAgICByZXR1cm4gZmFsc2VcclxuICAgIH1cclxuICB9XHJcbiAgLy8gQXNzdW1lIGN5Y2xpYyB2YWx1ZXMgYXJlIGVxdWFsLlxyXG4gIGNvbnN0IHN0YWNrZWQgPSBzdGFjay5nZXQob2JqZWN0KVxyXG4gIGlmIChzdGFja2VkICYmIHN0YWNrLmdldChvdGhlcikpIHtcclxuICAgIHJldHVybiBzdGFja2VkID09IG90aGVyXHJcbiAgfVxyXG4gIGxldCByZXN1bHQgPSB0cnVlXHJcbiAgc3RhY2suc2V0KG9iamVjdCwgb3RoZXIpXHJcbiAgc3RhY2suc2V0KG90aGVyLCBvYmplY3QpXHJcblxyXG4gIGxldCBjb21wYXJlZFxyXG4gIGxldCBza2lwQ3RvciA9IGlzUGFydGlhbFxyXG4gIHdoaWxlICgrK2luZGV4IDwgb2JqTGVuZ3RoKSB7XHJcbiAgICBrZXkgPSBvYmpQcm9wc1tpbmRleF1cclxuICAgIGNvbnN0IG9ialZhbHVlID0gb2JqZWN0W2tleV1cclxuICAgIGNvbnN0IG90aFZhbHVlID0gb3RoZXJba2V5XVxyXG5cclxuICAgIGlmIChjdXN0b21pemVyKSB7XHJcbiAgICAgIGNvbXBhcmVkID0gaXNQYXJ0aWFsXHJcbiAgICAgICAgPyBjdXN0b21pemVyKG90aFZhbHVlLCBvYmpWYWx1ZSwga2V5LCBvdGhlciwgb2JqZWN0LCBzdGFjaylcclxuICAgICAgICA6IGN1c3RvbWl6ZXIob2JqVmFsdWUsIG90aFZhbHVlLCBrZXksIG9iamVjdCwgb3RoZXIsIHN0YWNrKVxyXG4gICAgfVxyXG4gICAgLy8gUmVjdXJzaXZlbHkgY29tcGFyZSBvYmplY3RzIChzdXNjZXB0aWJsZSB0byBjYWxsIHN0YWNrIGxpbWl0cykuXHJcbiAgICBpZiAoIShjb21wYXJlZCA9PT0gdW5kZWZpbmVkXHJcbiAgICAgID8gKG9ialZhbHVlID09PSBvdGhWYWx1ZSB8fCBlcXVhbEZ1bmMob2JqVmFsdWUsIG90aFZhbHVlLCBiaXRtYXNrLCBjdXN0b21pemVyLCBzdGFjaykpXHJcbiAgICAgIDogY29tcGFyZWRcclxuICAgICkpIHtcclxuICAgICAgcmVzdWx0ID0gZmFsc2VcclxuICAgICAgYnJlYWtcclxuICAgIH1cclxuICAgIHNraXBDdG9yIHx8IChza2lwQ3RvciA9IGtleSA9PSAnY29uc3RydWN0b3InKVxyXG4gIH1cclxuICBpZiAocmVzdWx0ICYmICFza2lwQ3Rvcikge1xyXG4gICAgY29uc3Qgb2JqQ3RvciA9IG9iamVjdC5jb25zdHJ1Y3RvclxyXG4gICAgY29uc3Qgb3RoQ3RvciA9IG90aGVyLmNvbnN0cnVjdG9yXHJcblxyXG4gICAgLy8gTm9uIGBPYmplY3RgIG9iamVjdCBpbnN0YW5jZXMgd2l0aCBkaWZmZXJlbnQgY29uc3RydWN0b3JzIGFyZSBub3QgZXF1YWwuXHJcbiAgICBpZiAob2JqQ3RvciAhPSBvdGhDdG9yICYmXHJcbiAgICAgICAgKCdjb25zdHJ1Y3RvcicgaW4gb2JqZWN0ICYmICdjb25zdHJ1Y3RvcicgaW4gb3RoZXIpICYmXHJcbiAgICAgICAgISh0eXBlb2Ygb2JqQ3RvciA9PT0gJ2Z1bmN0aW9uJyAmJiBvYmpDdG9yIGluc3RhbmNlb2Ygb2JqQ3RvciAmJlxyXG4gICAgICAgICAgdHlwZW9mIG90aEN0b3IgPT09ICdmdW5jdGlvbicgJiYgb3RoQ3RvciBpbnN0YW5jZW9mIG90aEN0b3IpKSB7XHJcbiAgICAgIHJlc3VsdCA9IGZhbHNlXHJcbiAgICB9XHJcbiAgfVxyXG4gIHN0YWNrWydkZWxldGUnXShvYmplY3QpXHJcbiAgc3RhY2tbJ2RlbGV0ZSddKG90aGVyKVxyXG4gIHJldHVybiByZXN1bHRcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZXF1YWxPYmplY3RzXHJcbiJdLCJtYXBwaW5ncyI6Imt5TkFlWTtBQUFBLDJGQWZaLE1BQU9BLFdBQVUsS0FBTSxpQkFBaUIsQ0FFeEMsc0RBQ0EsS0FBTUMscUJBQW9CLDBCQUFHLENBQUMsRUFFOUIsZ0RBQ0EsS0FBTUMsZUFBYywwQkFBR0MsTUFBTSxDQUFDQyxTQUFTLENBQUNGLGNBQWMsRUFFdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxRQUFTRyxhQUFZLENBQUNDLE1BQU0sQ0FBRUMsS0FBSyxDQUFFQyxPQUFPLENBQUVDLFVBQVUsQ0FBRUMsU0FBUyxDQUFFQyxLQUFLLENBQUUseUJBQzFFLEtBQU1DLFVBQVMsMEJBQUdKLE9BQU8sQ0FBR1Asb0JBQW9CLEVBQ2hELEtBQU1ZLFNBQVEsMEJBQUdiLFVBQVUsQ0FBQ00sTUFBTSxDQUFDLEVBQ25DLEtBQU1RLFVBQVMsMEJBQUdELFFBQVEsQ0FBQ0UsTUFBTSxFQUNqQyxLQUFNQyxTQUFRLDBCQUFHaEIsVUFBVSxDQUFDTyxLQUFLLENBQUMsRUFDbEMsS0FBTVUsVUFBUywwQkFBR0QsUUFBUSxDQUFDRCxNQUFNLDBCQUVqQyxHQUFJLDRCQUFBRCxTQUFTLEVBQUlHLFNBQVMsK0JBQUksQ0FBQ0wsU0FBUyxFQUFFLG9EQUN4QyxNQUFPLE1BQUssQ0FDZCxDQUFDLGlDQUNELEdBQUlNLElBQUcsQ0FDUCxHQUFJQyxNQUFLLDBCQUFHTCxTQUFTLDJCQUNyQixNQUFPSyxLQUFLLEVBQUUsQ0FBRSwwQkFDZEQsR0FBRyxDQUFHTCxRQUFRLENBQUNNLEtBQUssQ0FBQywwQkFDckIsR0FBSSxFQUFFUCxTQUFTLDZCQUFHTSxHQUFHLEdBQUlYLE1BQUssOEJBQUdMLGNBQWMsQ0FBQ2tCLElBQUksQ0FBQ2IsS0FBSyxDQUFFVyxHQUFHLENBQUMsRUFBQyxDQUFFLHFEQUNqRSxNQUFPLE1BQUssQ0FDZCxDQUFDLGlDQUNILENBQ0E7QUFDQSxLQUFNRyxRQUFPLDJCQUFHVixLQUFLLENBQUNXLEdBQUcsQ0FBQ2hCLE1BQU0sQ0FBQywyQkFDakMsR0FBSSw0QkFBQWUsT0FBTywrQkFBSVYsS0FBSyxDQUFDVyxHQUFHLENBQUNmLEtBQUssQ0FBQyxFQUFFLHFEQUMvQixNQUFPYyxRQUFPLEVBQUlkLEtBQUssQ0FDekIsQ0FBQyxpQ0FDRCxHQUFJZ0IsT0FBTSwyQkFBRyxJQUFJLDJCQUNqQlosS0FBSyxDQUFDYSxHQUFHLENBQUNsQixNQUFNLENBQUVDLEtBQUssQ0FBQywwQkFDeEJJLEtBQUssQ0FBQ2EsR0FBRyxDQUFDakIsS0FBSyxDQUFFRCxNQUFNLENBQUMsQ0FFeEIsR0FBSW1CLFNBQVEsQ0FDWixHQUFJQyxTQUFRLDJCQUFHZCxTQUFTLDJCQUN4QixNQUFPLEVBQUVPLEtBQUssQ0FBR0wsU0FBUyxDQUFFLDBCQUMxQkksR0FBRyxDQUFHTCxRQUFRLENBQUNNLEtBQUssQ0FBQyxDQUNyQixLQUFNUSxTQUFRLDJCQUFHckIsTUFBTSxDQUFDWSxHQUFHLENBQUMsRUFDNUIsS0FBTVUsU0FBUSwyQkFBR3JCLEtBQUssQ0FBQ1csR0FBRyxDQUFDLDJCQUUzQixHQUFJVCxVQUFVLENBQUUscURBQ2RnQixRQUFRLENBQUdiLFNBQVMsNkJBQ2hCSCxVQUFVLENBQUNtQixRQUFRLENBQUVELFFBQVEsQ0FBRVQsR0FBRyxDQUFFWCxLQUFLLENBQUVELE1BQU0sQ0FBRUssS0FBSyxDQUFDLDhCQUN6REYsVUFBVSxDQUFDa0IsUUFBUSxDQUFFQyxRQUFRLENBQUVWLEdBQUcsQ0FBRVosTUFBTSxDQUFFQyxLQUFLLENBQUVJLEtBQUssQ0FBQyxFQUMvRCxDQUFDLGlDQUNEO0FBQUEseUJBQ0EsR0FBSSxFQUFFYyxRQUFRLEdBQUtJLFNBQVMsNkJBQ3ZCLDZCQUFBRixRQUFRLEdBQUtDLFFBQVEsZ0NBQUlsQixTQUFTLENBQUNpQixRQUFRLENBQUVDLFFBQVEsQ0FBRXBCLE9BQU8sQ0FBRUMsVUFBVSxDQUFFRSxLQUFLLENBQUMsK0JBQ25GYyxRQUFRLEVBQ1gsQ0FBRSxxREFDREYsTUFBTSxDQUFHLEtBQUssMEJBQ2QsTUFDRixDQUFDLDBEQUNELDZCQUFBRyxRQUFRLGdDQUFLQSxRQUFRLENBQUdSLEdBQUcsRUFBSSxhQUFhLENBQUMsQ0FDL0MsQ0FBQyx5QkFDRCxHQUFJLDZCQUFBSyxNQUFNLGdDQUFJLENBQUNHLFFBQVEsRUFBRSw2QkFDdkIsS0FBTUksUUFBTywyQkFBR3hCLE1BQU0sQ0FBQ3lCLFdBQVcsRUFDbEMsS0FBTUMsUUFBTywyQkFBR3pCLEtBQUssQ0FBQ3dCLFdBQVcsRUFFakM7QUFBQSx5QkFDQSxHQUFJLDZCQUFBRCxPQUFPLEVBQUlFLE9BQU8sR0FDakIsMENBQWEsRUFBSTFCLE9BQU0sZ0NBQUksYUFBYSxFQUFJQyxNQUFLLENBQUMsK0JBQ25ELEVBQUUsbUNBQU91QixRQUFPLEdBQUssVUFBVSxnQ0FBSUEsT0FBTyxXQUFZQSxRQUFPLGdDQUMzRCxNQUFPRSxRQUFPLEdBQUssVUFBVSxnQ0FBSUEsT0FBTyxXQUFZQSxRQUFPLEVBQUMsRUFBRSxzREFDbEVULE1BQU0sQ0FBRyxLQUFLLENBQ2hCLENBQUMsa0NBQ0gsQ0FBQywyREFDRFosS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDTCxNQUFNLENBQUMsMEJBQ3ZCSyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUNKLEtBQUssQ0FBQywwQkFDdEIsTUFBT2dCLE9BQU0sQ0FDZixDQUVBLGNBQWVsQixhQUFZIn0=