function cov_26udjyjb3n(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\compareMultiple.js";var hash="d3034b5b81966be270f19cd03cdf2d395252d7d5";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\compareMultiple.js",statementMap:{"0":{start:{line:18,column:14},end:{line:18,column:16}},"1":{start:{line:19,column:22},end:{line:19,column:37}},"2":{start:{line:20,column:22},end:{line:20,column:36}},"3":{start:{line:21,column:17},end:{line:21,column:35}},"4":{start:{line:22,column:23},end:{line:22,column:36}},"5":{start:{line:24,column:2},end:{line:34,column:3}},"6":{start:{line:25,column:18},end:{line:25,column:61}},"7":{start:{line:26,column:18},end:{line:26,column:82}},"8":{start:{line:27,column:19},end:{line:27,column:64}},"9":{start:{line:28,column:4},end:{line:33,column:5}},"10":{start:{line:29,column:6},end:{line:31,column:7}},"11":{start:{line:30,column:8},end:{line:30,column:50}},"12":{start:{line:32,column:6},end:{line:32,column:19}},"13":{start:{line:42,column:2},end:{line:42,column:35}}},fnMap:{"0":{name:"compareMultiple",decl:{start:{line:17,column:9},end:{line:17,column:24}},loc:{start:{line:17,column:48},end:{line:43,column:1}},line:17}},branchMap:{"0":{loc:{start:{line:25,column:18},end:{line:25,column:61}},type:"cond-expr",locations:[{start:{line:25,column:41},end:{line:25,column:54}},{start:{line:25,column:57},end:{line:25,column:61}}],line:25},"1":{loc:{start:{line:26,column:18},end:{line:26,column:82}},type:"cond-expr",locations:[{start:{line:26,column:59},end:{line:26,column:64}},{start:{line:26,column:66},end:{line:26,column:82}}],line:26},"2":{loc:{start:{line:26,column:19},end:{line:26,column:55}},type:"binary-expr",locations:[{start:{line:26,column:19},end:{line:26,column:24}},{start:{line:26,column:28},end:{line:26,column:55}}],line:26},"3":{loc:{start:{line:28,column:4},end:{line:33,column:5}},type:"if",locations:[{start:{line:28,column:4},end:{line:33,column:5}},{start:{line:28,column:4},end:{line:33,column:5}}],line:28},"4":{loc:{start:{line:29,column:6},end:{line:31,column:7}},type:"if",locations:[{start:{line:29,column:6},end:{line:31,column:7}},{start:{line:29,column:6},end:{line:31,column:7}}],line:29},"5":{loc:{start:{line:29,column:10},end:{line:29,column:46}},type:"binary-expr",locations:[{start:{line:29,column:10},end:{line:29,column:15}},{start:{line:29,column:19},end:{line:29,column:46}}],line:29},"6":{loc:{start:{line:30,column:25},end:{line:30,column:49}},type:"cond-expr",locations:[{start:{line:30,column:43},end:{line:30,column:45}},{start:{line:30,column:48},end:{line:30,column:49}}],line:30}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d3034b5b81966be270f19cd03cdf2d395252d7d5"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_26udjyjb3n=function(){return actualCoverage;};}return actualCoverage;}cov_26udjyjb3n();import compareAscending from'./compareAscending.js';/**
 * Used by `orderBy` to compare multiple properties of a value to another
 * and stable sort them.
 *
 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
 * specify an order of "desc" for descending or "asc" for ascending sort order
 * of corresponding values.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {(string|function)[]} orders The order to sort by for each property.
 * @returns {number} Returns the sort order indicator for `object`.
 */function compareMultiple(object,other,orders){cov_26udjyjb3n().f[0]++;let index=(cov_26udjyjb3n().s[0]++,-1);const objCriteria=(cov_26udjyjb3n().s[1]++,object.criteria);const othCriteria=(cov_26udjyjb3n().s[2]++,other.criteria);const length=(cov_26udjyjb3n().s[3]++,objCriteria.length);const ordersLength=(cov_26udjyjb3n().s[4]++,orders.length);cov_26udjyjb3n().s[5]++;while(++index<length){const order=(cov_26udjyjb3n().s[6]++,index<ordersLength?(cov_26udjyjb3n().b[0][0]++,orders[index]):(cov_26udjyjb3n().b[0][1]++,null));const cmpFn=(cov_26udjyjb3n().s[7]++,(cov_26udjyjb3n().b[2][0]++,order)&&(cov_26udjyjb3n().b[2][1]++,typeof order==='function')?(cov_26udjyjb3n().b[1][0]++,order):(cov_26udjyjb3n().b[1][1]++,compareAscending));const result=(cov_26udjyjb3n().s[8]++,cmpFn(objCriteria[index],othCriteria[index]));cov_26udjyjb3n().s[9]++;if(result){cov_26udjyjb3n().b[3][0]++;cov_26udjyjb3n().s[10]++;if((cov_26udjyjb3n().b[5][0]++,order)&&(cov_26udjyjb3n().b[5][1]++,typeof order!=='function')){cov_26udjyjb3n().b[4][0]++;cov_26udjyjb3n().s[11]++;return result*(order=='desc'?(cov_26udjyjb3n().b[6][0]++,-1):(cov_26udjyjb3n().b[6][1]++,1));}else{cov_26udjyjb3n().b[4][1]++;}cov_26udjyjb3n().s[12]++;return result;}else{cov_26udjyjb3n().b[3][1]++;}}// Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
// that causes it, under certain circumstances, to provide the same value for
// `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
// for more details.
//
// This also ensures a stable sort in V8 and other engines.
// See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
cov_26udjyjb3n().s[13]++;return object.index-other.index;}export default compareMultiple;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb21wYXJlQXNjZW5kaW5nIiwiY29tcGFyZU11bHRpcGxlIiwib2JqZWN0Iiwib3RoZXIiLCJvcmRlcnMiLCJpbmRleCIsIm9iakNyaXRlcmlhIiwiY3JpdGVyaWEiLCJvdGhDcml0ZXJpYSIsImxlbmd0aCIsIm9yZGVyc0xlbmd0aCIsIm9yZGVyIiwiY21wRm4iLCJyZXN1bHQiXSwic291cmNlcyI6WyJjb21wYXJlTXVsdGlwbGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbXBhcmVBc2NlbmRpbmcgZnJvbSAnLi9jb21wYXJlQXNjZW5kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFVzZWQgYnkgYG9yZGVyQnlgIHRvIGNvbXBhcmUgbXVsdGlwbGUgcHJvcGVydGllcyBvZiBhIHZhbHVlIHRvIGFub3RoZXJcclxuICogYW5kIHN0YWJsZSBzb3J0IHRoZW0uXHJcbiAqXHJcbiAqIElmIGBvcmRlcnNgIGlzIHVuc3BlY2lmaWVkLCBhbGwgdmFsdWVzIGFyZSBzb3J0ZWQgaW4gYXNjZW5kaW5nIG9yZGVyLiBPdGhlcndpc2UsXHJcbiAqIHNwZWNpZnkgYW4gb3JkZXIgb2YgXCJkZXNjXCIgZm9yIGRlc2NlbmRpbmcgb3IgXCJhc2NcIiBmb3IgYXNjZW5kaW5nIHNvcnQgb3JkZXJcclxuICogb2YgY29ycmVzcG9uZGluZyB2YWx1ZXMuXHJcbiAqXHJcbiAqIEBwcml2YXRlXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjb21wYXJlLlxyXG4gKiBAcGFyYW0ge09iamVjdH0gb3RoZXIgVGhlIG90aGVyIG9iamVjdCB0byBjb21wYXJlLlxyXG4gKiBAcGFyYW0geyhzdHJpbmd8ZnVuY3Rpb24pW119IG9yZGVycyBUaGUgb3JkZXIgdG8gc29ydCBieSBmb3IgZWFjaCBwcm9wZXJ0eS5cclxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgc29ydCBvcmRlciBpbmRpY2F0b3IgZm9yIGBvYmplY3RgLlxyXG4gKi9cclxuZnVuY3Rpb24gY29tcGFyZU11bHRpcGxlKG9iamVjdCwgb3RoZXIsIG9yZGVycykge1xyXG4gIGxldCBpbmRleCA9IC0xXHJcbiAgY29uc3Qgb2JqQ3JpdGVyaWEgPSBvYmplY3QuY3JpdGVyaWFcclxuICBjb25zdCBvdGhDcml0ZXJpYSA9IG90aGVyLmNyaXRlcmlhXHJcbiAgY29uc3QgbGVuZ3RoID0gb2JqQ3JpdGVyaWEubGVuZ3RoXHJcbiAgY29uc3Qgb3JkZXJzTGVuZ3RoID0gb3JkZXJzLmxlbmd0aFxyXG5cclxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xyXG4gICAgY29uc3Qgb3JkZXIgPSBpbmRleCA8IG9yZGVyc0xlbmd0aCA/IG9yZGVyc1tpbmRleF0gOiBudWxsXHJcbiAgICBjb25zdCBjbXBGbiA9IChvcmRlciAmJiB0eXBlb2Ygb3JkZXIgPT09ICdmdW5jdGlvbicpID8gb3JkZXI6IGNvbXBhcmVBc2NlbmRpbmdcclxuICAgIGNvbnN0IHJlc3VsdCA9IGNtcEZuKG9iakNyaXRlcmlhW2luZGV4XSwgb3RoQ3JpdGVyaWFbaW5kZXhdKVxyXG4gICAgaWYgKHJlc3VsdCkge1xyXG4gICAgICBpZiAob3JkZXIgJiYgdHlwZW9mIG9yZGVyICE9PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdCAqIChvcmRlciA9PSAnZGVzYycgPyAtMSA6IDEpXHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHJlc3VsdFxyXG4gICAgfVxyXG4gIH1cclxuICAvLyBGaXhlcyBhbiBgQXJyYXkjc29ydGAgYnVnIGluIHRoZSBKUyBlbmdpbmUgZW1iZWRkZWQgaW4gQWRvYmUgYXBwbGljYXRpb25zXHJcbiAgLy8gdGhhdCBjYXVzZXMgaXQsIHVuZGVyIGNlcnRhaW4gY2lyY3Vtc3RhbmNlcywgdG8gcHJvdmlkZSB0aGUgc2FtZSB2YWx1ZSBmb3JcclxuICAvLyBgb2JqZWN0YCBhbmQgYG90aGVyYC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9qYXNoa2VuYXMvdW5kZXJzY29yZS9wdWxsLzEyNDdcclxuICAvLyBmb3IgbW9yZSBkZXRhaWxzLlxyXG4gIC8vXHJcbiAgLy8gVGhpcyBhbHNvIGVuc3VyZXMgYSBzdGFibGUgc29ydCBpbiBWOCBhbmQgb3RoZXIgZW5naW5lcy5cclxuICAvLyBTZWUgaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9OTAgZm9yIG1vcmUgZGV0YWlscy5cclxuICByZXR1cm4gb2JqZWN0LmluZGV4IC0gb3RoZXIuaW5kZXhcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29tcGFyZU11bHRpcGxlXHJcbiJdLCJtYXBwaW5ncyI6InNoR0FlWTtBQUFBLDJGQWZaLE1BQU9BLGlCQUFnQixLQUFNLHVCQUF1QixDQUVwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBU0MsZ0JBQWUsQ0FBQ0MsTUFBTSxDQUFFQyxLQUFLLENBQUVDLE1BQU0sQ0FBRSx5QkFDOUMsR0FBSUMsTUFBSywwQkFBRyxDQUFDLENBQUMsRUFDZCxLQUFNQyxZQUFXLDBCQUFHSixNQUFNLENBQUNLLFFBQVEsRUFDbkMsS0FBTUMsWUFBVywwQkFBR0wsS0FBSyxDQUFDSSxRQUFRLEVBQ2xDLEtBQU1FLE9BQU0sMEJBQUdILFdBQVcsQ0FBQ0csTUFBTSxFQUNqQyxLQUFNQyxhQUFZLDBCQUFHTixNQUFNLENBQUNLLE1BQU0sMEJBRWxDLE1BQU8sRUFBRUosS0FBSyxDQUFHSSxNQUFNLENBQUUsQ0FDdkIsS0FBTUUsTUFBSywwQkFBR04sS0FBSyxDQUFHSyxZQUFZLDZCQUFHTixNQUFNLENBQUNDLEtBQUssQ0FBQyw4QkFBRyxJQUFJLEdBQ3pELEtBQU1PLE1BQUssMEJBQUksNEJBQUFELEtBQUssK0JBQUksTUFBT0EsTUFBSyxHQUFLLFVBQVUsOEJBQUlBLEtBQUssOEJBQUVYLGdCQUFnQixHQUM5RSxLQUFNYSxPQUFNLDBCQUFHRCxLQUFLLENBQUNOLFdBQVcsQ0FBQ0QsS0FBSyxDQUFDLENBQUVHLFdBQVcsQ0FBQ0gsS0FBSyxDQUFDLENBQUMsMEJBQzVELEdBQUlRLE1BQU0sQ0FBRSxxREFDVixHQUFJLDRCQUFBRixLQUFLLCtCQUFJLE1BQU9BLE1BQUssR0FBSyxVQUFVLEVBQUUscURBQ3hDLE1BQU9FLE9BQU0sRUFBSUYsS0FBSyxFQUFJLE1BQU0sNkJBQUcsQ0FBQyxDQUFDLDhCQUFHLENBQUMsRUFBQyxDQUM1QyxDQUFDLDBEQUNELE1BQU9FLE9BQU0sQ0FDZixDQUFDLGlDQUNILENBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQSx5QkFDQSxNQUFPWCxPQUFNLENBQUNHLEtBQUssQ0FBR0YsS0FBSyxDQUFDRSxLQUFLLENBQ25DLENBRUEsY0FBZUosZ0JBQWUifQ==