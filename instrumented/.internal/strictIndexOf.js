function cov_2epwrji04d(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\strictIndexOf.js";var hash="0f08b0fffac01c3658d4850b79a6c070a02339f1";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\strictIndexOf.js",statementMap:{"0":{start:{line:12,column:14},end:{line:12,column:27}},"1":{start:{line:13,column:21},end:{line:13,column:26}},"2":{start:{line:15,column:2},end:{line:19,column:3}},"3":{start:{line:16,column:4},end:{line:18,column:5}},"4":{start:{line:17,column:6},end:{line:17,column:18}},"5":{start:{line:20,column:2},end:{line:20,column:11}}},fnMap:{"0":{name:"strictIndexOf",decl:{start:{line:11,column:9},end:{line:11,column:22}},loc:{start:{line:11,column:48},end:{line:21,column:1}},line:11}},branchMap:{"0":{loc:{start:{line:16,column:4},end:{line:18,column:5}},type:"if",locations:[{start:{line:16,column:4},end:{line:18,column:5}},{start:{line:16,column:4},end:{line:18,column:5}}],line:16}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0f08b0fffac01c3658d4850b79a6c070a02339f1"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2epwrji04d=function(){return actualCoverage;};}return actualCoverage;}cov_2epwrji04d();/**
 * A specialized version of `indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */function strictIndexOf(array,value,fromIndex){cov_2epwrji04d().f[0]++;let index=(cov_2epwrji04d().s[0]++,fromIndex-1);const{length}=(cov_2epwrji04d().s[1]++,array);cov_2epwrji04d().s[2]++;while(++index<length){cov_2epwrji04d().s[3]++;if(array[index]===value){cov_2epwrji04d().b[0][0]++;cov_2epwrji04d().s[4]++;return index;}else{cov_2epwrji04d().b[0][1]++;}}cov_2epwrji04d().s[5]++;return-1;}export default strictIndexOf;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzdHJpY3RJbmRleE9mIiwiYXJyYXkiLCJ2YWx1ZSIsImZyb21JbmRleCIsImluZGV4IiwibGVuZ3RoIl0sInNvdXJjZXMiOlsic3RyaWN0SW5kZXhPZi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBpbmRleE9mYCB3aGljaCBwZXJmb3JtcyBzdHJpY3QgZXF1YWxpdHlcclxuICogY29tcGFyaXNvbnMgb2YgdmFsdWVzLCBpLmUuIGA9PT1gLlxyXG4gKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaW5zcGVjdC5cclxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2VhcmNoIGZvci5cclxuICogQHBhcmFtIHtudW1iZXJ9IGZyb21JbmRleCBUaGUgaW5kZXggdG8gc2VhcmNoIGZyb20uXHJcbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBtYXRjaGVkIHZhbHVlLCBlbHNlIGAtMWAuXHJcbiAqL1xyXG5mdW5jdGlvbiBzdHJpY3RJbmRleE9mKGFycmF5LCB2YWx1ZSwgZnJvbUluZGV4KSB7XHJcbiAgbGV0IGluZGV4ID0gZnJvbUluZGV4IC0gMVxyXG4gIGNvbnN0IHsgbGVuZ3RoIH0gPSBhcnJheVxyXG5cclxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xyXG4gICAgaWYgKGFycmF5W2luZGV4XSA9PT0gdmFsdWUpIHtcclxuICAgICAgcmV0dXJuIGluZGV4XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiAtMVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBzdHJpY3RJbmRleE9mXHJcbiJdLCJtYXBwaW5ncyI6InN5Q0FlWTtBQUFBLDJGQWZaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBU0EsY0FBYSxDQUFDQyxLQUFLLENBQUVDLEtBQUssQ0FBRUMsU0FBUyxDQUFFLHlCQUM5QyxHQUFJQyxNQUFLLDBCQUFHRCxTQUFTLENBQUcsQ0FBQyxFQUN6QixLQUFNLENBQUVFLE1BQU8sQ0FBQywwQkFBR0osS0FBSywwQkFFeEIsTUFBTyxFQUFFRyxLQUFLLENBQUdDLE1BQU0sQ0FBRSx5QkFDdkIsR0FBSUosS0FBSyxDQUFDRyxLQUFLLENBQUMsR0FBS0YsS0FBSyxDQUFFLG9EQUMxQixNQUFPRSxNQUFLLENBQ2QsQ0FBQyxpQ0FDSCxDQUFDLHdCQUNELE1BQU8sQ0FBQyxDQUFDLENBQ1gsQ0FFQSxjQUFlSixjQUFhIn0=