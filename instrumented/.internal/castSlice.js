function cov_dfsdlwz4y(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\castSlice.js";var hash="3374b670bbc3ec4081f14252720bf49f34801d91";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\castSlice.js",statementMap:{"0":{start:{line:13,column:21},end:{line:13,column:26}},"1":{start:{line:14,column:2},end:{line:14,column:40}},"2":{start:{line:15,column:2},end:{line:15,column:69}}},fnMap:{"0":{name:"castSlice",decl:{start:{line:12,column:9},end:{line:12,column:18}},loc:{start:{line:12,column:38},end:{line:16,column:1}},line:12}},branchMap:{"0":{loc:{start:{line:14,column:8},end:{line:14,column:40}},type:"cond-expr",locations:[{start:{line:14,column:28},end:{line:14,column:34}},{start:{line:14,column:37},end:{line:14,column:40}}],line:14},"1":{loc:{start:{line:15,column:9},end:{line:15,column:69}},type:"cond-expr",locations:[{start:{line:15,column:37},end:{line:15,column:42}},{start:{line:15,column:45},end:{line:15,column:69}}],line:15},"2":{loc:{start:{line:15,column:10},end:{line:15,column:33}},type:"binary-expr",locations:[{start:{line:15,column:10},end:{line:15,column:16}},{start:{line:15,column:20},end:{line:15,column:33}}],line:15}},s:{"0":0,"1":0,"2":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3374b670bbc3ec4081f14252720bf49f34801d91"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_dfsdlwz4y=function(){return actualCoverage;};}return actualCoverage;}cov_dfsdlwz4y();import slice from'../slice.js';/**
 * Casts `array` to a slice if it's needed.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {number} start The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the cast slice.
 */function castSlice(array,start,end){cov_dfsdlwz4y().f[0]++;const{length}=(cov_dfsdlwz4y().s[0]++,array);cov_dfsdlwz4y().s[1]++;end=end===undefined?(cov_dfsdlwz4y().b[0][0]++,length):(cov_dfsdlwz4y().b[0][1]++,end);cov_dfsdlwz4y().s[2]++;return(cov_dfsdlwz4y().b[2][0]++,!start)&&(cov_dfsdlwz4y().b[2][1]++,end>=length)?(cov_dfsdlwz4y().b[1][0]++,array):(cov_dfsdlwz4y().b[1][1]++,slice(array,start,end));}export default castSlice;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzbGljZSIsImNhc3RTbGljZSIsImFycmF5Iiwic3RhcnQiLCJlbmQiLCJsZW5ndGgiLCJ1bmRlZmluZWQiXSwic291cmNlcyI6WyJjYXN0U2xpY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNsaWNlIGZyb20gJy4uL3NsaWNlLmpzJ1xyXG5cclxuLyoqXHJcbiAqIENhc3RzIGBhcnJheWAgdG8gYSBzbGljZSBpZiBpdCdzIG5lZWRlZC5cclxuICpcclxuICogQHByaXZhdGVcclxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGluc3BlY3QuXHJcbiAqIEBwYXJhbSB7bnVtYmVyfSBzdGFydCBUaGUgc3RhcnQgcG9zaXRpb24uXHJcbiAqIEBwYXJhbSB7bnVtYmVyfSBbZW5kPWFycmF5Lmxlbmd0aF0gVGhlIGVuZCBwb3NpdGlvbi5cclxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBjYXN0IHNsaWNlLlxyXG4gKi9cclxuZnVuY3Rpb24gY2FzdFNsaWNlKGFycmF5LCBzdGFydCwgZW5kKSB7XHJcbiAgY29uc3QgeyBsZW5ndGggfSA9IGFycmF5XHJcbiAgZW5kID0gZW5kID09PSB1bmRlZmluZWQgPyBsZW5ndGggOiBlbmRcclxuICByZXR1cm4gKCFzdGFydCAmJiBlbmQgPj0gbGVuZ3RoKSA/IGFycmF5IDogc2xpY2UoYXJyYXksIHN0YXJ0LCBlbmQpXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNhc3RTbGljZVxyXG4iXSwibWFwcGluZ3MiOiIwaERBZVk7QUFBQSx5RkFmWixNQUFPQSxNQUFLLEtBQU0sYUFBYSxDQUUvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxRQUFTQyxVQUFTLENBQUNDLEtBQUssQ0FBRUMsS0FBSyxDQUFFQyxHQUFHLENBQUUsd0JBQ3BDLEtBQU0sQ0FBRUMsTUFBTyxDQUFDLHlCQUFHSCxLQUFLLHlCQUN4QkUsR0FBRyxDQUFHQSxHQUFHLEdBQUtFLFNBQVMsNEJBQUdELE1BQU0sNkJBQUdELEdBQUcseUJBQ3RDLE1BQVEsNEJBQUNELEtBQUssOEJBQUlDLEdBQUcsRUFBSUMsTUFBTSw2QkFBSUgsS0FBSyw2QkFBR0YsS0FBSyxDQUFDRSxLQUFLLENBQUVDLEtBQUssQ0FBRUMsR0FBRyxDQUFDLEVBQ3JFLENBRUEsY0FBZUgsVUFBUyJ9