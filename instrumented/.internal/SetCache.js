function cov_1kuwbgs87k(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\SetCache.js";var hash="55d1cb1aa72e9a2692ae805f0bd3ab77dec7c8d0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\SetCache.js",statementMap:{"0":{start:{line:4,column:23},end:{line:4,column:50}},"1":{start:{line:16,column:16},end:{line:16,column:18}},"2":{start:{line:17,column:19},end:{line:17,column:53}},"3":{start:{line:19,column:4},end:{line:19,column:32}},"4":{start:{line:20,column:4},end:{line:22,column:5}},"5":{start:{line:21,column:6},end:{line:21,column:29}},"6":{start:{line:34,column:4},end:{line:34,column:44}},"7":{start:{line:35,column:4},end:{line:35,column:15}},"8":{start:{line:46,column:4},end:{line:46,column:35}},"9":{start:{line:50,column:0},end:{line:50,column:48}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:15,column:2},end:{line:15,column:3}},loc:{start:{line:15,column:22},end:{line:23,column:3}},line:15},"1":{name:"(anonymous_1)",decl:{start:{line:33,column:2},end:{line:33,column:3}},loc:{start:{line:33,column:13},end:{line:36,column:3}},line:33},"2":{name:"(anonymous_2)",decl:{start:{line:45,column:2},end:{line:45,column:3}},loc:{start:{line:45,column:13},end:{line:47,column:3}},line:45}},branchMap:{"0":{loc:{start:{line:17,column:19},end:{line:17,column:53}},type:"cond-expr",locations:[{start:{line:17,column:36},end:{line:17,column:37}},{start:{line:17,column:40},end:{line:17,column:53}}],line:17}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"55d1cb1aa72e9a2692ae805f0bd3ab77dec7c8d0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1kuwbgs87k=function(){return actualCoverage;};}return actualCoverage;}cov_1kuwbgs87k();import MapCache from'./MapCache.js';/** Used to stand-in for `undefined` hash values. */const HASH_UNDEFINED=(cov_1kuwbgs87k().s[0]++,'__lodash_hash_undefined__');class SetCache{/**
   * Creates an array cache object to store unique values.
   *
   * @private
   * @constructor
   * @param {Array} [values] The values to cache.
   */constructor(values){cov_1kuwbgs87k().f[0]++;let index=(cov_1kuwbgs87k().s[1]++,-1);const length=(cov_1kuwbgs87k().s[2]++,values==null?(cov_1kuwbgs87k().b[0][0]++,0):(cov_1kuwbgs87k().b[0][1]++,values.length));cov_1kuwbgs87k().s[3]++;this.__data__=new MapCache();cov_1kuwbgs87k().s[4]++;while(++index<length){cov_1kuwbgs87k().s[5]++;this.add(values[index]);}}/**
   * Adds `value` to the array cache.
   *
   * @memberOf SetCache
   * @alias push
   * @param {*} value The value to cache.
   * @returns {Object} Returns the cache instance.
   */add(value){cov_1kuwbgs87k().f[1]++;cov_1kuwbgs87k().s[6]++;this.__data__.set(value,HASH_UNDEFINED);cov_1kuwbgs87k().s[7]++;return this;}/**
   * Checks if `value` is in the array cache.
   *
   * @memberOf SetCache
   * @param {*} value The value to search for.
   * @returns {boolean} Returns `true` if `value` is found, else `false`.
   */has(value){cov_1kuwbgs87k().f[2]++;cov_1kuwbgs87k().s[8]++;return this.__data__.has(value);}}cov_1kuwbgs87k().s[9]++;SetCache.prototype.push=SetCache.prototype.add;export default SetCache;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNYXBDYWNoZSIsIkhBU0hfVU5ERUZJTkVEIiwiU2V0Q2FjaGUiLCJjb25zdHJ1Y3RvciIsInZhbHVlcyIsImluZGV4IiwibGVuZ3RoIiwiX19kYXRhX18iLCJhZGQiLCJ2YWx1ZSIsInNldCIsImhhcyIsInByb3RvdHlwZSIsInB1c2giXSwic291cmNlcyI6WyJTZXRDYWNoZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTWFwQ2FjaGUgZnJvbSAnLi9NYXBDYWNoZS5qcydcclxuXHJcbi8qKiBVc2VkIHRvIHN0YW5kLWluIGZvciBgdW5kZWZpbmVkYCBoYXNoIHZhbHVlcy4gKi9cclxuY29uc3QgSEFTSF9VTkRFRklORUQgPSAnX19sb2Rhc2hfaGFzaF91bmRlZmluZWRfXydcclxuXHJcbmNsYXNzIFNldENhY2hlIHtcclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlcyBhbiBhcnJheSBjYWNoZSBvYmplY3QgdG8gc3RvcmUgdW5pcXVlIHZhbHVlcy5cclxuICAgKlxyXG4gICAqIEBwcml2YXRlXHJcbiAgICogQGNvbnN0cnVjdG9yXHJcbiAgICogQHBhcmFtIHtBcnJheX0gW3ZhbHVlc10gVGhlIHZhbHVlcyB0byBjYWNoZS5cclxuICAgKi9cclxuICBjb25zdHJ1Y3Rvcih2YWx1ZXMpIHtcclxuICAgIGxldCBpbmRleCA9IC0xXHJcbiAgICBjb25zdCBsZW5ndGggPSB2YWx1ZXMgPT0gbnVsbCA/IDAgOiB2YWx1ZXMubGVuZ3RoXHJcblxyXG4gICAgdGhpcy5fX2RhdGFfXyA9IG5ldyBNYXBDYWNoZVxyXG4gICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcclxuICAgICAgdGhpcy5hZGQodmFsdWVzW2luZGV4XSlcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEFkZHMgYHZhbHVlYCB0byB0aGUgYXJyYXkgY2FjaGUuXHJcbiAgICpcclxuICAgKiBAbWVtYmVyT2YgU2V0Q2FjaGVcclxuICAgKiBAYWxpYXMgcHVzaFxyXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNhY2hlLlxyXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGNhY2hlIGluc3RhbmNlLlxyXG4gICAqL1xyXG4gIGFkZCh2YWx1ZSkge1xyXG4gICAgdGhpcy5fX2RhdGFfXy5zZXQodmFsdWUsIEhBU0hfVU5ERUZJTkVEKVxyXG4gICAgcmV0dXJuIHRoaXNcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGluIHRoZSBhcnJheSBjYWNoZS5cclxuICAgKlxyXG4gICAqIEBtZW1iZXJPZiBTZXRDYWNoZVxyXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNlYXJjaCBmb3IuXHJcbiAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgZm91bmQsIGVsc2UgYGZhbHNlYC5cclxuICAgKi9cclxuICBoYXModmFsdWUpIHtcclxuICAgIHJldHVybiB0aGlzLl9fZGF0YV9fLmhhcyh2YWx1ZSlcclxuICB9XHJcbn1cclxuXHJcblNldENhY2hlLnByb3RvdHlwZS5wdXNoID0gU2V0Q2FjaGUucHJvdG90eXBlLmFkZFxyXG5cclxuZXhwb3J0IGRlZmF1bHQgU2V0Q2FjaGVcclxuIl0sIm1hcHBpbmdzIjoiMDBEQWVZO0FBQUEsMkZBZlosTUFBT0EsU0FBUSxLQUFNLGVBQWUsQ0FFcEMsb0RBQ0EsS0FBTUMsZUFBYywwQkFBRywyQkFBMkIsRUFFbEQsS0FBTUMsU0FBUyxDQUViO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQ0VDLFdBQVcsQ0FBQ0MsTUFBTSxDQUFFLHlCQUNsQixHQUFJQyxNQUFLLDBCQUFHLENBQUMsQ0FBQyxFQUNkLEtBQU1DLE9BQU0sMEJBQUdGLE1BQU0sRUFBSSxJQUFJLDZCQUFHLENBQUMsOEJBQUdBLE1BQU0sQ0FBQ0UsTUFBTSwyQkFFakQsSUFBSSxDQUFDQyxRQUFRLENBQUcsR0FBSVAsU0FBUSwyQkFDNUIsTUFBTyxFQUFFSyxLQUFLLENBQUdDLE1BQU0sQ0FBRSx5QkFDdkIsSUFBSSxDQUFDRSxHQUFHLENBQUNKLE1BQU0sQ0FBQ0MsS0FBSyxDQUFDLENBQUMsQ0FDekIsQ0FDRixDQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FDRUcsR0FBRyxDQUFDQyxLQUFLLENBQUUsaURBQ1QsSUFBSSxDQUFDRixRQUFRLENBQUNHLEdBQUcsQ0FBQ0QsS0FBSyxDQUFFUixjQUFjLENBQUMseUJBQ3hDLE1BQU8sS0FBSSxDQUNiLENBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FDRVUsR0FBRyxDQUFDRixLQUFLLENBQUUsaURBQ1QsTUFBTyxLQUFJLENBQUNGLFFBQVEsQ0FBQ0ksR0FBRyxDQUFDRixLQUFLLENBQUMsQ0FDakMsQ0FDRixDQUFDLHdCQUVEUCxRQUFRLENBQUNVLFNBQVMsQ0FBQ0MsSUFBSSxDQUFHWCxRQUFRLENBQUNVLFNBQVMsQ0FBQ0osR0FBRyxDQUVoRCxjQUFlTixTQUFRIn0=