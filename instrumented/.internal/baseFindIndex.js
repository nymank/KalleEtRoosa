function cov_4sa4dz4i7(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\baseFindIndex.js";var hash="9366baa84dd8c67de7808943421970da52ea41c6";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\baseFindIndex.js",statementMap:{"0":{start:{line:12,column:21},end:{line:12,column:26}},"1":{start:{line:13,column:14},end:{line:13,column:46}},"2":{start:{line:15,column:2},end:{line:19,column:3}},"3":{start:{line:16,column:4},end:{line:18,column:5}},"4":{start:{line:17,column:6},end:{line:17,column:18}},"5":{start:{line:20,column:2},end:{line:20,column:11}}},fnMap:{"0":{name:"baseFindIndex",decl:{start:{line:11,column:9},end:{line:11,column:22}},loc:{start:{line:11,column:63},end:{line:21,column:1}},line:11}},branchMap:{"0":{loc:{start:{line:13,column:27},end:{line:13,column:45}},type:"cond-expr",locations:[{start:{line:13,column:39},end:{line:13,column:40}},{start:{line:13,column:43},end:{line:13,column:45}}],line:13},"1":{loc:{start:{line:15,column:10},end:{line:15,column:48}},type:"cond-expr",locations:[{start:{line:15,column:22},end:{line:15,column:29}},{start:{line:15,column:32},end:{line:15,column:48}}],line:15},"2":{loc:{start:{line:16,column:4},end:{line:18,column:5}},type:"if",locations:[{start:{line:16,column:4},end:{line:18,column:5}},{start:{line:16,column:4},end:{line:18,column:5}}],line:16}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"9366baa84dd8c67de7808943421970da52ea41c6"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_4sa4dz4i7=function(){return actualCoverage;};}return actualCoverage;}cov_4sa4dz4i7();/**
 * The base implementation of `findIndex` and `findLastIndex`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */function baseFindIndex(array,predicate,fromIndex,fromRight){cov_4sa4dz4i7().f[0]++;const{length}=(cov_4sa4dz4i7().s[0]++,array);let index=(cov_4sa4dz4i7().s[1]++,fromIndex+(fromRight?(cov_4sa4dz4i7().b[0][0]++,1):(cov_4sa4dz4i7().b[0][1]++,-1)));cov_4sa4dz4i7().s[2]++;while(fromRight?(cov_4sa4dz4i7().b[1][0]++,index--):(cov_4sa4dz4i7().b[1][1]++,++index<length)){cov_4sa4dz4i7().s[3]++;if(predicate(array[index],index,array)){cov_4sa4dz4i7().b[2][0]++;cov_4sa4dz4i7().s[4]++;return index;}else{cov_4sa4dz4i7().b[2][1]++;}}cov_4sa4dz4i7().s[5]++;return-1;}export default baseFindIndex;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlRmluZEluZGV4IiwiYXJyYXkiLCJwcmVkaWNhdGUiLCJmcm9tSW5kZXgiLCJmcm9tUmlnaHQiLCJsZW5ndGgiLCJpbmRleCJdLCJzb3VyY2VzIjpbImJhc2VGaW5kSW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBmaW5kSW5kZXhgIGFuZCBgZmluZExhc3RJbmRleGAuXHJcbiAqXHJcbiAqIEBwcml2YXRlXHJcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpbnNwZWN0LlxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBwcmVkaWNhdGUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cclxuICogQHBhcmFtIHtudW1iZXJ9IGZyb21JbmRleCBUaGUgaW5kZXggdG8gc2VhcmNoIGZyb20uXHJcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2Zyb21SaWdodF0gU3BlY2lmeSBpdGVyYXRpbmcgZnJvbSByaWdodCB0byBsZWZ0LlxyXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgbWF0Y2hlZCB2YWx1ZSwgZWxzZSBgLTFgLlxyXG4gKi9cclxuZnVuY3Rpb24gYmFzZUZpbmRJbmRleChhcnJheSwgcHJlZGljYXRlLCBmcm9tSW5kZXgsIGZyb21SaWdodCkge1xyXG4gIGNvbnN0IHsgbGVuZ3RoIH0gPSBhcnJheVxyXG4gIGxldCBpbmRleCA9IGZyb21JbmRleCArIChmcm9tUmlnaHQgPyAxIDogLTEpXHJcblxyXG4gIHdoaWxlICgoZnJvbVJpZ2h0ID8gaW5kZXgtLSA6ICsraW5kZXggPCBsZW5ndGgpKSB7XHJcbiAgICBpZiAocHJlZGljYXRlKGFycmF5W2luZGV4XSwgaW5kZXgsIGFycmF5KSkge1xyXG4gICAgICByZXR1cm4gaW5kZXhcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIC0xXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGJhc2VGaW5kSW5kZXhcclxuIl0sIm1hcHBpbmdzIjoiK3NEQWVZO0FBQUEseUZBZlo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxRQUFTQSxjQUFhLENBQUNDLEtBQUssQ0FBRUMsU0FBUyxDQUFFQyxTQUFTLENBQUVDLFNBQVMsQ0FBRSx3QkFDN0QsS0FBTSxDQUFFQyxNQUFPLENBQUMseUJBQUdKLEtBQUssRUFDeEIsR0FBSUssTUFBSyx5QkFBR0gsU0FBUyxFQUFJQyxTQUFTLDRCQUFHLENBQUMsNkJBQUcsQ0FBQyxDQUFDLEVBQUMseUJBRTVDLE1BQVFBLFNBQVMsNEJBQUdFLEtBQUssRUFBRSw2QkFBRyxFQUFFQSxLQUFLLENBQUdELE1BQU0sRUFBRyx3QkFDL0MsR0FBSUgsU0FBUyxDQUFDRCxLQUFLLENBQUNLLEtBQUssQ0FBQyxDQUFFQSxLQUFLLENBQUVMLEtBQUssQ0FBQyxDQUFFLGtEQUN6QyxNQUFPSyxNQUFLLENBQ2QsQ0FBQyxnQ0FDSCxDQUFDLHVCQUNELE1BQU8sQ0FBQyxDQUFDLENBQ1gsQ0FFQSxjQUFlTixjQUFhIn0=