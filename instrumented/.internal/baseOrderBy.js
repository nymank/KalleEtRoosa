function cov_10og4197h5(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\baseOrderBy.js";var hash="0042c916493771d3216e8761431e614be8bd8444";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\baseOrderBy.js",statementMap:{"0":{start:{line:7,column:17},end:{line:7,column:33}},"1":{start:{line:7,column:28},end:{line:7,column:33}},"2":{start:{line:19,column:2},end:{line:29,column:3}},"3":{start:{line:20,column:4},end:{line:26,column:6}},"4":{start:{line:21,column:6},end:{line:23,column:7}},"5":{start:{line:22,column:8},end:{line:22,column:88}},"6":{start:{line:22,column:26},end:{line:22,column:88}},"7":{start:{line:25,column:6},end:{line:25,column:21}},"8":{start:{line:28,column:4},end:{line:28,column:26}},"9":{start:{line:31,column:22},end:{line:31,column:24}},"10":{start:{line:32,column:18},end:{line:32,column:20}},"11":{start:{line:34,column:17},end:{line:34,column:76}},"12":{start:{line:36,column:2},end:{line:44,column:4}},"13":{start:{line:37,column:21},end:{line:37,column:65}},"14":{start:{line:37,column:49},end:{line:37,column:64}},"15":{start:{line:39,column:4},end:{line:43,column:5}},"16":{start:{line:46,column:2},end:{line:46,column:86}},"17":{start:{line:46,column:47},end:{line:46,column:85}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:17},end:{line:7,column:18}},loc:{start:{line:7,column:28},end:{line:7,column:33}},line:7},"1":{name:"baseOrderBy",decl:{start:{line:18,column:9},end:{line:18,column:20}},loc:{start:{line:18,column:52},end:{line:47,column:1}},line:18},"2":{name:"(anonymous_2)",decl:{start:{line:20,column:30},end:{line:20,column:31}},loc:{start:{line:20,column:44},end:{line:26,column:5}},line:20},"3":{name:"(anonymous_3)",decl:{start:{line:22,column:15},end:{line:22,column:16}},loc:{start:{line:22,column:26},end:{line:22,column:88}},line:22},"4":{name:"(anonymous_4)",decl:{start:{line:36,column:23},end:{line:36,column:24}},loc:{start:{line:36,column:34},end:{line:44,column:3}},line:36},"5":{name:"(anonymous_5)",decl:{start:{line:37,column:35},end:{line:37,column:36}},loc:{start:{line:37,column:49},end:{line:37,column:64}},line:37},"6":{name:"(anonymous_6)",decl:{start:{line:46,column:28},end:{line:46,column:29}},loc:{start:{line:46,column:47},end:{line:46,column:85}},line:46}},branchMap:{"0":{loc:{start:{line:19,column:2},end:{line:29,column:3}},type:"if",locations:[{start:{line:19,column:2},end:{line:29,column:3}},{start:{line:19,column:2},end:{line:29,column:3}}],line:19},"1":{loc:{start:{line:21,column:6},end:{line:23,column:7}},type:"if",locations:[{start:{line:21,column:6},end:{line:23,column:7}},{start:{line:21,column:6},end:{line:23,column:7}}],line:21},"2":{loc:{start:{line:22,column:41},end:{line:22,column:87}},type:"cond-expr",locations:[{start:{line:22,column:65},end:{line:22,column:76}},{start:{line:22,column:79},end:{line:22,column:87}}],line:22},"3":{loc:{start:{line:34,column:17},end:{line:34,column:76}},type:"cond-expr",locations:[{start:{line:34,column:43},end:{line:34,column:71}},{start:{line:34,column:74},end:{line:34,column:76}}],line:34}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0042c916493771d3216e8761431e614be8bd8444"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_10og4197h5=function(){return actualCoverage;};}return actualCoverage;}cov_10og4197h5();import baseEach from'./baseEach.js';import baseSortBy from'./baseSortBy.js';import baseGet from'./baseGet.js';import compareMultiple from'./compareMultiple.js';import isArrayLike from'../isArrayLike.js';cov_10og4197h5().s[0]++;const identity=value=>{cov_10og4197h5().f[0]++;cov_10og4197h5().s[1]++;return value;};/**
 * The base implementation of `orderBy` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
 * @param {string[]} orders The sort orders of `iteratees`.
 * @returns {Array} Returns the new sorted array.
 */function baseOrderBy(collection,iteratees,orders){cov_10og4197h5().f[1]++;cov_10og4197h5().s[2]++;if(iteratees.length){cov_10og4197h5().b[0][0]++;cov_10og4197h5().s[3]++;iteratees=iteratees.map(iteratee=>{cov_10og4197h5().f[2]++;cov_10og4197h5().s[4]++;if(Array.isArray(iteratee)){cov_10og4197h5().b[1][0]++;cov_10og4197h5().s[5]++;return value=>{cov_10og4197h5().f[3]++;cov_10og4197h5().s[6]++;return baseGet(value,iteratee.length===1?(cov_10og4197h5().b[2][0]++,iteratee[0]):(cov_10og4197h5().b[2][1]++,iteratee));};}else{cov_10og4197h5().b[1][1]++;}cov_10og4197h5().s[7]++;return iteratee;});}else{cov_10og4197h5().b[0][1]++;cov_10og4197h5().s[8]++;iteratees=[identity];}let criteriaIndex=(cov_10og4197h5().s[9]++,-1);let eachIndex=(cov_10og4197h5().s[10]++,-1);const result=(cov_10og4197h5().s[11]++,isArrayLike(collection)?(cov_10og4197h5().b[3][0]++,new Array(collection.length)):(cov_10og4197h5().b[3][1]++,[]));cov_10og4197h5().s[12]++;baseEach(collection,value=>{cov_10og4197h5().f[4]++;const criteria=(cov_10og4197h5().s[13]++,iteratees.map(iteratee=>{cov_10og4197h5().f[5]++;cov_10og4197h5().s[14]++;return iteratee(value);}));cov_10og4197h5().s[15]++;result[++eachIndex]={criteria,index:++criteriaIndex,value};});cov_10og4197h5().s[16]++;return baseSortBy(result,(object,other)=>{cov_10og4197h5().f[6]++;cov_10og4197h5().s[17]++;return compareMultiple(object,other,orders);});}export default baseOrderBy;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlRWFjaCIsImJhc2VTb3J0QnkiLCJiYXNlR2V0IiwiY29tcGFyZU11bHRpcGxlIiwiaXNBcnJheUxpa2UiLCJpZGVudGl0eSIsInZhbHVlIiwiYmFzZU9yZGVyQnkiLCJjb2xsZWN0aW9uIiwiaXRlcmF0ZWVzIiwib3JkZXJzIiwibGVuZ3RoIiwibWFwIiwiaXRlcmF0ZWUiLCJBcnJheSIsImlzQXJyYXkiLCJjcml0ZXJpYUluZGV4IiwiZWFjaEluZGV4IiwicmVzdWx0IiwiY3JpdGVyaWEiLCJpbmRleCIsIm9iamVjdCIsIm90aGVyIl0sInNvdXJjZXMiOlsiYmFzZU9yZGVyQnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJhc2VFYWNoIGZyb20gJy4vYmFzZUVhY2guanMnXHJcbmltcG9ydCBiYXNlU29ydEJ5IGZyb20gJy4vYmFzZVNvcnRCeS5qcydcclxuaW1wb3J0IGJhc2VHZXQgZnJvbSAnLi9iYXNlR2V0LmpzJ1xyXG5pbXBvcnQgY29tcGFyZU11bHRpcGxlIGZyb20gJy4vY29tcGFyZU11bHRpcGxlLmpzJ1xyXG5pbXBvcnQgaXNBcnJheUxpa2UgZnJvbSAnLi4vaXNBcnJheUxpa2UuanMnXHJcblxyXG5jb25zdCBpZGVudGl0eSA9ICh2YWx1ZSkgPT4gdmFsdWVcclxuXHJcbi8qKlxyXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgb3JkZXJCeWAgd2l0aG91dCBwYXJhbSBndWFyZHMuXHJcbiAqXHJcbiAqIEBwcml2YXRlXHJcbiAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cclxuICogQHBhcmFtIHtGdW5jdGlvbltdfE9iamVjdFtdfHN0cmluZ1tdfSBpdGVyYXRlZXMgVGhlIGl0ZXJhdGVlcyB0byBzb3J0IGJ5LlxyXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBvcmRlcnMgVGhlIHNvcnQgb3JkZXJzIG9mIGBpdGVyYXRlZXNgLlxyXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBzb3J0ZWQgYXJyYXkuXHJcbiAqL1xyXG5mdW5jdGlvbiBiYXNlT3JkZXJCeShjb2xsZWN0aW9uLCBpdGVyYXRlZXMsIG9yZGVycykge1xyXG4gIGlmIChpdGVyYXRlZXMubGVuZ3RoKSB7XHJcbiAgICBpdGVyYXRlZXMgPSBpdGVyYXRlZXMubWFwKChpdGVyYXRlZSkgPT4ge1xyXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShpdGVyYXRlZSkpIHtcclxuICAgICAgICByZXR1cm4gKHZhbHVlKSA9PiBiYXNlR2V0KHZhbHVlLCBpdGVyYXRlZS5sZW5ndGggPT09IDEgPyBpdGVyYXRlZVswXSA6IGl0ZXJhdGVlKVxyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gaXRlcmF0ZWVcclxuICAgIH0pXHJcbiAgfSBlbHNlIHtcclxuICAgIGl0ZXJhdGVlcyA9IFtpZGVudGl0eV1cclxuICB9XHJcblxyXG4gIGxldCBjcml0ZXJpYUluZGV4ID0gLTFcclxuICBsZXQgZWFjaEluZGV4ID0gLTFcclxuXHJcbiAgY29uc3QgcmVzdWx0ID0gaXNBcnJheUxpa2UoY29sbGVjdGlvbikgPyBuZXcgQXJyYXkoY29sbGVjdGlvbi5sZW5ndGgpIDogW11cclxuXHJcbiAgYmFzZUVhY2goY29sbGVjdGlvbiwgKHZhbHVlKSA9PiB7XHJcbiAgICBjb25zdCBjcml0ZXJpYSA9IGl0ZXJhdGVlcy5tYXAoKGl0ZXJhdGVlKSA9PiBpdGVyYXRlZSh2YWx1ZSkpXHJcblxyXG4gICAgcmVzdWx0WysrZWFjaEluZGV4XSA9IHtcclxuICAgICAgY3JpdGVyaWEsXHJcbiAgICAgIGluZGV4OiArK2NyaXRlcmlhSW5kZXgsXHJcbiAgICAgIHZhbHVlXHJcbiAgICB9XHJcbiAgfSlcclxuXHJcbiAgcmV0dXJuIGJhc2VTb3J0QnkocmVzdWx0LCAob2JqZWN0LCBvdGhlcikgPT4gY29tcGFyZU11bHRpcGxlKG9iamVjdCwgb3RoZXIsIG9yZGVycykpXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGJhc2VPcmRlckJ5XHJcbiJdLCJtYXBwaW5ncyI6Im1oSEFlWTtBQUFBLDJGQWZaLE1BQU9BLFNBQVEsS0FBTSxlQUFlLENBQ3BDLE1BQU9DLFdBQVUsS0FBTSxpQkFBaUIsQ0FDeEMsTUFBT0MsUUFBTyxLQUFNLGNBQWMsQ0FDbEMsTUFBT0MsZ0JBQWUsS0FBTSxzQkFBc0IsQ0FDbEQsTUFBT0MsWUFBVyxLQUFNLG1CQUFtQix5QkFFM0MsS0FBTUMsU0FBUSxDQUFJQyxLQUFLLEVBQUtBLDZEQUFLLENBQUQsQ0FBQyxDQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxRQUFTQyxZQUFXLENBQUNDLFVBQVUsQ0FBRUMsU0FBUyxDQUFFQyxNQUFNLENBQUUsaURBQ2xELEdBQUlELFNBQVMsQ0FBQ0UsTUFBTSxDQUFFLG9EQUNwQkYsU0FBUyxDQUFHQSxTQUFTLENBQUNHLEdBQUcsQ0FBRUMsUUFBUSxFQUFLLGlEQUN0QyxHQUFJQyxLQUFLLENBQUNDLE9BQU8sQ0FBQ0YsUUFBUSxDQUFDLENBQUUsb0RBQzNCLE1BQVFQLE1BQUssRUFBSyx1REFBQUosUUFBTyxDQUFDSSxLQUFLLENBQUVPLFFBQVEsQ0FBQ0YsTUFBTSxHQUFLLENBQUMsNkJBQUdFLFFBQVEsQ0FBQyxDQUFDLENBQUMsOEJBQUdBLFFBQVEsRUFBQyxDQUFELENBQUMsQ0FDbEYsQ0FBQyx5REFFRCxNQUFPQSxTQUFRLENBQ2pCLENBQUMsQ0FBQyxDQUNKLENBQUMsSUFBTSxvREFDTEosU0FBUyxDQUFHLENBQUNKLFFBQVEsQ0FBQyxDQUN4QixDQUVBLEdBQUlXLGNBQWEsMEJBQUcsQ0FBQyxDQUFDLEVBQ3RCLEdBQUlDLFVBQVMsMkJBQUcsQ0FBQyxDQUFDLEVBRWxCLEtBQU1DLE9BQU0sMkJBQUdkLFdBQVcsQ0FBQ0ksVUFBVSxDQUFDLDZCQUFHLEdBQUlNLE1BQUssQ0FBQ04sVUFBVSxDQUFDRyxNQUFNLENBQUMsOEJBQUcsRUFBRSw0QkFFMUVYLFFBQVEsQ0FBQ1EsVUFBVSxDQUFHRixLQUFLLEVBQUsseUJBQzlCLEtBQU1hLFNBQVEsMkJBQUdWLFNBQVMsQ0FBQ0csR0FBRyxDQUFFQyxRQUFRLEVBQUssd0RBQUFBLFNBQVEsQ0FBQ1AsS0FBSyxDQUFDLENBQUQsQ0FBQyxDQUFDLDJCQUU3RFksTUFBTSxDQUFDLEVBQUVELFNBQVMsQ0FBQyxDQUFHLENBQ3BCRSxRQUFRLENBQ1JDLEtBQUssQ0FBRSxFQUFFSixhQUFhLENBQ3RCVixLQUNGLENBQUMsQ0FDSCxDQUFDLENBQUMsMEJBRUYsTUFBT0wsV0FBVSxDQUFDaUIsTUFBTSxDQUFFLENBQUNHLE1BQU0sQ0FBRUMsS0FBSyxHQUFLLHdEQUFBbkIsZ0JBQWUsQ0FBQ2tCLE1BQU0sQ0FBRUMsS0FBSyxDQUFFWixNQUFNLENBQUMsQ0FBRCxDQUFDLENBQUMsQ0FDdEYsQ0FFQSxjQUFlSCxZQUFXIn0=