function cov_hqogqftlh(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\getAllKeys.js";var hash="008dbf0aec6c431a1af6d64873c858f9d374f42b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\getAllKeys.js",statementMap:{"0":{start:{line:12,column:17},end:{line:12,column:29}},"1":{start:{line:13,column:2},end:{line:15,column:3}},"2":{start:{line:14,column:4},end:{line:14,column:38}},"3":{start:{line:16,column:2},end:{line:16,column:15}}},fnMap:{"0":{name:"getAllKeys",decl:{start:{line:11,column:9},end:{line:11,column:19}},loc:{start:{line:11,column:28},end:{line:17,column:1}},line:11}},branchMap:{"0":{loc:{start:{line:13,column:2},end:{line:15,column:3}},type:"if",locations:[{start:{line:13,column:2},end:{line:15,column:3}},{start:{line:13,column:2},end:{line:15,column:3}}],line:13}},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"008dbf0aec6c431a1af6d64873c858f9d374f42b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_hqogqftlh=function(){return actualCoverage;};}return actualCoverage;}cov_hqogqftlh();import getSymbols from'./getSymbols.js';import keys from'../keys.js';/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */function getAllKeys(object){cov_hqogqftlh().f[0]++;const result=(cov_hqogqftlh().s[0]++,keys(object));cov_hqogqftlh().s[1]++;if(!Array.isArray(object)){cov_hqogqftlh().b[0][0]++;cov_hqogqftlh().s[2]++;result.push(...getSymbols(object));}else{cov_hqogqftlh().b[0][1]++;}cov_hqogqftlh().s[3]++;return result;}export default getAllKeys;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRTeW1ib2xzIiwia2V5cyIsImdldEFsbEtleXMiLCJvYmplY3QiLCJyZXN1bHQiLCJBcnJheSIsImlzQXJyYXkiLCJwdXNoIl0sInNvdXJjZXMiOlsiZ2V0QWxsS2V5cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ2V0U3ltYm9scyBmcm9tICcuL2dldFN5bWJvbHMuanMnXHJcbmltcG9ydCBrZXlzIGZyb20gJy4uL2tleXMuanMnXHJcblxyXG4vKipcclxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiBvd24gZW51bWVyYWJsZSBwcm9wZXJ0eSBuYW1lcyBhbmQgc3ltYm9scyBvZiBgb2JqZWN0YC5cclxuICpcclxuICogQHByaXZhdGVcclxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxyXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzIGFuZCBzeW1ib2xzLlxyXG4gKi9cclxuZnVuY3Rpb24gZ2V0QWxsS2V5cyhvYmplY3QpIHtcclxuICBjb25zdCByZXN1bHQgPSBrZXlzKG9iamVjdClcclxuICBpZiAoIUFycmF5LmlzQXJyYXkob2JqZWN0KSkge1xyXG4gICAgcmVzdWx0LnB1c2goLi4uZ2V0U3ltYm9scyhvYmplY3QpKVxyXG4gIH1cclxuICByZXR1cm4gcmVzdWx0XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGdldEFsbEtleXNcclxuIl0sIm1hcHBpbmdzIjoia3FDQWVZO0FBQUEseUZBZlosTUFBT0EsV0FBVSxLQUFNLGlCQUFpQixDQUN4QyxNQUFPQyxLQUFJLEtBQU0sWUFBWSxDQUU3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVNDLFdBQVUsQ0FBQ0MsTUFBTSxDQUFFLHdCQUMxQixLQUFNQyxPQUFNLHlCQUFHSCxJQUFJLENBQUNFLE1BQU0sQ0FBQyx5QkFDM0IsR0FBSSxDQUFDRSxLQUFLLENBQUNDLE9BQU8sQ0FBQ0gsTUFBTSxDQUFDLENBQUUsa0RBQzFCQyxNQUFNLENBQUNHLElBQUksQ0FBQyxHQUFHUCxVQUFVLENBQUNHLE1BQU0sQ0FBQyxDQUFDLENBQ3BDLENBQUMsdURBQ0QsTUFBT0MsT0FBTSxDQUNmLENBRUEsY0FBZUYsV0FBVSJ9