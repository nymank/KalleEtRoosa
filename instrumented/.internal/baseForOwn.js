function cov_uludfodjo(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\baseForOwn.js";var hash="ec4246035db4c8311ca17d2543e99d84e09019b8";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\baseForOwn.js",statementMap:{"0":{start:{line:13,column:2},end:{line:13,column:50}}},fnMap:{"0":{name:"baseForOwn",decl:{start:{line:12,column:9},end:{line:12,column:19}},loc:{start:{line:12,column:38},end:{line:14,column:1}},line:12}},branchMap:{"0":{loc:{start:{line:13,column:9},end:{line:13,column:50}},type:"binary-expr",locations:[{start:{line:13,column:9},end:{line:13,column:15}},{start:{line:13,column:19},end:{line:13,column:50}}],line:13}},s:{"0":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ec4246035db4c8311ca17d2543e99d84e09019b8"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_uludfodjo=function(){return actualCoverage;};}return actualCoverage;}cov_uludfodjo();import baseFor from'./baseFor.js';import keys from'../keys.js';/**
 * The base implementation of `forOwn`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */function baseForOwn(object,iteratee){cov_uludfodjo().f[0]++;cov_uludfodjo().s[0]++;return(cov_uludfodjo().b[0][0]++,object)&&(cov_uludfodjo().b[0][1]++,baseFor(object,iteratee,keys));}export default baseForOwn;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlRm9yIiwia2V5cyIsImJhc2VGb3JPd24iLCJvYmplY3QiLCJpdGVyYXRlZSJdLCJzb3VyY2VzIjpbImJhc2VGb3JPd24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJhc2VGb3IgZnJvbSAnLi9iYXNlRm9yLmpzJ1xyXG5pbXBvcnQga2V5cyBmcm9tICcuLi9rZXlzLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBmb3JPd25gLlxyXG4gKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gaXRlcmF0ZSBvdmVyLlxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxyXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLlxyXG4gKi9cclxuZnVuY3Rpb24gYmFzZUZvck93bihvYmplY3QsIGl0ZXJhdGVlKSB7XHJcbiAgcmV0dXJuIG9iamVjdCAmJiBiYXNlRm9yKG9iamVjdCwgaXRlcmF0ZWUsIGtleXMpXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGJhc2VGb3JPd25cclxuIl0sIm1hcHBpbmdzIjoidy9CQWVZO0FBQUEseUZBZlosTUFBT0EsUUFBTyxLQUFNLGNBQWMsQ0FDbEMsTUFBT0MsS0FBSSxLQUFNLFlBQVksQ0FFN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVNDLFdBQVUsQ0FBQ0MsTUFBTSxDQUFFQyxRQUFRLENBQUUsK0NBQ3BDLE1BQU8sMkJBQUFELE1BQU0sOEJBQUlILE9BQU8sQ0FBQ0csTUFBTSxDQUFFQyxRQUFRLENBQUVILElBQUksQ0FBQyxFQUNsRCxDQUVBLGNBQWVDLFdBQVUifQ==