function cov_2oks1rv5g1(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\baseEach.js";var hash="02a61e6850bf69384f6eb5e4e0eedb9ae21e7c3e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\baseEach.js",statementMap:{"0":{start:{line:13,column:2},end:{line:15,column:3}},"1":{start:{line:14,column:4},end:{line:14,column:21}},"2":{start:{line:16,column:2},end:{line:18,column:3}},"3":{start:{line:17,column:4},end:{line:17,column:43}},"4":{start:{line:19,column:17},end:{line:19,column:34}},"5":{start:{line:20,column:19},end:{line:20,column:37}},"6":{start:{line:21,column:14},end:{line:21,column:16}},"7":{start:{line:23,column:2},end:{line:27,column:3}},"8":{start:{line:24,column:4},end:{line:26,column:5}},"9":{start:{line:25,column:6},end:{line:25,column:11}},"10":{start:{line:28,column:2},end:{line:28,column:19}}},fnMap:{"0":{name:"baseEach",decl:{start:{line:12,column:9},end:{line:12,column:17}},loc:{start:{line:12,column:40},end:{line:29,column:1}},line:12}},branchMap:{"0":{loc:{start:{line:13,column:2},end:{line:15,column:3}},type:"if",locations:[{start:{line:13,column:2},end:{line:15,column:3}},{start:{line:13,column:2},end:{line:15,column:3}}],line:13},"1":{loc:{start:{line:16,column:2},end:{line:18,column:3}},type:"if",locations:[{start:{line:16,column:2},end:{line:18,column:3}},{start:{line:16,column:2},end:{line:18,column:3}}],line:16},"2":{loc:{start:{line:24,column:4},end:{line:26,column:5}},type:"if",locations:[{start:{line:24,column:4},end:{line:26,column:5}},{start:{line:24,column:4},end:{line:26,column:5}}],line:24}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"02a61e6850bf69384f6eb5e4e0eedb9ae21e7c3e"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2oks1rv5g1=function(){return actualCoverage;};}return actualCoverage;}cov_2oks1rv5g1();import baseForOwn from'./baseForOwn.js';import isArrayLike from'../isArrayLike.js';/**
 * The base implementation of `forEach`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */function baseEach(collection,iteratee){cov_2oks1rv5g1().f[0]++;cov_2oks1rv5g1().s[0]++;if(collection==null){cov_2oks1rv5g1().b[0][0]++;cov_2oks1rv5g1().s[1]++;return collection;}else{cov_2oks1rv5g1().b[0][1]++;}cov_2oks1rv5g1().s[2]++;if(!isArrayLike(collection)){cov_2oks1rv5g1().b[1][0]++;cov_2oks1rv5g1().s[3]++;return baseForOwn(collection,iteratee);}else{cov_2oks1rv5g1().b[1][1]++;}const length=(cov_2oks1rv5g1().s[4]++,collection.length);const iterable=(cov_2oks1rv5g1().s[5]++,Object(collection));let index=(cov_2oks1rv5g1().s[6]++,-1);cov_2oks1rv5g1().s[7]++;while(++index<length){cov_2oks1rv5g1().s[8]++;if(iteratee(iterable[index],index,iterable)===false){cov_2oks1rv5g1().b[2][0]++;cov_2oks1rv5g1().s[9]++;break;}else{cov_2oks1rv5g1().b[2][1]++;}}cov_2oks1rv5g1().s[10]++;return collection;}export default baseEach;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlRm9yT3duIiwiaXNBcnJheUxpa2UiLCJiYXNlRWFjaCIsImNvbGxlY3Rpb24iLCJpdGVyYXRlZSIsImxlbmd0aCIsIml0ZXJhYmxlIiwiT2JqZWN0IiwiaW5kZXgiXSwic291cmNlcyI6WyJiYXNlRWFjaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZUZvck93biBmcm9tICcuL2Jhc2VGb3JPd24uanMnXHJcbmltcG9ydCBpc0FycmF5TGlrZSBmcm9tICcuLi9pc0FycmF5TGlrZS5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgZm9yRWFjaGAuXHJcbiAqXHJcbiAqIEBwcml2YXRlXHJcbiAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cclxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cclxuICogQHJldHVybnMge0FycmF5fE9iamVjdH0gUmV0dXJucyBgY29sbGVjdGlvbmAuXHJcbiAqL1xyXG5mdW5jdGlvbiBiYXNlRWFjaChjb2xsZWN0aW9uLCBpdGVyYXRlZSkge1xyXG4gIGlmIChjb2xsZWN0aW9uID09IG51bGwpIHtcclxuICAgIHJldHVybiBjb2xsZWN0aW9uXHJcbiAgfVxyXG4gIGlmICghaXNBcnJheUxpa2UoY29sbGVjdGlvbikpIHtcclxuICAgIHJldHVybiBiYXNlRm9yT3duKGNvbGxlY3Rpb24sIGl0ZXJhdGVlKVxyXG4gIH1cclxuICBjb25zdCBsZW5ndGggPSBjb2xsZWN0aW9uLmxlbmd0aFxyXG4gIGNvbnN0IGl0ZXJhYmxlID0gT2JqZWN0KGNvbGxlY3Rpb24pXHJcbiAgbGV0IGluZGV4ID0gLTFcclxuXHJcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcclxuICAgIGlmIChpdGVyYXRlZShpdGVyYWJsZVtpbmRleF0sIGluZGV4LCBpdGVyYWJsZSkgPT09IGZhbHNlKSB7XHJcbiAgICAgIGJyZWFrXHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBjb2xsZWN0aW9uXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGJhc2VFYWNoXHJcbiJdLCJtYXBwaW5ncyI6Ink5REFlWTtBQUFBLDJGQWZaLE1BQU9BLFdBQVUsS0FBTSxpQkFBaUIsQ0FDeEMsTUFBT0MsWUFBVyxLQUFNLG1CQUFtQixDQUUzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBU0MsU0FBUSxDQUFDQyxVQUFVLENBQUVDLFFBQVEsQ0FBRSxpREFDdEMsR0FBSUQsVUFBVSxFQUFJLElBQUksQ0FBRSxvREFDdEIsTUFBT0EsV0FBVSxDQUNuQixDQUFDLHlEQUNELEdBQUksQ0FBQ0YsV0FBVyxDQUFDRSxVQUFVLENBQUMsQ0FBRSxvREFDNUIsTUFBT0gsV0FBVSxDQUFDRyxVQUFVLENBQUVDLFFBQVEsQ0FBQyxDQUN6QyxDQUFDLGlDQUNELEtBQU1DLE9BQU0sMEJBQUdGLFVBQVUsQ0FBQ0UsTUFBTSxFQUNoQyxLQUFNQyxTQUFRLDBCQUFHQyxNQUFNLENBQUNKLFVBQVUsQ0FBQyxFQUNuQyxHQUFJSyxNQUFLLDBCQUFHLENBQUMsQ0FBQywwQkFFZCxNQUFPLEVBQUVBLEtBQUssQ0FBR0gsTUFBTSxDQUFFLHlCQUN2QixHQUFJRCxRQUFRLENBQUNFLFFBQVEsQ0FBQ0UsS0FBSyxDQUFDLENBQUVBLEtBQUssQ0FBRUYsUUFBUSxDQUFDLEdBQUssS0FBSyxDQUFFLG9EQUN4RCxNQUNGLENBQUMsaUNBQ0gsQ0FBQyx5QkFDRCxNQUFPSCxXQUFVLENBQ25CLENBRUEsY0FBZUQsU0FBUSJ9