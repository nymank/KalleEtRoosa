function cov_xunssl6w7(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\baseUpdate.js";var hash="3b5db8c9656d0f3bf57584cfef97c43a9e5b0a3f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\baseUpdate.js",statementMap:{"0":{start:{line:15,column:2},end:{line:15,column:74}}},fnMap:{"0":{name:"baseUpdate",decl:{start:{line:14,column:9},end:{line:14,column:19}},loc:{start:{line:14,column:55},end:{line:16,column:1}},line:14}},branchMap:{},s:{"0":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3b5db8c9656d0f3bf57584cfef97c43a9e5b0a3f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_xunssl6w7=function(){return actualCoverage;};}return actualCoverage;}cov_xunssl6w7();import baseGet from'./baseGet.js';import baseSet from'./baseSet.js';/**
 * The base implementation of `update`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to update.
 * @param {Function} updater The function to produce the updated value.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */function baseUpdate(object,path,updater,customizer){cov_xunssl6w7().f[0]++;cov_xunssl6w7().s[0]++;return baseSet(object,path,updater(baseGet(object,path)),customizer);}export default baseUpdate;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlR2V0IiwiYmFzZVNldCIsImJhc2VVcGRhdGUiLCJvYmplY3QiLCJwYXRoIiwidXBkYXRlciIsImN1c3RvbWl6ZXIiXSwic291cmNlcyI6WyJiYXNlVXBkYXRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiYXNlR2V0IGZyb20gJy4vYmFzZUdldC5qcydcclxuaW1wb3J0IGJhc2VTZXQgZnJvbSAnLi9iYXNlU2V0LmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGB1cGRhdGVgLlxyXG4gKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gbW9kaWZ5LlxyXG4gKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCBvZiB0aGUgcHJvcGVydHkgdG8gdXBkYXRlLlxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSB1cGRhdGVyIFRoZSBmdW5jdGlvbiB0byBwcm9kdWNlIHRoZSB1cGRhdGVkIHZhbHVlLlxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY3VzdG9taXplcl0gVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBwYXRoIGNyZWF0aW9uLlxyXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLlxyXG4gKi9cclxuZnVuY3Rpb24gYmFzZVVwZGF0ZShvYmplY3QsIHBhdGgsIHVwZGF0ZXIsIGN1c3RvbWl6ZXIpIHtcclxuICByZXR1cm4gYmFzZVNldChvYmplY3QsIHBhdGgsIHVwZGF0ZXIoYmFzZUdldChvYmplY3QsIHBhdGgpKSwgY3VzdG9taXplcilcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYmFzZVVwZGF0ZVxyXG4iXSwibWFwcGluZ3MiOiJxeUJBZVk7QUFBQSx5RkFmWixNQUFPQSxRQUFPLEtBQU0sY0FBYyxDQUNsQyxNQUFPQyxRQUFPLEtBQU0sY0FBYyxDQUVsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVNDLFdBQVUsQ0FBQ0MsTUFBTSxDQUFFQyxJQUFJLENBQUVDLE9BQU8sQ0FBRUMsVUFBVSxDQUFFLCtDQUNyRCxNQUFPTCxRQUFPLENBQUNFLE1BQU0sQ0FBRUMsSUFBSSxDQUFFQyxPQUFPLENBQUNMLE9BQU8sQ0FBQ0csTUFBTSxDQUFFQyxJQUFJLENBQUMsQ0FBQyxDQUFFRSxVQUFVLENBQUMsQ0FDMUUsQ0FFQSxjQUFlSixXQUFVIn0=