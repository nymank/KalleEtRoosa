function cov_1u5seyvqyz(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\baseForRight.js";var hash="094528e34b2e92f8798143132969aae62488a28f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\baseForRight.js",statementMap:{"0":{start:{line:12,column:19},end:{line:12,column:33}},"1":{start:{line:13,column:16},end:{line:13,column:32}},"2":{start:{line:14,column:19},end:{line:14,column:24}},"3":{start:{line:16,column:2},end:{line:21,column:3}},"4":{start:{line:17,column:16},end:{line:17,column:29}},"5":{start:{line:18,column:4},end:{line:20,column:5}},"6":{start:{line:19,column:6},end:{line:19,column:11}},"7":{start:{line:22,column:2},end:{line:22,column:15}}},fnMap:{"0":{name:"baseForRight",decl:{start:{line:11,column:9},end:{line:11,column:21}},loc:{start:{line:11,column:50},end:{line:23,column:1}},line:11}},branchMap:{"0":{loc:{start:{line:18,column:4},end:{line:20,column:5}},type:"if",locations:[{start:{line:18,column:4},end:{line:20,column:5}},{start:{line:18,column:4},end:{line:20,column:5}}],line:18}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"094528e34b2e92f8798143132969aae62488a28f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1u5seyvqyz=function(){return actualCoverage;};}return actualCoverage;}cov_1u5seyvqyz();/**
 * This function is like `baseFor` except that it iterates over properties
 * in the opposite order.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */function baseForRight(object,iteratee,keysFunc){cov_1u5seyvqyz().f[0]++;const iterable=(cov_1u5seyvqyz().s[0]++,Object(object));const props=(cov_1u5seyvqyz().s[1]++,keysFunc(object));let{length}=(cov_1u5seyvqyz().s[2]++,props);cov_1u5seyvqyz().s[3]++;while(length--){const key=(cov_1u5seyvqyz().s[4]++,props[length]);cov_1u5seyvqyz().s[5]++;if(iteratee(iterable[key],key,iterable)===false){cov_1u5seyvqyz().b[0][0]++;cov_1u5seyvqyz().s[6]++;break;}else{cov_1u5seyvqyz().b[0][1]++;}}cov_1u5seyvqyz().s[7]++;return object;}export default baseForRight;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlRm9yUmlnaHQiLCJvYmplY3QiLCJpdGVyYXRlZSIsImtleXNGdW5jIiwiaXRlcmFibGUiLCJPYmplY3QiLCJwcm9wcyIsImxlbmd0aCIsImtleSJdLCJzb3VyY2VzIjpbImJhc2VGb3JSaWdodC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhpcyBmdW5jdGlvbiBpcyBsaWtlIGBiYXNlRm9yYCBleGNlcHQgdGhhdCBpdCBpdGVyYXRlcyBvdmVyIHByb3BlcnRpZXNcclxuICogaW4gdGhlIG9wcG9zaXRlIG9yZGVyLlxyXG4gKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gaXRlcmF0ZSBvdmVyLlxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBrZXlzRnVuYyBUaGUgZnVuY3Rpb24gdG8gZ2V0IHRoZSBrZXlzIG9mIGBvYmplY3RgLlxyXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLlxyXG4gKi9cclxuZnVuY3Rpb24gYmFzZUZvclJpZ2h0KG9iamVjdCwgaXRlcmF0ZWUsIGtleXNGdW5jKSB7XHJcbiAgY29uc3QgaXRlcmFibGUgPSBPYmplY3Qob2JqZWN0KVxyXG4gIGNvbnN0IHByb3BzID0ga2V5c0Z1bmMob2JqZWN0KVxyXG4gIGxldCB7IGxlbmd0aCB9ID0gcHJvcHNcclxuXHJcbiAgd2hpbGUgKGxlbmd0aC0tKSB7XHJcbiAgICBjb25zdCBrZXkgPSBwcm9wc1tsZW5ndGhdXHJcbiAgICBpZiAoaXRlcmF0ZWUoaXRlcmFibGVba2V5XSwga2V5LCBpdGVyYWJsZSkgPT09IGZhbHNlKSB7XHJcbiAgICAgIGJyZWFrXHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBvYmplY3RcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYmFzZUZvclJpZ2h0XHJcbiJdLCJtYXBwaW5ncyI6Iis1Q0FlWTtBQUFBLDJGQWZaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBU0EsYUFBWSxDQUFDQyxNQUFNLENBQUVDLFFBQVEsQ0FBRUMsUUFBUSxDQUFFLHlCQUNoRCxLQUFNQyxTQUFRLDBCQUFHQyxNQUFNLENBQUNKLE1BQU0sQ0FBQyxFQUMvQixLQUFNSyxNQUFLLDBCQUFHSCxRQUFRLENBQUNGLE1BQU0sQ0FBQyxFQUM5QixHQUFJLENBQUVNLE1BQU8sQ0FBQywwQkFBR0QsS0FBSywwQkFFdEIsTUFBT0MsTUFBTSxFQUFFLENBQUUsQ0FDZixLQUFNQyxJQUFHLDBCQUFHRixLQUFLLENBQUNDLE1BQU0sQ0FBQywwQkFDekIsR0FBSUwsUUFBUSxDQUFDRSxRQUFRLENBQUNJLEdBQUcsQ0FBQyxDQUFFQSxHQUFHLENBQUVKLFFBQVEsQ0FBQyxHQUFLLEtBQUssQ0FBRSxvREFDcEQsTUFDRixDQUFDLGlDQUNILENBQUMsd0JBQ0QsTUFBT0gsT0FBTSxDQUNmLENBRUEsY0FBZUQsYUFBWSJ9