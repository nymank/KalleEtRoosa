function cov_1eskgnm77y(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\basePropertyOf.js";var hash="7065dbb0c4510132867fb7a29bd52b7e5fca06bd";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\basePropertyOf.js",statementMap:{"0":{start:{line:9,column:2},end:{line:9,column:58}},"1":{start:{line:9,column:18},end:{line:9,column:58}}},fnMap:{"0":{name:"basePropertyOf",decl:{start:{line:8,column:9},end:{line:8,column:23}},loc:{start:{line:8,column:32},end:{line:10,column:1}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:9},end:{line:9,column:10}},loc:{start:{line:9,column:18},end:{line:9,column:58}},line:9}},branchMap:{"0":{loc:{start:{line:9,column:18},end:{line:9,column:58}},type:"cond-expr",locations:[{start:{line:9,column:35},end:{line:9,column:44}},{start:{line:9,column:47},end:{line:9,column:58}}],line:9}},s:{"0":0,"1":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"7065dbb0c4510132867fb7a29bd52b7e5fca06bd"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1eskgnm77y=function(){return actualCoverage;};}return actualCoverage;}cov_1eskgnm77y();/**
 * The base implementation of `propertyOf` without support for deep paths.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 */function basePropertyOf(object){cov_1eskgnm77y().f[0]++;cov_1eskgnm77y().s[0]++;return key=>{cov_1eskgnm77y().f[1]++;cov_1eskgnm77y().s[1]++;return object==null?(cov_1eskgnm77y().b[0][0]++,undefined):(cov_1eskgnm77y().b[0][1]++,object[key]);};}export default basePropertyOf;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlUHJvcGVydHlPZiIsIm9iamVjdCIsImtleSIsInVuZGVmaW5lZCJdLCJzb3VyY2VzIjpbImJhc2VQcm9wZXJ0eU9mLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgcHJvcGVydHlPZmAgd2l0aG91dCBzdXBwb3J0IGZvciBkZWVwIHBhdGhzLlxyXG4gKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXHJcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGFjY2Vzc29yIGZ1bmN0aW9uLlxyXG4gKi9cclxuZnVuY3Rpb24gYmFzZVByb3BlcnR5T2Yob2JqZWN0KSB7XHJcbiAgcmV0dXJuIChrZXkpID0+IG9iamVjdCA9PSBudWxsID8gdW5kZWZpbmVkIDogb2JqZWN0W2tleV1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYmFzZVByb3BlcnR5T2ZcclxuIl0sIm1hcHBpbmdzIjoid3NDQWVZO0FBQUEsMkZBZlo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxRQUFTQSxlQUFjLENBQUNDLE1BQU0sQ0FBRSxpREFDOUIsTUFBUUMsSUFBRyxFQUFLLHVEQUFBRCxPQUFNLEVBQUksSUFBSSw2QkFBR0UsU0FBUyw4QkFBR0YsTUFBTSxDQUFDQyxHQUFHLENBQUMsRUFBRCxDQUFDLENBQzFELENBRUEsY0FBZUYsZUFBYyJ9