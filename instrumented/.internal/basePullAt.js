function cov_yzbrbt3fj(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\basePullAt.js";var hash="79b6159ed32f60bf05a6ce2a81db613c123a79f9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\basePullAt.js",statementMap:{"0":{start:{line:14,column:15},end:{line:14,column:41}},"1":{start:{line:15,column:20},end:{line:15,column:30}},"2":{start:{line:17,column:2},end:{line:28,column:3}},"3":{start:{line:19,column:18},end:{line:19,column:33}},"4":{start:{line:20,column:4},end:{line:27,column:5}},"5":{start:{line:21,column:6},end:{line:21,column:22}},"6":{start:{line:22,column:6},end:{line:26,column:7}},"7":{start:{line:23,column:8},end:{line:23,column:30}},"8":{start:{line:25,column:8},end:{line:25,column:31}},"9":{start:{line:29,column:2},end:{line:29,column:14}}},fnMap:{"0":{name:"basePullAt",decl:{start:{line:13,column:9},end:{line:13,column:19}},loc:{start:{line:13,column:36},end:{line:30,column:1}},line:13}},branchMap:{"0":{loc:{start:{line:14,column:15},end:{line:14,column:41}},type:"cond-expr",locations:[{start:{line:14,column:23},end:{line:14,column:37}},{start:{line:14,column:40},end:{line:14,column:41}}],line:14},"1":{loc:{start:{line:20,column:4},end:{line:27,column:5}},type:"if",locations:[{start:{line:20,column:4},end:{line:27,column:5}},{start:{line:20,column:4},end:{line:27,column:5}}],line:20},"2":{loc:{start:{line:20,column:8},end:{line:20,column:50}},type:"binary-expr",locations:[{start:{line:20,column:8},end:{line:20,column:28}},{start:{line:20,column:32},end:{line:20,column:50}}],line:20},"3":{loc:{start:{line:22,column:6},end:{line:26,column:7}},type:"if",locations:[{start:{line:22,column:6},end:{line:26,column:7}},{start:{line:22,column:6},end:{line:26,column:7}}],line:22}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"79b6159ed32f60bf05a6ce2a81db613c123a79f9"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_yzbrbt3fj=function(){return actualCoverage;};}return actualCoverage;}cov_yzbrbt3fj();import baseUnset from'./baseUnset.js';import isIndex from'./isIndex.js';/**
 * The base implementation of `pullAt` without support for individual
 * indexes or capturing the removed elements.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {number[]} indexes The indexes of elements to remove.
 * @returns {Array} Returns `array`.
 */function basePullAt(array,indexes){cov_yzbrbt3fj().f[0]++;let length=(cov_yzbrbt3fj().s[0]++,array?(cov_yzbrbt3fj().b[0][0]++,indexes.length):(cov_yzbrbt3fj().b[0][1]++,0));const lastIndex=(cov_yzbrbt3fj().s[1]++,length-1);cov_yzbrbt3fj().s[2]++;while(length--){let previous;const index=(cov_yzbrbt3fj().s[3]++,indexes[length]);cov_yzbrbt3fj().s[4]++;if((cov_yzbrbt3fj().b[2][0]++,length===lastIndex)||(cov_yzbrbt3fj().b[2][1]++,index!==previous)){cov_yzbrbt3fj().b[1][0]++;cov_yzbrbt3fj().s[5]++;previous=index;cov_yzbrbt3fj().s[6]++;if(isIndex(index)){cov_yzbrbt3fj().b[3][0]++;cov_yzbrbt3fj().s[7]++;array.splice(index,1);}else{cov_yzbrbt3fj().b[3][1]++;cov_yzbrbt3fj().s[8]++;baseUnset(array,index);}}else{cov_yzbrbt3fj().b[1][1]++;}}cov_yzbrbt3fj().s[9]++;return array;}export default basePullAt;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlVW5zZXQiLCJpc0luZGV4IiwiYmFzZVB1bGxBdCIsImFycmF5IiwiaW5kZXhlcyIsImxlbmd0aCIsImxhc3RJbmRleCIsInByZXZpb3VzIiwiaW5kZXgiLCJzcGxpY2UiXSwic291cmNlcyI6WyJiYXNlUHVsbEF0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiYXNlVW5zZXQgZnJvbSAnLi9iYXNlVW5zZXQuanMnXHJcbmltcG9ydCBpc0luZGV4IGZyb20gJy4vaXNJbmRleC5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgcHVsbEF0YCB3aXRob3V0IHN1cHBvcnQgZm9yIGluZGl2aWR1YWxcclxuICogaW5kZXhlcyBvciBjYXB0dXJpbmcgdGhlIHJlbW92ZWQgZWxlbWVudHMuXHJcbiAqXHJcbiAqIEBwcml2YXRlXHJcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBtb2RpZnkuXHJcbiAqIEBwYXJhbSB7bnVtYmVyW119IGluZGV4ZXMgVGhlIGluZGV4ZXMgb2YgZWxlbWVudHMgdG8gcmVtb3ZlLlxyXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC5cclxuICovXHJcbmZ1bmN0aW9uIGJhc2VQdWxsQXQoYXJyYXksIGluZGV4ZXMpIHtcclxuICBsZXQgbGVuZ3RoID0gYXJyYXkgPyBpbmRleGVzLmxlbmd0aCA6IDBcclxuICBjb25zdCBsYXN0SW5kZXggPSBsZW5ndGggLSAxXHJcblxyXG4gIHdoaWxlIChsZW5ndGgtLSkge1xyXG4gICAgbGV0IHByZXZpb3VzXHJcbiAgICBjb25zdCBpbmRleCA9IGluZGV4ZXNbbGVuZ3RoXVxyXG4gICAgaWYgKGxlbmd0aCA9PT0gbGFzdEluZGV4IHx8IGluZGV4ICE9PSBwcmV2aW91cykge1xyXG4gICAgICBwcmV2aW91cyA9IGluZGV4XHJcbiAgICAgIGlmIChpc0luZGV4KGluZGV4KSkge1xyXG4gICAgICAgIGFycmF5LnNwbGljZShpbmRleCwgMSlcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBiYXNlVW5zZXQoYXJyYXksIGluZGV4KVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBhcnJheVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBiYXNlUHVsbEF0XHJcbiJdLCJtYXBwaW5ncyI6ImtvRUFlWTtBQUFBLHlGQWZaLE1BQU9BLFVBQVMsS0FBTSxnQkFBZ0IsQ0FDdEMsTUFBT0MsUUFBTyxLQUFNLGNBQWMsQ0FFbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBU0MsV0FBVSxDQUFDQyxLQUFLLENBQUVDLE9BQU8sQ0FBRSx3QkFDbEMsR0FBSUMsT0FBTSx5QkFBR0YsS0FBSyw0QkFBR0MsT0FBTyxDQUFDQyxNQUFNLDZCQUFHLENBQUMsR0FDdkMsS0FBTUMsVUFBUyx5QkFBR0QsTUFBTSxDQUFHLENBQUMseUJBRTVCLE1BQU9BLE1BQU0sRUFBRSxDQUFFLENBQ2YsR0FBSUUsU0FBUSxDQUNaLEtBQU1DLE1BQUsseUJBQUdKLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDLHlCQUM3QixHQUFJLDJCQUFBQSxNQUFNLEdBQUtDLFNBQVMsOEJBQUlFLEtBQUssR0FBS0QsUUFBUSxFQUFFLGtEQUM5Q0EsUUFBUSxDQUFHQyxLQUFLLHdCQUNoQixHQUFJUCxPQUFPLENBQUNPLEtBQUssQ0FBQyxDQUFFLGtEQUNsQkwsS0FBSyxDQUFDTSxNQUFNLENBQUNELEtBQUssQ0FBRSxDQUFDLENBQUMsQ0FDeEIsQ0FBQyxJQUFNLGtEQUNMUixTQUFTLENBQUNHLEtBQUssQ0FBRUssS0FBSyxDQUFDLENBQ3pCLENBQ0YsQ0FBQyxnQ0FDSCxDQUFDLHVCQUNELE1BQU9MLE1BQUssQ0FDZCxDQUVBLGNBQWVELFdBQVUifQ==