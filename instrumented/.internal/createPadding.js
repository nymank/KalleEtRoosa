function cov_228grjmz8n(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\createPadding.js";var hash="de92122edd513230965d1ecd1c5fa0ea6b143314";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\createPadding.js",statementMap:{"0":{start:{line:18,column:2},end:{line:18,column:57}},"1":{start:{line:20,column:22},end:{line:20,column:34}},"2":{start:{line:21,column:2},end:{line:23,column:3}},"3":{start:{line:22,column:4},end:{line:22,column:54}},"4":{start:{line:24,column:17},end:{line:24,column:69}},"5":{start:{line:25,column:2},end:{line:27,column:29}}},fnMap:{"0":{name:"createPadding",decl:{start:{line:17,column:9},end:{line:17,column:22}},loc:{start:{line:17,column:38},end:{line:28,column:1}},line:17}},branchMap:{"0":{loc:{start:{line:18,column:10},end:{line:18,column:57}},type:"cond-expr",locations:[{start:{line:18,column:32},end:{line:18,column:35}},{start:{line:18,column:38},end:{line:18,column:57}}],line:18},"1":{loc:{start:{line:21,column:2},end:{line:23,column:3}},type:"if",locations:[{start:{line:21,column:2},end:{line:23,column:3}},{start:{line:21,column:2},end:{line:23,column:3}}],line:21},"2":{loc:{start:{line:22,column:11},end:{line:22,column:54}},type:"cond-expr",locations:[{start:{line:22,column:25},end:{line:22,column:46}},{start:{line:22,column:49},end:{line:22,column:54}}],line:22},"3":{loc:{start:{line:25,column:9},end:{line:27,column:29}},type:"cond-expr",locations:[{start:{line:26,column:6},end:{line:26,column:58}},{start:{line:27,column:6},end:{line:27,column:29}}],line:25}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"de92122edd513230965d1ecd1c5fa0ea6b143314"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_228grjmz8n=function(){return actualCoverage;};}return actualCoverage;}cov_228grjmz8n();import repeat from'../repeat.js';import baseToString from'./baseToString.js';import castSlice from'./castSlice.js';import hasUnicode from'./hasUnicode.js';import stringSize from'./stringSize.js';import stringToArray from'./stringToArray.js';/**
 * Creates the padding for `string` based on `length`. The `chars` string
 * is truncated if the number of characters exceeds `length`.
 *
 * @private
 * @param {number} length The padding length.
 * @param {string} [chars=' '] The string used as padding.
 * @returns {string} Returns the padding for `string`.
 */function createPadding(length,chars){cov_228grjmz8n().f[0]++;cov_228grjmz8n().s[0]++;chars=chars===undefined?(cov_228grjmz8n().b[0][0]++,' '):(cov_228grjmz8n().b[0][1]++,baseToString(chars));const charsLength=(cov_228grjmz8n().s[1]++,chars.length);cov_228grjmz8n().s[2]++;if(charsLength<2){cov_228grjmz8n().b[1][0]++;cov_228grjmz8n().s[3]++;return charsLength?(cov_228grjmz8n().b[2][0]++,repeat(chars,length)):(cov_228grjmz8n().b[2][1]++,chars);}else{cov_228grjmz8n().b[1][1]++;}const result=(cov_228grjmz8n().s[4]++,repeat(chars,Math.ceil(length/stringSize(chars))));cov_228grjmz8n().s[5]++;return hasUnicode(chars)?(cov_228grjmz8n().b[3][0]++,castSlice(stringToArray(result),0,length).join('')):(cov_228grjmz8n().b[3][1]++,result.slice(0,length));}export default createPadding;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXBlYXQiLCJiYXNlVG9TdHJpbmciLCJjYXN0U2xpY2UiLCJoYXNVbmljb2RlIiwic3RyaW5nU2l6ZSIsInN0cmluZ1RvQXJyYXkiLCJjcmVhdGVQYWRkaW5nIiwibGVuZ3RoIiwiY2hhcnMiLCJ1bmRlZmluZWQiLCJjaGFyc0xlbmd0aCIsInJlc3VsdCIsIk1hdGgiLCJjZWlsIiwiam9pbiIsInNsaWNlIl0sInNvdXJjZXMiOlsiY3JlYXRlUGFkZGluZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmVwZWF0IGZyb20gJy4uL3JlcGVhdC5qcydcclxuaW1wb3J0IGJhc2VUb1N0cmluZyBmcm9tICcuL2Jhc2VUb1N0cmluZy5qcydcclxuaW1wb3J0IGNhc3RTbGljZSBmcm9tICcuL2Nhc3RTbGljZS5qcydcclxuaW1wb3J0IGhhc1VuaWNvZGUgZnJvbSAnLi9oYXNVbmljb2RlLmpzJ1xyXG5pbXBvcnQgc3RyaW5nU2l6ZSBmcm9tICcuL3N0cmluZ1NpemUuanMnXHJcbmltcG9ydCBzdHJpbmdUb0FycmF5IGZyb20gJy4vc3RyaW5nVG9BcnJheS5qcydcclxuXHJcbi8qKlxyXG4gKiBDcmVhdGVzIHRoZSBwYWRkaW5nIGZvciBgc3RyaW5nYCBiYXNlZCBvbiBgbGVuZ3RoYC4gVGhlIGBjaGFyc2Agc3RyaW5nXHJcbiAqIGlzIHRydW5jYXRlZCBpZiB0aGUgbnVtYmVyIG9mIGNoYXJhY3RlcnMgZXhjZWVkcyBgbGVuZ3RoYC5cclxuICpcclxuICogQHByaXZhdGVcclxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aCBUaGUgcGFkZGluZyBsZW5ndGguXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBbY2hhcnM9JyAnXSBUaGUgc3RyaW5nIHVzZWQgYXMgcGFkZGluZy5cclxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgcGFkZGluZyBmb3IgYHN0cmluZ2AuXHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVQYWRkaW5nKGxlbmd0aCwgY2hhcnMpIHtcclxuICBjaGFycyA9IGNoYXJzID09PSB1bmRlZmluZWQgPyAnICcgOiBiYXNlVG9TdHJpbmcoY2hhcnMpXHJcblxyXG4gIGNvbnN0IGNoYXJzTGVuZ3RoID0gY2hhcnMubGVuZ3RoXHJcbiAgaWYgKGNoYXJzTGVuZ3RoIDwgMikge1xyXG4gICAgcmV0dXJuIGNoYXJzTGVuZ3RoID8gcmVwZWF0KGNoYXJzLCBsZW5ndGgpIDogY2hhcnNcclxuICB9XHJcbiAgY29uc3QgcmVzdWx0ID0gcmVwZWF0KGNoYXJzLCBNYXRoLmNlaWwobGVuZ3RoIC8gc3RyaW5nU2l6ZShjaGFycykpKVxyXG4gIHJldHVybiBoYXNVbmljb2RlKGNoYXJzKVxyXG4gICAgPyBjYXN0U2xpY2Uoc3RyaW5nVG9BcnJheShyZXN1bHQpLCAwLCBsZW5ndGgpLmpvaW4oJycpXHJcbiAgICA6IHJlc3VsdC5zbGljZSgwLCBsZW5ndGgpXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVBhZGRpbmdcclxuIl0sIm1hcHBpbmdzIjoibTZEQWVZO0FBQUEsMkZBZlosTUFBT0EsT0FBTSxLQUFNLGNBQWMsQ0FDakMsTUFBT0MsYUFBWSxLQUFNLG1CQUFtQixDQUM1QyxNQUFPQyxVQUFTLEtBQU0sZ0JBQWdCLENBQ3RDLE1BQU9DLFdBQVUsS0FBTSxpQkFBaUIsQ0FDeEMsTUFBT0MsV0FBVSxLQUFNLGlCQUFpQixDQUN4QyxNQUFPQyxjQUFhLEtBQU0sb0JBQW9CLENBRTlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVNDLGNBQWEsQ0FBQ0MsTUFBTSxDQUFFQyxLQUFLLENBQUUsaURBQ3BDQSxLQUFLLENBQUdBLEtBQUssR0FBS0MsU0FBUyw2QkFBRyxHQUFHLDhCQUFHUixZQUFZLENBQUNPLEtBQUssQ0FBQyxFQUV2RCxLQUFNRSxZQUFXLDBCQUFHRixLQUFLLENBQUNELE1BQU0sMEJBQ2hDLEdBQUlHLFdBQVcsQ0FBRyxDQUFDLENBQUUsb0RBQ25CLE1BQU9BLFlBQVcsNkJBQUdWLE1BQU0sQ0FBQ1EsS0FBSyxDQUFFRCxNQUFNLENBQUMsOEJBQUdDLEtBQUssRUFDcEQsQ0FBQyxpQ0FDRCxLQUFNRyxPQUFNLDBCQUFHWCxNQUFNLENBQUNRLEtBQUssQ0FBRUksSUFBSSxDQUFDQyxJQUFJLENBQUNOLE1BQU0sQ0FBR0gsVUFBVSxDQUFDSSxLQUFLLENBQUMsQ0FBQyxDQUFDLDBCQUNuRSxNQUFPTCxXQUFVLENBQUNLLEtBQUssQ0FBQyw2QkFDcEJOLFNBQVMsQ0FBQ0csYUFBYSxDQUFDTSxNQUFNLENBQUMsQ0FBRSxDQUFDLENBQUVKLE1BQU0sQ0FBQyxDQUFDTyxJQUFJLENBQUMsRUFBRSxDQUFDLDhCQUNwREgsTUFBTSxDQUFDSSxLQUFLLENBQUMsQ0FBQyxDQUFFUixNQUFNLENBQUMsRUFDN0IsQ0FFQSxjQUFlRCxjQUFhIn0=