function cov_2oqjdtqy8n(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\mapToArray.js";var hash="cad357250efa7a1d1ec2afdebd292c182dcde316";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\mapToArray.js",statementMap:{"0":{start:{line:9,column:14},end:{line:9,column:16}},"1":{start:{line:10,column:17},end:{line:10,column:36}},"2":{start:{line:12,column:2},end:{line:14,column:4}},"3":{start:{line:13,column:4},end:{line:13,column:34}},"4":{start:{line:15,column:2},end:{line:15,column:15}}},fnMap:{"0":{name:"mapToArray",decl:{start:{line:8,column:9},end:{line:8,column:19}},loc:{start:{line:8,column:25},end:{line:16,column:1}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:14},end:{line:12,column:15}},loc:{start:{line:12,column:30},end:{line:14,column:3}},line:12}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{"0":0,"1":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"cad357250efa7a1d1ec2afdebd292c182dcde316"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2oqjdtqy8n=function(){return actualCoverage;};}return actualCoverage;}cov_2oqjdtqy8n();/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */function mapToArray(map){cov_2oqjdtqy8n().f[0]++;let index=(cov_2oqjdtqy8n().s[0]++,-1);const result=(cov_2oqjdtqy8n().s[1]++,new Array(map.size));cov_2oqjdtqy8n().s[2]++;map.forEach((value,key)=>{cov_2oqjdtqy8n().f[1]++;cov_2oqjdtqy8n().s[3]++;result[++index]=[key,value];});cov_2oqjdtqy8n().s[4]++;return result;}export default mapToArray;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtYXBUb0FycmF5IiwibWFwIiwiaW5kZXgiLCJyZXN1bHQiLCJBcnJheSIsInNpemUiLCJmb3JFYWNoIiwidmFsdWUiLCJrZXkiXSwic291cmNlcyI6WyJtYXBUb0FycmF5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDb252ZXJ0cyBgbWFwYCB0byBpdHMga2V5LXZhbHVlIHBhaXJzLlxyXG4gKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBAcGFyYW0ge09iamVjdH0gbWFwIFRoZSBtYXAgdG8gY29udmVydC5cclxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBrZXktdmFsdWUgcGFpcnMuXHJcbiAqL1xyXG5mdW5jdGlvbiBtYXBUb0FycmF5KG1hcCkge1xyXG4gIGxldCBpbmRleCA9IC0xXHJcbiAgY29uc3QgcmVzdWx0ID0gbmV3IEFycmF5KG1hcC5zaXplKVxyXG5cclxuICBtYXAuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xyXG4gICAgcmVzdWx0WysraW5kZXhdID0gW2tleSwgdmFsdWVdXHJcbiAgfSlcclxuICByZXR1cm4gcmVzdWx0XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IG1hcFRvQXJyYXlcclxuIl0sIm1hcHBpbmdzIjoiOHFDQWVZO0FBQUEsMkZBZlo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxRQUFTQSxXQUFVLENBQUNDLEdBQUcsQ0FBRSx5QkFDdkIsR0FBSUMsTUFBSywwQkFBRyxDQUFDLENBQUMsRUFDZCxLQUFNQyxPQUFNLDBCQUFHLEdBQUlDLE1BQUssQ0FBQ0gsR0FBRyxDQUFDSSxJQUFJLENBQUMsMEJBRWxDSixHQUFHLENBQUNLLE9BQU8sQ0FBQyxDQUFDQyxLQUFLLENBQUVDLEdBQUcsR0FBSyxpREFDMUJMLE1BQU0sQ0FBQyxFQUFFRCxLQUFLLENBQUMsQ0FBRyxDQUFDTSxHQUFHLENBQUVELEtBQUssQ0FBQyxDQUNoQyxDQUFDLENBQUMseUJBQ0YsTUFBT0osT0FBTSxDQUNmLENBRUEsY0FBZUgsV0FBVSJ9