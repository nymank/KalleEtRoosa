function cov_1xugpgeext(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\baseZipObject.js";var hash="d4081383c78c806550d5666952bb3a3b43eed6c2";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\baseZipObject.js",statementMap:{"0":{start:{line:11,column:14},end:{line:11,column:16}},"1":{start:{line:12,column:17},end:{line:12,column:29}},"2":{start:{line:13,column:21},end:{line:13,column:34}},"3":{start:{line:14,column:17},end:{line:14,column:19}},"4":{start:{line:16,column:2},end:{line:19,column:3}},"5":{start:{line:17,column:18},end:{line:17,column:64}},"6":{start:{line:18,column:4},end:{line:18,column:43}},"7":{start:{line:20,column:2},end:{line:20,column:15}}},fnMap:{"0":{name:"baseZipObject",decl:{start:{line:10,column:9},end:{line:10,column:22}},loc:{start:{line:10,column:50},end:{line:21,column:1}},line:10}},branchMap:{"0":{loc:{start:{line:17,column:18},end:{line:17,column:64}},type:"cond-expr",locations:[{start:{line:17,column:39},end:{line:17,column:52}},{start:{line:17,column:55},end:{line:17,column:64}}],line:17}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d4081383c78c806550d5666952bb3a3b43eed6c2"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1xugpgeext=function(){return actualCoverage;};}return actualCoverage;}cov_1xugpgeext();/**
 * This base implementation of `zipObject` which assigns values using `assignFunc`.
 *
 * @private
 * @param {Array} props The property identifiers.
 * @param {Array} values The property values.
 * @param {Function} assignFunc The function to assign values.
 * @returns {Object} Returns the new object.
 */function baseZipObject(props,values,assignFunc){cov_1xugpgeext().f[0]++;let index=(cov_1xugpgeext().s[0]++,-1);const length=(cov_1xugpgeext().s[1]++,props.length);const valsLength=(cov_1xugpgeext().s[2]++,values.length);const result=(cov_1xugpgeext().s[3]++,{});cov_1xugpgeext().s[4]++;while(++index<length){const value=(cov_1xugpgeext().s[5]++,index<valsLength?(cov_1xugpgeext().b[0][0]++,values[index]):(cov_1xugpgeext().b[0][1]++,undefined));cov_1xugpgeext().s[6]++;assignFunc(result,props[index],value);}cov_1xugpgeext().s[7]++;return result;}export default baseZipObject;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlWmlwT2JqZWN0IiwicHJvcHMiLCJ2YWx1ZXMiLCJhc3NpZ25GdW5jIiwiaW5kZXgiLCJsZW5ndGgiLCJ2YWxzTGVuZ3RoIiwicmVzdWx0IiwidmFsdWUiLCJ1bmRlZmluZWQiXSwic291cmNlcyI6WyJiYXNlWmlwT2JqZWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBUaGlzIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYHppcE9iamVjdGAgd2hpY2ggYXNzaWducyB2YWx1ZXMgdXNpbmcgYGFzc2lnbkZ1bmNgLlxyXG4gKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBAcGFyYW0ge0FycmF5fSBwcm9wcyBUaGUgcHJvcGVydHkgaWRlbnRpZmllcnMuXHJcbiAqIEBwYXJhbSB7QXJyYXl9IHZhbHVlcyBUaGUgcHJvcGVydHkgdmFsdWVzLlxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBhc3NpZ25GdW5jIFRoZSBmdW5jdGlvbiB0byBhc3NpZ24gdmFsdWVzLlxyXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBuZXcgb2JqZWN0LlxyXG4gKi9cclxuZnVuY3Rpb24gYmFzZVppcE9iamVjdChwcm9wcywgdmFsdWVzLCBhc3NpZ25GdW5jKSB7XHJcbiAgbGV0IGluZGV4ID0gLTFcclxuICBjb25zdCBsZW5ndGggPSBwcm9wcy5sZW5ndGhcclxuICBjb25zdCB2YWxzTGVuZ3RoID0gdmFsdWVzLmxlbmd0aFxyXG4gIGNvbnN0IHJlc3VsdCA9IHt9XHJcblxyXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XHJcbiAgICBjb25zdCB2YWx1ZSA9IGluZGV4IDwgdmFsc0xlbmd0aCA/IHZhbHVlc1tpbmRleF0gOiB1bmRlZmluZWRcclxuICAgIGFzc2lnbkZ1bmMocmVzdWx0LCBwcm9wc1tpbmRleF0sIHZhbHVlKVxyXG4gIH1cclxuICByZXR1cm4gcmVzdWx0XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGJhc2VaaXBPYmplY3RcclxuIl0sIm1hcHBpbmdzIjoiaTdDQWVZO0FBQUEsMkZBZlo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBU0EsY0FBYSxDQUFDQyxLQUFLLENBQUVDLE1BQU0sQ0FBRUMsVUFBVSxDQUFFLHlCQUNoRCxHQUFJQyxNQUFLLDBCQUFHLENBQUMsQ0FBQyxFQUNkLEtBQU1DLE9BQU0sMEJBQUdKLEtBQUssQ0FBQ0ksTUFBTSxFQUMzQixLQUFNQyxXQUFVLDBCQUFHSixNQUFNLENBQUNHLE1BQU0sRUFDaEMsS0FBTUUsT0FBTSwwQkFBRyxDQUFDLENBQUMsMEJBRWpCLE1BQU8sRUFBRUgsS0FBSyxDQUFHQyxNQUFNLENBQUUsQ0FDdkIsS0FBTUcsTUFBSywwQkFBR0osS0FBSyxDQUFHRSxVQUFVLDZCQUFHSixNQUFNLENBQUNFLEtBQUssQ0FBQyw4QkFBR0ssU0FBUywyQkFDNUROLFVBQVUsQ0FBQ0ksTUFBTSxDQUFFTixLQUFLLENBQUNHLEtBQUssQ0FBQyxDQUFFSSxLQUFLLENBQUMsQ0FDekMsQ0FBQyx3QkFDRCxNQUFPRCxPQUFNLENBQ2YsQ0FFQSxjQUFlUCxjQUFhIn0=