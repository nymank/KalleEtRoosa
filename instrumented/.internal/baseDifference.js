function cov_156ezwfb6t(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\baseDifference.js";var hash="28f3dab9a4207fc0754091874a7343819b577c04";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\baseDifference.js",statementMap:{"0":{start:{line:8,column:25},end:{line:8,column:28}},"1":{start:{line:22,column:17},end:{line:22,column:30}},"2":{start:{line:23,column:17},end:{line:23,column:21}},"3":{start:{line:24,column:17},end:{line:24,column:19}},"4":{start:{line:25,column:23},end:{line:25,column:36}},"5":{start:{line:27,column:2},end:{line:29,column:3}},"6":{start:{line:28,column:4},end:{line:28,column:17}},"7":{start:{line:30,column:2},end:{line:32,column:3}},"8":{start:{line:31,column:4},end:{line:31,column:52}},"9":{start:{line:31,column:36},end:{line:31,column:51}},"10":{start:{line:33,column:2},end:{line:41,column:3}},"11":{start:{line:34,column:4},end:{line:34,column:32}},"12":{start:{line:35,column:4},end:{line:35,column:20}},"13":{start:{line:37,column:7},end:{line:41,column:3}},"14":{start:{line:38,column:4},end:{line:38,column:23}},"15":{start:{line:39,column:4},end:{line:39,column:20}},"16":{start:{line:40,column:4},end:{line:40,column:33}},"17":{start:{line:42,column:2},end:{line:59,column:3}},"18":{start:{line:43,column:2},end:{line:59,column:3}},"19":{start:{line:44,column:21},end:{line:44,column:63}},"20":{start:{line:46,column:4},end:{line:46,column:51}},"21":{start:{line:47,column:4},end:{line:58,column:5}},"22":{start:{line:48,column:24},end:{line:48,column:36}},"23":{start:{line:49,column:6},end:{line:53,column:7}},"24":{start:{line:50,column:8},end:{line:52,column:9}},"25":{start:{line:51,column:10},end:{line:51,column:24}},"26":{start:{line:54,column:6},end:{line:54,column:24}},"27":{start:{line:56,column:9},end:{line:58,column:5}},"28":{start:{line:57,column:6},end:{line:57,column:24}},"29":{start:{line:60,column:2},end:{line:60,column:15}}},fnMap:{"0":{name:"baseDifference",decl:{start:{line:21,column:9},end:{line:21,column:23}},loc:{start:{line:21,column:61},end:{line:61,column:1}},line:21},"1":{name:"(anonymous_1)",decl:{start:{line:31,column:25},end:{line:31,column:26}},loc:{start:{line:31,column:36},end:{line:31,column:51}},line:31}},branchMap:{"0":{loc:{start:{line:27,column:2},end:{line:29,column:3}},type:"if",locations:[{start:{line:27,column:2},end:{line:29,column:3}},{start:{line:27,column:2},end:{line:29,column:3}}],line:27},"1":{loc:{start:{line:30,column:2},end:{line:32,column:3}},type:"if",locations:[{start:{line:30,column:2},end:{line:32,column:3}},{start:{line:30,column:2},end:{line:32,column:3}}],line:30},"2":{loc:{start:{line:33,column:2},end:{line:41,column:3}},type:"if",locations:[{start:{line:33,column:2},end:{line:41,column:3}},{start:{line:33,column:2},end:{line:41,column:3}}],line:33},"3":{loc:{start:{line:37,column:7},end:{line:41,column:3}},type:"if",locations:[{start:{line:37,column:7},end:{line:41,column:3}},{start:{line:37,column:7},end:{line:41,column:3}}],line:37},"4":{loc:{start:{line:44,column:21},end:{line:44,column:63}},type:"cond-expr",locations:[{start:{line:44,column:40},end:{line:44,column:45}},{start:{line:44,column:48},end:{line:44,column:63}}],line:44},"5":{loc:{start:{line:46,column:12},end:{line:46,column:51}},type:"cond-expr",locations:[{start:{line:46,column:42},end:{line:46,column:47}},{start:{line:46,column:50},end:{line:46,column:51}}],line:46},"6":{loc:{start:{line:46,column:13},end:{line:46,column:38}},type:"binary-expr",locations:[{start:{line:46,column:13},end:{line:46,column:23}},{start:{line:46,column:27},end:{line:46,column:38}}],line:46},"7":{loc:{start:{line:47,column:4},end:{line:58,column:5}},type:"if",locations:[{start:{line:47,column:4},end:{line:58,column:5}},{start:{line:47,column:4},end:{line:58,column:5}}],line:47},"8":{loc:{start:{line:47,column:8},end:{line:47,column:41}},type:"binary-expr",locations:[{start:{line:47,column:8},end:{line:47,column:16}},{start:{line:47,column:20},end:{line:47,column:41}}],line:47},"9":{loc:{start:{line:50,column:8},end:{line:52,column:9}},type:"if",locations:[{start:{line:50,column:8},end:{line:52,column:9}},{start:{line:50,column:8},end:{line:52,column:9}}],line:50},"10":{loc:{start:{line:56,column:9},end:{line:58,column:5}},type:"if",locations:[{start:{line:56,column:9},end:{line:58,column:5}},{start:{line:56,column:9},end:{line:58,column:5}}],line:56}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"28f3dab9a4207fc0754091874a7343819b577c04"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_156ezwfb6t=function(){return actualCoverage;};}return actualCoverage;}cov_156ezwfb6t();import SetCache from'./SetCache.js';import arrayIncludes from'./arrayIncludes.js';import arrayIncludesWith from'./arrayIncludesWith.js';import map from'../map.js';import cacheHas from'./cacheHas.js';/** Used as the size to enable large array optimizations. */const LARGE_ARRAY_SIZE=(cov_156ezwfb6t().s[0]++,200);/**
 * The base implementation of methods like `difference` without support
 * for excluding multiple arrays.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Array} values The values to exclude.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 */function baseDifference(array,values,iteratee,comparator){cov_156ezwfb6t().f[0]++;let includes=(cov_156ezwfb6t().s[1]++,arrayIncludes);let isCommon=(cov_156ezwfb6t().s[2]++,true);const result=(cov_156ezwfb6t().s[3]++,[]);const valuesLength=(cov_156ezwfb6t().s[4]++,values.length);cov_156ezwfb6t().s[5]++;if(!array.length){cov_156ezwfb6t().b[0][0]++;cov_156ezwfb6t().s[6]++;return result;}else{cov_156ezwfb6t().b[0][1]++;}cov_156ezwfb6t().s[7]++;if(iteratee){cov_156ezwfb6t().b[1][0]++;cov_156ezwfb6t().s[8]++;values=map(values,value=>{cov_156ezwfb6t().f[1]++;cov_156ezwfb6t().s[9]++;return iteratee(value);});}else{cov_156ezwfb6t().b[1][1]++;}cov_156ezwfb6t().s[10]++;if(comparator){cov_156ezwfb6t().b[2][0]++;cov_156ezwfb6t().s[11]++;includes=arrayIncludesWith;cov_156ezwfb6t().s[12]++;isCommon=false;}else{cov_156ezwfb6t().b[2][1]++;cov_156ezwfb6t().s[13]++;if(values.length>=LARGE_ARRAY_SIZE){cov_156ezwfb6t().b[3][0]++;cov_156ezwfb6t().s[14]++;includes=cacheHas;cov_156ezwfb6t().s[15]++;isCommon=false;cov_156ezwfb6t().s[16]++;values=new SetCache(values);}else{cov_156ezwfb6t().b[3][1]++;}}cov_156ezwfb6t().s[17]++;cov_156ezwfb6t().s[18]++;outer:for(let value of array){const computed=(cov_156ezwfb6t().s[19]++,iteratee==null?(cov_156ezwfb6t().b[4][0]++,value):(cov_156ezwfb6t().b[4][1]++,iteratee(value)));cov_156ezwfb6t().s[20]++;value=(cov_156ezwfb6t().b[6][0]++,comparator)||(cov_156ezwfb6t().b[6][1]++,value!==0)?(cov_156ezwfb6t().b[5][0]++,value):(cov_156ezwfb6t().b[5][1]++,0);cov_156ezwfb6t().s[21]++;if((cov_156ezwfb6t().b[8][0]++,isCommon)&&(cov_156ezwfb6t().b[8][1]++,computed===computed)){cov_156ezwfb6t().b[7][0]++;let valuesIndex=(cov_156ezwfb6t().s[22]++,valuesLength);cov_156ezwfb6t().s[23]++;while(valuesIndex--){cov_156ezwfb6t().s[24]++;if(values[valuesIndex]===computed){cov_156ezwfb6t().b[9][0]++;cov_156ezwfb6t().s[25]++;continue outer;}else{cov_156ezwfb6t().b[9][1]++;}}cov_156ezwfb6t().s[26]++;result.push(value);}else{cov_156ezwfb6t().b[7][1]++;cov_156ezwfb6t().s[27]++;if(!includes(values,computed,comparator)){cov_156ezwfb6t().b[10][0]++;cov_156ezwfb6t().s[28]++;result.push(value);}else{cov_156ezwfb6t().b[10][1]++;}}}cov_156ezwfb6t().s[29]++;return result;}export default baseDifference;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTZXRDYWNoZSIsImFycmF5SW5jbHVkZXMiLCJhcnJheUluY2x1ZGVzV2l0aCIsIm1hcCIsImNhY2hlSGFzIiwiTEFSR0VfQVJSQVlfU0laRSIsImJhc2VEaWZmZXJlbmNlIiwiYXJyYXkiLCJ2YWx1ZXMiLCJpdGVyYXRlZSIsImNvbXBhcmF0b3IiLCJpbmNsdWRlcyIsImlzQ29tbW9uIiwicmVzdWx0IiwidmFsdWVzTGVuZ3RoIiwibGVuZ3RoIiwidmFsdWUiLCJvdXRlciIsImNvbXB1dGVkIiwidmFsdWVzSW5kZXgiLCJwdXNoIl0sInNvdXJjZXMiOlsiYmFzZURpZmZlcmVuY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNldENhY2hlIGZyb20gJy4vU2V0Q2FjaGUuanMnXHJcbmltcG9ydCBhcnJheUluY2x1ZGVzIGZyb20gJy4vYXJyYXlJbmNsdWRlcy5qcydcclxuaW1wb3J0IGFycmF5SW5jbHVkZXNXaXRoIGZyb20gJy4vYXJyYXlJbmNsdWRlc1dpdGguanMnXHJcbmltcG9ydCBtYXAgZnJvbSAnLi4vbWFwLmpzJ1xyXG5pbXBvcnQgY2FjaGVIYXMgZnJvbSAnLi9jYWNoZUhhcy5qcydcclxuXHJcbi8qKiBVc2VkIGFzIHRoZSBzaXplIHRvIGVuYWJsZSBsYXJnZSBhcnJheSBvcHRpbWl6YXRpb25zLiAqL1xyXG5jb25zdCBMQVJHRV9BUlJBWV9TSVpFID0gMjAwXHJcblxyXG4vKipcclxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgbWV0aG9kcyBsaWtlIGBkaWZmZXJlbmNlYCB3aXRob3V0IHN1cHBvcnRcclxuICogZm9yIGV4Y2x1ZGluZyBtdWx0aXBsZSBhcnJheXMuXHJcbiAqXHJcbiAqIEBwcml2YXRlXHJcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpbnNwZWN0LlxyXG4gKiBAcGFyYW0ge0FycmF5fSB2YWx1ZXMgVGhlIHZhbHVlcyB0byBleGNsdWRlLlxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbaXRlcmF0ZWVdIFRoZSBpdGVyYXRlZSBpbnZva2VkIHBlciBlbGVtZW50LlxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY29tcGFyYXRvcl0gVGhlIGNvbXBhcmF0b3IgaW52b2tlZCBwZXIgZWxlbWVudC5cclxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgYXJyYXkgb2YgZmlsdGVyZWQgdmFsdWVzLlxyXG4gKi9cclxuZnVuY3Rpb24gYmFzZURpZmZlcmVuY2UoYXJyYXksIHZhbHVlcywgaXRlcmF0ZWUsIGNvbXBhcmF0b3IpIHtcclxuICBsZXQgaW5jbHVkZXMgPSBhcnJheUluY2x1ZGVzXHJcbiAgbGV0IGlzQ29tbW9uID0gdHJ1ZVxyXG4gIGNvbnN0IHJlc3VsdCA9IFtdXHJcbiAgY29uc3QgdmFsdWVzTGVuZ3RoID0gdmFsdWVzLmxlbmd0aFxyXG5cclxuICBpZiAoIWFycmF5Lmxlbmd0aCkge1xyXG4gICAgcmV0dXJuIHJlc3VsdFxyXG4gIH1cclxuICBpZiAoaXRlcmF0ZWUpIHtcclxuICAgIHZhbHVlcyA9IG1hcCh2YWx1ZXMsICh2YWx1ZSkgPT4gaXRlcmF0ZWUodmFsdWUpKVxyXG4gIH1cclxuICBpZiAoY29tcGFyYXRvcikge1xyXG4gICAgaW5jbHVkZXMgPSBhcnJheUluY2x1ZGVzV2l0aFxyXG4gICAgaXNDb21tb24gPSBmYWxzZVxyXG4gIH1cclxuICBlbHNlIGlmICh2YWx1ZXMubGVuZ3RoID49IExBUkdFX0FSUkFZX1NJWkUpIHtcclxuICAgIGluY2x1ZGVzID0gY2FjaGVIYXNcclxuICAgIGlzQ29tbW9uID0gZmFsc2VcclxuICAgIHZhbHVlcyA9IG5ldyBTZXRDYWNoZSh2YWx1ZXMpXHJcbiAgfVxyXG4gIG91dGVyOlxyXG4gIGZvciAobGV0IHZhbHVlIG9mIGFycmF5KSB7XHJcbiAgICBjb25zdCBjb21wdXRlZCA9IGl0ZXJhdGVlID09IG51bGwgPyB2YWx1ZSA6IGl0ZXJhdGVlKHZhbHVlKVxyXG5cclxuICAgIHZhbHVlID0gKGNvbXBhcmF0b3IgfHwgdmFsdWUgIT09IDApID8gdmFsdWUgOiAwXHJcbiAgICBpZiAoaXNDb21tb24gJiYgY29tcHV0ZWQgPT09IGNvbXB1dGVkKSB7XHJcbiAgICAgIGxldCB2YWx1ZXNJbmRleCA9IHZhbHVlc0xlbmd0aFxyXG4gICAgICB3aGlsZSAodmFsdWVzSW5kZXgtLSkge1xyXG4gICAgICAgIGlmICh2YWx1ZXNbdmFsdWVzSW5kZXhdID09PSBjb21wdXRlZCkge1xyXG4gICAgICAgICAgY29udGludWUgb3V0ZXJcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgcmVzdWx0LnB1c2godmFsdWUpXHJcbiAgICB9XHJcbiAgICBlbHNlIGlmICghaW5jbHVkZXModmFsdWVzLCBjb21wdXRlZCwgY29tcGFyYXRvcikpIHtcclxuICAgICAgcmVzdWx0LnB1c2godmFsdWUpXHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiByZXN1bHRcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYmFzZURpZmZlcmVuY2VcclxuIl0sIm1hcHBpbmdzIjoidzZKQWVZO0FBQUEsMkZBZlosTUFBT0EsU0FBUSxLQUFNLGVBQWUsQ0FDcEMsTUFBT0MsY0FBYSxLQUFNLG9CQUFvQixDQUM5QyxNQUFPQyxrQkFBaUIsS0FBTSx3QkFBd0IsQ0FDdEQsTUFBT0MsSUFBRyxLQUFNLFdBQVcsQ0FDM0IsTUFBT0MsU0FBUSxLQUFNLGVBQWUsQ0FFcEMsNERBQ0EsS0FBTUMsaUJBQWdCLDBCQUFHLEdBQUcsRUFFNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVNDLGVBQWMsQ0FBQ0MsS0FBSyxDQUFFQyxNQUFNLENBQUVDLFFBQVEsQ0FBRUMsVUFBVSxDQUFFLHlCQUMzRCxHQUFJQyxTQUFRLDBCQUFHVixhQUFhLEVBQzVCLEdBQUlXLFNBQVEsMEJBQUcsSUFBSSxFQUNuQixLQUFNQyxPQUFNLDBCQUFHLEVBQUUsRUFDakIsS0FBTUMsYUFBWSwwQkFBR04sTUFBTSxDQUFDTyxNQUFNLDBCQUVsQyxHQUFJLENBQUNSLEtBQUssQ0FBQ1EsTUFBTSxDQUFFLG9EQUNqQixNQUFPRixPQUFNLENBQ2YsQ0FBQyx5REFDRCxHQUFJSixRQUFRLENBQUUsb0RBQ1pELE1BQU0sQ0FBR0wsR0FBRyxDQUFDSyxNQUFNLENBQUdRLEtBQUssRUFBSyx1REFBQVAsU0FBUSxDQUFDTyxLQUFLLENBQUMsQ0FBRCxDQUFDLENBQUMsQ0FDbEQsQ0FBQywwREFDRCxHQUFJTixVQUFVLENBQUUscURBQ2RDLFFBQVEsQ0FBR1QsaUJBQWlCLDBCQUM1QlUsUUFBUSxDQUFHLEtBQUssQ0FDbEIsQ0FBQyxJQUNJLHdEQUFJSixNQUFNLENBQUNPLE1BQU0sRUFBSVYsZ0JBQWdCLENBQUUscURBQzFDTSxRQUFRLENBQUdQLFFBQVEsMEJBQ25CUSxRQUFRLENBQUcsS0FBSywwQkFDaEJKLE1BQU0sQ0FBRyxHQUFJUixTQUFRLENBQUNRLE1BQU0sQ0FBQyxDQUMvQixDQUFDLGlDQUFELENBQUMsa0RBQ0RTLEtBQUssQ0FDTCxJQUFLLEdBQUlELE1BQUssR0FBSVQsTUFBSyxDQUFFLENBQ3ZCLEtBQU1XLFNBQVEsMkJBQUdULFFBQVEsRUFBSSxJQUFJLDZCQUFHTyxLQUFLLDhCQUFHUCxRQUFRLENBQUNPLEtBQUssQ0FBQyw0QkFFM0RBLEtBQUssQ0FBSSw0QkFBQU4sVUFBVSwrQkFBSU0sS0FBSyxHQUFLLENBQUMsOEJBQUlBLEtBQUssOEJBQUcsQ0FBQywyQkFDL0MsR0FBSSw0QkFBQUosUUFBUSwrQkFBSU0sUUFBUSxHQUFLQSxRQUFRLEVBQUUsNEJBQ3JDLEdBQUlDLFlBQVcsMkJBQUdMLFlBQVksMkJBQzlCLE1BQU9LLFdBQVcsRUFBRSxDQUFFLDBCQUNwQixHQUFJWCxNQUFNLENBQUNXLFdBQVcsQ0FBQyxHQUFLRCxRQUFRLENBQUUscURBQ3BDLFFBQVNELE1BQUssQ0FDaEIsQ0FBQyxpQ0FDSCxDQUFDLHlCQUNESixNQUFNLENBQUNPLElBQUksQ0FBQ0osS0FBSyxDQUFDLENBQ3BCLENBQUMsSUFDSSx3REFBSSxDQUFDTCxRQUFRLENBQUNILE1BQU0sQ0FBRVUsUUFBUSxDQUFFUixVQUFVLENBQUMsQ0FBRSxzREFDaERHLE1BQU0sQ0FBQ08sSUFBSSxDQUFDSixLQUFLLENBQUMsQ0FDcEIsQ0FBQyxrQ0FBRCxDQUNGLENBQUMseUJBQ0QsTUFBT0gsT0FBTSxDQUNmLENBRUEsY0FBZVAsZUFBYyJ9