function cov_1xa67youyd(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\createMathOperation.js";var hash="c0b3a060ad271c5bac272ddf4aa475b2d7ab9061";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\createMathOperation.js",statementMap:{"0":{start:{line:13,column:2},end:{line:32,column:3}},"1":{start:{line:14,column:4},end:{line:16,column:5}},"2":{start:{line:15,column:6},end:{line:15,column:25}},"3":{start:{line:17,column:4},end:{line:19,column:5}},"4":{start:{line:18,column:6},end:{line:18,column:18}},"5":{start:{line:20,column:4},end:{line:22,column:5}},"6":{start:{line:21,column:6},end:{line:21,column:18}},"7":{start:{line:23,column:4},end:{line:30,column:5}},"8":{start:{line:24,column:6},end:{line:24,column:33}},"9":{start:{line:25,column:6},end:{line:25,column:33}},"10":{start:{line:28,column:6},end:{line:28,column:33}},"11":{start:{line:29,column:6},end:{line:29,column:33}},"12":{start:{line:31,column:4},end:{line:31,column:33}}},fnMap:{"0":{name:"createMathOperation",decl:{start:{line:12,column:9},end:{line:12,column:28}},loc:{start:{line:12,column:53},end:{line:33,column:1}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:9},end:{line:13,column:10}},loc:{start:{line:13,column:27},end:{line:32,column:3}},line:13}},branchMap:{"0":{loc:{start:{line:14,column:4},end:{line:16,column:5}},type:"if",locations:[{start:{line:14,column:4},end:{line:16,column:5}},{start:{line:14,column:4},end:{line:16,column:5}}],line:14},"1":{loc:{start:{line:14,column:8},end:{line:14,column:50}},type:"binary-expr",locations:[{start:{line:14,column:8},end:{line:14,column:27}},{start:{line:14,column:31},end:{line:14,column:50}}],line:14},"2":{loc:{start:{line:17,column:4},end:{line:19,column:5}},type:"if",locations:[{start:{line:17,column:4},end:{line:19,column:5}},{start:{line:17,column:4},end:{line:19,column:5}}],line:17},"3":{loc:{start:{line:17,column:8},end:{line:17,column:50}},type:"binary-expr",locations:[{start:{line:17,column:8},end:{line:17,column:27}},{start:{line:17,column:31},end:{line:17,column:50}}],line:17},"4":{loc:{start:{line:20,column:4},end:{line:22,column:5}},type:"if",locations:[{start:{line:20,column:4},end:{line:22,column:5}},{start:{line:20,column:4},end:{line:22,column:5}}],line:20},"5":{loc:{start:{line:20,column:8},end:{line:20,column:50}},type:"binary-expr",locations:[{start:{line:20,column:8},end:{line:20,column:27}},{start:{line:20,column:31},end:{line:20,column:50}}],line:20},"6":{loc:{start:{line:23,column:4},end:{line:30,column:5}},type:"if",locations:[{start:{line:23,column:4},end:{line:30,column:5}},{start:{line:23,column:4},end:{line:30,column:5}}],line:23},"7":{loc:{start:{line:23,column:8},end:{line:23,column:62}},type:"binary-expr",locations:[{start:{line:23,column:8},end:{line:23,column:33}},{start:{line:23,column:37},end:{line:23,column:62}}],line:23}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c0b3a060ad271c5bac272ddf4aa475b2d7ab9061"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1xa67youyd=function(){return actualCoverage;};}return actualCoverage;}cov_1xa67youyd();import baseToNumber from'./baseToNumber.js';import baseToString from'./baseToString.js';/**
 * Creates a function that performs a mathematical operation on two values.
 *
 * @private
 * @param {Function} operator The function to perform the operation.
 * @param {number} [defaultValue] The value used for `undefined` arguments.
 * @returns {Function} Returns the new mathematical operation function.
 */function createMathOperation(operator,defaultValue){cov_1xa67youyd().f[0]++;cov_1xa67youyd().s[0]++;return(value,other)=>{cov_1xa67youyd().f[1]++;cov_1xa67youyd().s[1]++;if((cov_1xa67youyd().b[1][0]++,value===undefined)&&(cov_1xa67youyd().b[1][1]++,other===undefined)){cov_1xa67youyd().b[0][0]++;cov_1xa67youyd().s[2]++;return defaultValue;}else{cov_1xa67youyd().b[0][1]++;}cov_1xa67youyd().s[3]++;if((cov_1xa67youyd().b[3][0]++,value!==undefined)&&(cov_1xa67youyd().b[3][1]++,other===undefined)){cov_1xa67youyd().b[2][0]++;cov_1xa67youyd().s[4]++;return value;}else{cov_1xa67youyd().b[2][1]++;}cov_1xa67youyd().s[5]++;if((cov_1xa67youyd().b[5][0]++,other!==undefined)&&(cov_1xa67youyd().b[5][1]++,value===undefined)){cov_1xa67youyd().b[4][0]++;cov_1xa67youyd().s[6]++;return other;}else{cov_1xa67youyd().b[4][1]++;}cov_1xa67youyd().s[7]++;if((cov_1xa67youyd().b[7][0]++,typeof value==='string')||(cov_1xa67youyd().b[7][1]++,typeof other==='string')){cov_1xa67youyd().b[6][0]++;cov_1xa67youyd().s[8]++;value=baseToString(value);cov_1xa67youyd().s[9]++;other=baseToString(other);}else{cov_1xa67youyd().b[6][1]++;cov_1xa67youyd().s[10]++;value=baseToNumber(value);cov_1xa67youyd().s[11]++;other=baseToNumber(other);}cov_1xa67youyd().s[12]++;return operator(value,other);};}export default createMathOperation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlVG9OdW1iZXIiLCJiYXNlVG9TdHJpbmciLCJjcmVhdGVNYXRoT3BlcmF0aW9uIiwib3BlcmF0b3IiLCJkZWZhdWx0VmFsdWUiLCJ2YWx1ZSIsIm90aGVyIiwidW5kZWZpbmVkIl0sInNvdXJjZXMiOlsiY3JlYXRlTWF0aE9wZXJhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZVRvTnVtYmVyIGZyb20gJy4vYmFzZVRvTnVtYmVyLmpzJ1xyXG5pbXBvcnQgYmFzZVRvU3RyaW5nIGZyb20gJy4vYmFzZVRvU3RyaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IHBlcmZvcm1zIGEgbWF0aGVtYXRpY2FsIG9wZXJhdGlvbiBvbiB0d28gdmFsdWVzLlxyXG4gKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBvcGVyYXRvciBUaGUgZnVuY3Rpb24gdG8gcGVyZm9ybSB0aGUgb3BlcmF0aW9uLlxyXG4gKiBAcGFyYW0ge251bWJlcn0gW2RlZmF1bHRWYWx1ZV0gVGhlIHZhbHVlIHVzZWQgZm9yIGB1bmRlZmluZWRgIGFyZ3VtZW50cy5cclxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgbWF0aGVtYXRpY2FsIG9wZXJhdGlvbiBmdW5jdGlvbi5cclxuICovXHJcbmZ1bmN0aW9uIGNyZWF0ZU1hdGhPcGVyYXRpb24ob3BlcmF0b3IsIGRlZmF1bHRWYWx1ZSkge1xyXG4gIHJldHVybiAodmFsdWUsIG90aGVyKSA9PiB7XHJcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCAmJiBvdGhlciA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIHJldHVybiBkZWZhdWx0VmFsdWVcclxuICAgIH1cclxuICAgIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkICYmIG90aGVyID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgcmV0dXJuIHZhbHVlXHJcbiAgICB9XHJcbiAgICBpZiAob3RoZXIgIT09IHVuZGVmaW5lZCAmJiB2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIHJldHVybiBvdGhlclxyXG4gICAgfVxyXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIG90aGVyID09PSAnc3RyaW5nJykge1xyXG4gICAgICB2YWx1ZSA9IGJhc2VUb1N0cmluZyh2YWx1ZSlcclxuICAgICAgb3RoZXIgPSBiYXNlVG9TdHJpbmcob3RoZXIpXHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgdmFsdWUgPSBiYXNlVG9OdW1iZXIodmFsdWUpXHJcbiAgICAgIG90aGVyID0gYmFzZVRvTnVtYmVyKG90aGVyKVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIG9wZXJhdG9yKHZhbHVlLCBvdGhlcilcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZU1hdGhPcGVyYXRpb25cclxuIl0sIm1hcHBpbmdzIjoid3lHQWVZO0FBQUEsMkZBZlosTUFBT0EsYUFBWSxLQUFNLG1CQUFtQixDQUM1QyxNQUFPQyxhQUFZLEtBQU0sbUJBQW1CLENBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxRQUFTQyxvQkFBbUIsQ0FBQ0MsUUFBUSxDQUFFQyxZQUFZLENBQUUsaURBQ25ELE1BQU8sQ0FBQ0MsS0FBSyxDQUFFQyxLQUFLLEdBQUssaURBQ3ZCLEdBQUksNEJBQUFELEtBQUssR0FBS0UsU0FBUywrQkFBSUQsS0FBSyxHQUFLQyxTQUFTLEVBQUUsb0RBQzlDLE1BQU9ILGFBQVksQ0FDckIsQ0FBQyx5REFDRCxHQUFJLDRCQUFBQyxLQUFLLEdBQUtFLFNBQVMsK0JBQUlELEtBQUssR0FBS0MsU0FBUyxFQUFFLG9EQUM5QyxNQUFPRixNQUFLLENBQ2QsQ0FBQyx5REFDRCxHQUFJLDRCQUFBQyxLQUFLLEdBQUtDLFNBQVMsK0JBQUlGLEtBQUssR0FBS0UsU0FBUyxFQUFFLG9EQUM5QyxNQUFPRCxNQUFLLENBQ2QsQ0FBQyx5REFDRCxHQUFJLGtDQUFPRCxNQUFLLEdBQUssUUFBUSwrQkFBSSxNQUFPQyxNQUFLLEdBQUssUUFBUSxFQUFFLG9EQUMxREQsS0FBSyxDQUFHSixZQUFZLENBQUNJLEtBQUssQ0FBQyx5QkFDM0JDLEtBQUssQ0FBR0wsWUFBWSxDQUFDSyxLQUFLLENBQUMsQ0FDN0IsQ0FBQyxJQUNJLHFEQUNIRCxLQUFLLENBQUdMLFlBQVksQ0FBQ0ssS0FBSyxDQUFDLDBCQUMzQkMsS0FBSyxDQUFHTixZQUFZLENBQUNNLEtBQUssQ0FBQyxDQUM3QixDQUFDLHlCQUNELE1BQU9ILFNBQVEsQ0FBQ0UsS0FBSyxDQUFFQyxLQUFLLENBQUMsQ0FDL0IsQ0FBQyxDQUNILENBRUEsY0FBZUosb0JBQW1CIn0=