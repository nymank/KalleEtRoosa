function cov_1hvolnmhbk(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\baseEachRight.js";var hash="042cabe86d94dee6a17eafb3533ea5b8da7f82a0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\baseEachRight.js",statementMap:{"0":{start:{line:13,column:2},end:{line:15,column:3}},"1":{start:{line:14,column:4},end:{line:14,column:21}},"2":{start:{line:16,column:2},end:{line:18,column:3}},"3":{start:{line:17,column:4},end:{line:17,column:48}},"4":{start:{line:19,column:19},end:{line:19,column:37}},"5":{start:{line:20,column:15},end:{line:20,column:32}},"6":{start:{line:22,column:2},end:{line:26,column:3}},"7":{start:{line:23,column:4},end:{line:25,column:5}},"8":{start:{line:24,column:6},end:{line:24,column:11}},"9":{start:{line:27,column:2},end:{line:27,column:19}}},fnMap:{"0":{name:"baseEachRight",decl:{start:{line:12,column:9},end:{line:12,column:22}},loc:{start:{line:12,column:45},end:{line:28,column:1}},line:12}},branchMap:{"0":{loc:{start:{line:13,column:2},end:{line:15,column:3}},type:"if",locations:[{start:{line:13,column:2},end:{line:15,column:3}},{start:{line:13,column:2},end:{line:15,column:3}}],line:13},"1":{loc:{start:{line:16,column:2},end:{line:18,column:3}},type:"if",locations:[{start:{line:16,column:2},end:{line:18,column:3}},{start:{line:16,column:2},end:{line:18,column:3}}],line:16},"2":{loc:{start:{line:23,column:4},end:{line:25,column:5}},type:"if",locations:[{start:{line:23,column:4},end:{line:25,column:5}},{start:{line:23,column:4},end:{line:25,column:5}}],line:23}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"042cabe86d94dee6a17eafb3533ea5b8da7f82a0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1hvolnmhbk=function(){return actualCoverage;};}return actualCoverage;}cov_1hvolnmhbk();import baseForOwnRight from'./baseForOwnRight.js';import isArrayLike from'../isArrayLike.js';/**
 * The base implementation of `forEachRight`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */function baseEachRight(collection,iteratee){cov_1hvolnmhbk().f[0]++;cov_1hvolnmhbk().s[0]++;if(collection==null){cov_1hvolnmhbk().b[0][0]++;cov_1hvolnmhbk().s[1]++;return collection;}else{cov_1hvolnmhbk().b[0][1]++;}cov_1hvolnmhbk().s[2]++;if(!isArrayLike(collection)){cov_1hvolnmhbk().b[1][0]++;cov_1hvolnmhbk().s[3]++;return baseForOwnRight(collection,iteratee);}else{cov_1hvolnmhbk().b[1][1]++;}const iterable=(cov_1hvolnmhbk().s[4]++,Object(collection));let length=(cov_1hvolnmhbk().s[5]++,collection.length);cov_1hvolnmhbk().s[6]++;while(length--){cov_1hvolnmhbk().s[7]++;if(iteratee(iterable[length],length,iterable)===false){cov_1hvolnmhbk().b[2][0]++;cov_1hvolnmhbk().s[8]++;break;}else{cov_1hvolnmhbk().b[2][1]++;}}cov_1hvolnmhbk().s[9]++;return collection;}export default baseEachRight;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlRm9yT3duUmlnaHQiLCJpc0FycmF5TGlrZSIsImJhc2VFYWNoUmlnaHQiLCJjb2xsZWN0aW9uIiwiaXRlcmF0ZWUiLCJpdGVyYWJsZSIsIk9iamVjdCIsImxlbmd0aCJdLCJzb3VyY2VzIjpbImJhc2VFYWNoUmlnaHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJhc2VGb3JPd25SaWdodCBmcm9tICcuL2Jhc2VGb3JPd25SaWdodC5qcydcclxuaW1wb3J0IGlzQXJyYXlMaWtlIGZyb20gJy4uL2lzQXJyYXlMaWtlLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBmb3JFYWNoUmlnaHRgLlxyXG4gKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXHJcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXHJcbiAqIEByZXR1cm5zIHtBcnJheXxPYmplY3R9IFJldHVybnMgYGNvbGxlY3Rpb25gLlxyXG4gKi9cclxuZnVuY3Rpb24gYmFzZUVhY2hSaWdodChjb2xsZWN0aW9uLCBpdGVyYXRlZSkge1xyXG4gIGlmIChjb2xsZWN0aW9uID09IG51bGwpIHtcclxuICAgIHJldHVybiBjb2xsZWN0aW9uXHJcbiAgfVxyXG4gIGlmICghaXNBcnJheUxpa2UoY29sbGVjdGlvbikpIHtcclxuICAgIHJldHVybiBiYXNlRm9yT3duUmlnaHQoY29sbGVjdGlvbiwgaXRlcmF0ZWUpXHJcbiAgfVxyXG4gIGNvbnN0IGl0ZXJhYmxlID0gT2JqZWN0KGNvbGxlY3Rpb24pXHJcbiAgbGV0IGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoXHJcblxyXG4gIHdoaWxlIChsZW5ndGgtLSkge1xyXG4gICAgaWYgKGl0ZXJhdGVlKGl0ZXJhYmxlW2xlbmd0aF0sIGxlbmd0aCwgaXRlcmFibGUpID09PSBmYWxzZSkge1xyXG4gICAgICBicmVha1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gY29sbGVjdGlvblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBiYXNlRWFjaFJpZ2h0XHJcbiJdLCJtYXBwaW5ncyI6Inc2REFlWTtBQUFBLDJGQWZaLE1BQU9BLGdCQUFlLEtBQU0sc0JBQXNCLENBQ2xELE1BQU9DLFlBQVcsS0FBTSxtQkFBbUIsQ0FFM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVNDLGNBQWEsQ0FBQ0MsVUFBVSxDQUFFQyxRQUFRLENBQUUsaURBQzNDLEdBQUlELFVBQVUsRUFBSSxJQUFJLENBQUUsb0RBQ3RCLE1BQU9BLFdBQVUsQ0FDbkIsQ0FBQyx5REFDRCxHQUFJLENBQUNGLFdBQVcsQ0FBQ0UsVUFBVSxDQUFDLENBQUUsb0RBQzVCLE1BQU9ILGdCQUFlLENBQUNHLFVBQVUsQ0FBRUMsUUFBUSxDQUFDLENBQzlDLENBQUMsaUNBQ0QsS0FBTUMsU0FBUSwwQkFBR0MsTUFBTSxDQUFDSCxVQUFVLENBQUMsRUFDbkMsR0FBSUksT0FBTSwwQkFBR0osVUFBVSxDQUFDSSxNQUFNLDBCQUU5QixNQUFPQSxNQUFNLEVBQUUsQ0FBRSx5QkFDZixHQUFJSCxRQUFRLENBQUNDLFFBQVEsQ0FBQ0UsTUFBTSxDQUFDLENBQUVBLE1BQU0sQ0FBRUYsUUFBUSxDQUFDLEdBQUssS0FBSyxDQUFFLG9EQUMxRCxNQUNGLENBQUMsaUNBQ0gsQ0FBQyx3QkFDRCxNQUFPRixXQUFVLENBQ25CLENBRUEsY0FBZUQsY0FBYSJ9