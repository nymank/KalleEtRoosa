function cov_y7y71iksm(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\basePick.js";var hash="d86ed88169bf957581c5bbbf66a592b0e8ab3dbf";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\basePick.js",statementMap:{"0":{start:{line:14,column:2},end:{line:14,column:72}},"1":{start:{line:14,column:52},end:{line:14,column:71}}},fnMap:{"0":{name:"basePick",decl:{start:{line:13,column:9},end:{line:13,column:17}},loc:{start:{line:13,column:33},end:{line:15,column:1}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:35},end:{line:14,column:36}},loc:{start:{line:14,column:52},end:{line:14,column:71}},line:14}},branchMap:{},s:{"0":0,"1":0},f:{"0":0,"1":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d86ed88169bf957581c5bbbf66a592b0e8ab3dbf"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_y7y71iksm=function(){return actualCoverage;};}return actualCoverage;}cov_y7y71iksm();import basePickBy from'./basePickBy.js';import hasIn from'../hasIn.js';/**
 * The base implementation of `pick` without support for individual
 * property identifiers.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @returns {Object} Returns the new object.
 */function basePick(object,paths){cov_y7y71iksm().f[0]++;cov_y7y71iksm().s[0]++;return basePickBy(object,paths,(value,path)=>{cov_y7y71iksm().f[1]++;cov_y7y71iksm().s[1]++;return hasIn(object,path);});}export default basePick;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlUGlja0J5IiwiaGFzSW4iLCJiYXNlUGljayIsIm9iamVjdCIsInBhdGhzIiwidmFsdWUiLCJwYXRoIl0sInNvdXJjZXMiOlsiYmFzZVBpY2suanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJhc2VQaWNrQnkgZnJvbSAnLi9iYXNlUGlja0J5LmpzJ1xyXG5pbXBvcnQgaGFzSW4gZnJvbSAnLi4vaGFzSW4uanMnXHJcblxyXG4vKipcclxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYHBpY2tgIHdpdGhvdXQgc3VwcG9ydCBmb3IgaW5kaXZpZHVhbFxyXG4gKiBwcm9wZXJ0eSBpZGVudGlmaWVycy5cclxuICpcclxuICogQHByaXZhdGVcclxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgc291cmNlIG9iamVjdC5cclxuICogQHBhcmFtIHtzdHJpbmdbXX0gcGF0aHMgVGhlIHByb3BlcnR5IHBhdGhzIHRvIHBpY2suXHJcbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIG5ldyBvYmplY3QuXHJcbiAqL1xyXG5mdW5jdGlvbiBiYXNlUGljayhvYmplY3QsIHBhdGhzKSB7XHJcbiAgcmV0dXJuIGJhc2VQaWNrQnkob2JqZWN0LCBwYXRocywgKHZhbHVlLCBwYXRoKSA9PiBoYXNJbihvYmplY3QsIHBhdGgpKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBiYXNlUGlja1xyXG4iXSwibWFwcGluZ3MiOiJ1L0JBZVk7QUFBQSx5RkFmWixNQUFPQSxXQUFVLEtBQU0saUJBQWlCLENBQ3hDLE1BQU9DLE1BQUssS0FBTSxhQUFhLENBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVNDLFNBQVEsQ0FBQ0MsTUFBTSxDQUFFQyxLQUFLLENBQUUsK0NBQy9CLE1BQU9KLFdBQVUsQ0FBQ0csTUFBTSxDQUFFQyxLQUFLLENBQUUsQ0FBQ0MsS0FBSyxDQUFFQyxJQUFJLEdBQUsscURBQUFMLE1BQUssQ0FBQ0UsTUFBTSxDQUFFRyxJQUFJLENBQUMsQ0FBRCxDQUFDLENBQUMsQ0FDeEUsQ0FFQSxjQUFlSixTQUFRIn0=