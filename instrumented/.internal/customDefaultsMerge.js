function cov_1q0gus6p1p(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\customDefaultsMerge.js";var hash="61f3d8ab11baa2968473f0d034ebef5c70609c6d";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\customDefaultsMerge.js",statementMap:{"0":{start:{line:19,column:2},end:{line:24,column:3}},"1":{start:{line:21,column:4},end:{line:21,column:33}},"2":{start:{line:22,column:4},end:{line:22,column:72}},"3":{start:{line:23,column:4},end:{line:23,column:29}},"4":{start:{line:25,column:2},end:{line:25,column:17}}},fnMap:{"0":{name:"customDefaultsMerge",decl:{start:{line:18,column:9},end:{line:18,column:28}},loc:{start:{line:18,column:77},end:{line:26,column:1}},line:18}},branchMap:{"0":{loc:{start:{line:19,column:2},end:{line:24,column:3}},type:"if",locations:[{start:{line:19,column:2},end:{line:24,column:3}},{start:{line:19,column:2},end:{line:24,column:3}}],line:19},"1":{loc:{start:{line:19,column:6},end:{line:19,column:46}},type:"binary-expr",locations:[{start:{line:19,column:6},end:{line:19,column:24}},{start:{line:19,column:28},end:{line:19,column:46}}],line:19}},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{"0":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"61f3d8ab11baa2968473f0d034ebef5c70609c6d"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1q0gus6p1p=function(){return actualCoverage;};}return actualCoverage;}cov_1q0gus6p1p();import baseMerge from'./baseMerge.js';import isObject from'../isObject.js';/**
 * Used by `defaultsDeep` to customize its `merge` use to merge source
 * objects into destination objects that are passed thru.
 *
 * @private
 * @param {*} objValue The destination value.
 * @param {*} srcValue The source value.
 * @param {string} key The key of the property to merge.
 * @param {Object} object The parent object of `objValue`.
 * @param {Object} source The parent object of `srcValue`.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 * @returns {*} Returns the value to assign.
 */function customDefaultsMerge(objValue,srcValue,key,object,source,stack){cov_1q0gus6p1p().f[0]++;cov_1q0gus6p1p().s[0]++;if((cov_1q0gus6p1p().b[1][0]++,isObject(objValue))&&(cov_1q0gus6p1p().b[1][1]++,isObject(srcValue))){cov_1q0gus6p1p().b[0][0]++;cov_1q0gus6p1p().s[1]++;// Recursively merge objects and arrays (susceptible to call stack limits).
stack.set(srcValue,objValue);cov_1q0gus6p1p().s[2]++;baseMerge(objValue,srcValue,undefined,customDefaultsMerge,stack);cov_1q0gus6p1p().s[3]++;stack['delete'](srcValue);}else{cov_1q0gus6p1p().b[0][1]++;}cov_1q0gus6p1p().s[4]++;return objValue;}export default customDefaultsMerge;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlTWVyZ2UiLCJpc09iamVjdCIsImN1c3RvbURlZmF1bHRzTWVyZ2UiLCJvYmpWYWx1ZSIsInNyY1ZhbHVlIiwia2V5Iiwib2JqZWN0Iiwic291cmNlIiwic3RhY2siLCJzZXQiLCJ1bmRlZmluZWQiXSwic291cmNlcyI6WyJjdXN0b21EZWZhdWx0c01lcmdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiYXNlTWVyZ2UgZnJvbSAnLi9iYXNlTWVyZ2UuanMnXHJcbmltcG9ydCBpc09iamVjdCBmcm9tICcuLi9pc09iamVjdC5qcydcclxuXHJcbi8qKlxyXG4gKiBVc2VkIGJ5IGBkZWZhdWx0c0RlZXBgIHRvIGN1c3RvbWl6ZSBpdHMgYG1lcmdlYCB1c2UgdG8gbWVyZ2Ugc291cmNlXHJcbiAqIG9iamVjdHMgaW50byBkZXN0aW5hdGlvbiBvYmplY3RzIHRoYXQgYXJlIHBhc3NlZCB0aHJ1LlxyXG4gKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBAcGFyYW0geyp9IG9ialZhbHVlIFRoZSBkZXN0aW5hdGlvbiB2YWx1ZS5cclxuICogQHBhcmFtIHsqfSBzcmNWYWx1ZSBUaGUgc291cmNlIHZhbHVlLlxyXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIG1lcmdlLlxyXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBwYXJlbnQgb2JqZWN0IG9mIGBvYmpWYWx1ZWAuXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2UgVGhlIHBhcmVudCBvYmplY3Qgb2YgYHNyY1ZhbHVlYC5cclxuICogQHBhcmFtIHtPYmplY3R9IFtzdGFja10gVHJhY2tzIHRyYXZlcnNlZCBzb3VyY2UgdmFsdWVzIGFuZCB0aGVpciBtZXJnZWRcclxuICogIGNvdW50ZXJwYXJ0cy5cclxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHZhbHVlIHRvIGFzc2lnbi5cclxuICovXHJcbmZ1bmN0aW9uIGN1c3RvbURlZmF1bHRzTWVyZ2Uob2JqVmFsdWUsIHNyY1ZhbHVlLCBrZXksIG9iamVjdCwgc291cmNlLCBzdGFjaykge1xyXG4gIGlmIChpc09iamVjdChvYmpWYWx1ZSkgJiYgaXNPYmplY3Qoc3JjVmFsdWUpKSB7XHJcbiAgICAvLyBSZWN1cnNpdmVseSBtZXJnZSBvYmplY3RzIGFuZCBhcnJheXMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKS5cclxuICAgIHN0YWNrLnNldChzcmNWYWx1ZSwgb2JqVmFsdWUpXHJcbiAgICBiYXNlTWVyZ2Uob2JqVmFsdWUsIHNyY1ZhbHVlLCB1bmRlZmluZWQsIGN1c3RvbURlZmF1bHRzTWVyZ2UsIHN0YWNrKVxyXG4gICAgc3RhY2tbJ2RlbGV0ZSddKHNyY1ZhbHVlKVxyXG4gIH1cclxuICByZXR1cm4gb2JqVmFsdWVcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY3VzdG9tRGVmYXVsdHNNZXJnZVxyXG4iXSwibWFwcGluZ3MiOiIrOENBZVk7QUFBQSwyRkFmWixNQUFPQSxVQUFTLEtBQU0sZ0JBQWdCLENBQ3RDLE1BQU9DLFNBQVEsS0FBTSxnQkFBZ0IsQ0FFckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVNDLG9CQUFtQixDQUFDQyxRQUFRLENBQUVDLFFBQVEsQ0FBRUMsR0FBRyxDQUFFQyxNQUFNLENBQUVDLE1BQU0sQ0FBRUMsS0FBSyxDQUFFLGlEQUMzRSxHQUFJLDRCQUFBUCxRQUFRLENBQUNFLFFBQVEsQ0FBQywrQkFBSUYsUUFBUSxDQUFDRyxRQUFRLENBQUMsRUFBRSxvREFDNUM7QUFDQUksS0FBSyxDQUFDQyxHQUFHLENBQUNMLFFBQVEsQ0FBRUQsUUFBUSxDQUFDLHlCQUM3QkgsU0FBUyxDQUFDRyxRQUFRLENBQUVDLFFBQVEsQ0FBRU0sU0FBUyxDQUFFUixtQkFBbUIsQ0FBRU0sS0FBSyxDQUFDLHlCQUNwRUEsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDSixRQUFRLENBQUMsQ0FDM0IsQ0FBQyx5REFDRCxNQUFPRCxTQUFRLENBQ2pCLENBRUEsY0FBZUQsb0JBQW1CIn0=