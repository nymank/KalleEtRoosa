function cov_1udu0d4q5u(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\arrayIncludes.js";var hash="4ac99df79322542f6cb7566ca03447f3cc8e20b8";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\arrayIncludes.js",statementMap:{"0":{start:{line:13,column:17},end:{line:13,column:49}},"1":{start:{line:14,column:2},end:{line:14,column:54}}},fnMap:{"0":{name:"arrayIncludes",decl:{start:{line:12,column:9},end:{line:12,column:22}},loc:{start:{line:12,column:37},end:{line:15,column:1}},line:12}},branchMap:{"0":{loc:{start:{line:13,column:17},end:{line:13,column:49}},type:"cond-expr",locations:[{start:{line:13,column:33},end:{line:13,column:34}},{start:{line:13,column:37},end:{line:13,column:49}}],line:13},"1":{loc:{start:{line:14,column:9},end:{line:14,column:54}},type:"binary-expr",locations:[{start:{line:14,column:9},end:{line:14,column:17}},{start:{line:14,column:21},end:{line:14,column:54}}],line:14}},s:{"0":0,"1":0},f:{"0":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"4ac99df79322542f6cb7566ca03447f3cc8e20b8"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1udu0d4q5u=function(){return actualCoverage;};}return actualCoverage;}cov_1udu0d4q5u();import baseIndexOf from'./baseIndexOf.js';/**
 * A specialized version of `includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */function arrayIncludes(array,value){cov_1udu0d4q5u().f[0]++;const length=(cov_1udu0d4q5u().s[0]++,array==null?(cov_1udu0d4q5u().b[0][0]++,0):(cov_1udu0d4q5u().b[0][1]++,array.length));cov_1udu0d4q5u().s[1]++;return(cov_1udu0d4q5u().b[1][0]++,!!length)&&(cov_1udu0d4q5u().b[1][1]++,baseIndexOf(array,value,0)>-1);}export default arrayIncludes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlSW5kZXhPZiIsImFycmF5SW5jbHVkZXMiLCJhcnJheSIsInZhbHVlIiwibGVuZ3RoIl0sInNvdXJjZXMiOlsiYXJyYXlJbmNsdWRlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZUluZGV4T2YgZnJvbSAnLi9iYXNlSW5kZXhPZi5qcydcclxuXHJcbi8qKlxyXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGluY2x1ZGVzYCBmb3IgYXJyYXlzIHdpdGhvdXQgc3VwcG9ydCBmb3JcclxuICogc3BlY2lmeWluZyBhbiBpbmRleCB0byBzZWFyY2ggZnJvbS5cclxuICpcclxuICogQHByaXZhdGVcclxuICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaW5zcGVjdC5cclxuICogQHBhcmFtIHsqfSB0YXJnZXQgVGhlIHZhbHVlIHRvIHNlYXJjaCBmb3IuXHJcbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdGFyZ2V0YCBpcyBmb3VuZCwgZWxzZSBgZmFsc2VgLlxyXG4gKi9cclxuZnVuY3Rpb24gYXJyYXlJbmNsdWRlcyhhcnJheSwgdmFsdWUpIHtcclxuICBjb25zdCBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aFxyXG4gIHJldHVybiAhIWxlbmd0aCAmJiBiYXNlSW5kZXhPZihhcnJheSwgdmFsdWUsIDApID4gLTFcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXJyYXlJbmNsdWRlc1xyXG4iXSwibWFwcGluZ3MiOiJxeENBZVk7QUFBQSwyRkFmWixNQUFPQSxZQUFXLEtBQU0sa0JBQWtCLENBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVNDLGNBQWEsQ0FBQ0MsS0FBSyxDQUFFQyxLQUFLLENBQUUseUJBQ25DLEtBQU1DLE9BQU0sMEJBQUdGLEtBQUssRUFBSSxJQUFJLDZCQUFHLENBQUMsOEJBQUdBLEtBQUssQ0FBQ0UsTUFBTSwyQkFDL0MsTUFBTyw2QkFBQyxDQUFDQSxNQUFNLCtCQUFJSixXQUFXLENBQUNFLEtBQUssQ0FBRUMsS0FBSyxDQUFFLENBQUMsQ0FBQyxDQUFHLENBQUMsQ0FBQyxFQUN0RCxDQUVBLGNBQWVGLGNBQWEifQ==