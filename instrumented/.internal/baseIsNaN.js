function cov_vywgp7hs5(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\baseIsNaN.js";var hash="511cfc46243f5f819520182708cb3d82728f4e71";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\baseIsNaN.js",statementMap:{"0":{start:{line:9,column:2},end:{line:9,column:24}}},fnMap:{"0":{name:"baseIsNaN",decl:{start:{line:8,column:9},end:{line:8,column:18}},loc:{start:{line:8,column:26},end:{line:10,column:1}},line:8}},branchMap:{},s:{"0":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"511cfc46243f5f819520182708cb3d82728f4e71"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_vywgp7hs5=function(){return actualCoverage;};}return actualCoverage;}cov_vywgp7hs5();/**
 * The base implementation of `isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */function baseIsNaN(value){cov_vywgp7hs5().f[0]++;cov_vywgp7hs5().s[0]++;return value!==value;}export default baseIsNaN;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlSXNOYU4iLCJ2YWx1ZSJdLCJzb3VyY2VzIjpbImJhc2VJc05hTi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYGlzTmFOYCB3aXRob3V0IHN1cHBvcnQgZm9yIG51bWJlciBvYmplY3RzLlxyXG4gKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cclxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYE5hTmAsIGVsc2UgYGZhbHNlYC5cclxuICovXHJcbmZ1bmN0aW9uIGJhc2VJc05hTih2YWx1ZSkge1xyXG4gIHJldHVybiB2YWx1ZSAhPT0gdmFsdWVcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYmFzZUlzTmFOXHJcbiJdLCJtYXBwaW5ncyI6IjR4QkFlWTtBQUFBLHlGQWZaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBU0EsVUFBUyxDQUFDQyxLQUFLLENBQUUsK0NBQ3hCLE1BQU9BLE1BQUssR0FBS0EsS0FBSyxDQUN4QixDQUVBLGNBQWVELFVBQVMifQ==