function cov_2ns7ysdskr(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\baseFor.js";var hash="ae1cd66920d0e4474eedcbb82c37bb4dada1d0e8";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\baseFor.js",statementMap:{"0":{start:{line:13,column:19},end:{line:13,column:33}},"1":{start:{line:14,column:16},end:{line:14,column:32}},"2":{start:{line:15,column:19},end:{line:15,column:24}},"3":{start:{line:16,column:14},end:{line:16,column:16}},"4":{start:{line:18,column:2},end:{line:23,column:3}},"5":{start:{line:19,column:16},end:{line:19,column:30}},"6":{start:{line:20,column:4},end:{line:22,column:5}},"7":{start:{line:21,column:6},end:{line:21,column:11}},"8":{start:{line:24,column:2},end:{line:24,column:15}}},fnMap:{"0":{name:"baseFor",decl:{start:{line:12,column:9},end:{line:12,column:16}},loc:{start:{line:12,column:45},end:{line:25,column:1}},line:12}},branchMap:{"0":{loc:{start:{line:20,column:4},end:{line:22,column:5}},type:"if",locations:[{start:{line:20,column:4},end:{line:22,column:5}},{start:{line:20,column:4},end:{line:22,column:5}}],line:20}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ae1cd66920d0e4474eedcbb82c37bb4dada1d0e8"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2ns7ysdskr=function(){return actualCoverage;};}return actualCoverage;}cov_2ns7ysdskr();/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */function baseFor(object,iteratee,keysFunc){cov_2ns7ysdskr().f[0]++;const iterable=(cov_2ns7ysdskr().s[0]++,Object(object));const props=(cov_2ns7ysdskr().s[1]++,keysFunc(object));let{length}=(cov_2ns7ysdskr().s[2]++,props);let index=(cov_2ns7ysdskr().s[3]++,-1);cov_2ns7ysdskr().s[4]++;while(length--){const key=(cov_2ns7ysdskr().s[5]++,props[++index]);cov_2ns7ysdskr().s[6]++;if(iteratee(iterable[key],key,iterable)===false){cov_2ns7ysdskr().b[0][0]++;cov_2ns7ysdskr().s[7]++;break;}else{cov_2ns7ysdskr().b[0][1]++;}}cov_2ns7ysdskr().s[8]++;return object;}export default baseFor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlRm9yIiwib2JqZWN0IiwiaXRlcmF0ZWUiLCJrZXlzRnVuYyIsIml0ZXJhYmxlIiwiT2JqZWN0IiwicHJvcHMiLCJsZW5ndGgiLCJpbmRleCIsImtleSJdLCJzb3VyY2VzIjpbImJhc2VGb3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBiYXNlRm9yT3duYCB3aGljaCBpdGVyYXRlcyBvdmVyIGBvYmplY3RgXHJcbiAqIHByb3BlcnRpZXMgcmV0dXJuZWQgYnkgYGtleXNGdW5jYCBhbmQgaW52b2tlcyBgaXRlcmF0ZWVgIGZvciBlYWNoIHByb3BlcnR5LlxyXG4gKiBJdGVyYXRlZSBmdW5jdGlvbnMgbWF5IGV4aXQgaXRlcmF0aW9uIGVhcmx5IGJ5IGV4cGxpY2l0bHkgcmV0dXJuaW5nIGBmYWxzZWAuXHJcbiAqXHJcbiAqIEBwcml2YXRlXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpdGVyYXRlIG92ZXIuXHJcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXHJcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGtleXNGdW5jIFRoZSBmdW5jdGlvbiB0byBnZXQgdGhlIGtleXMgb2YgYG9iamVjdGAuXHJcbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYG9iamVjdGAuXHJcbiAqL1xyXG5mdW5jdGlvbiBiYXNlRm9yKG9iamVjdCwgaXRlcmF0ZWUsIGtleXNGdW5jKSB7XHJcbiAgY29uc3QgaXRlcmFibGUgPSBPYmplY3Qob2JqZWN0KVxyXG4gIGNvbnN0IHByb3BzID0ga2V5c0Z1bmMob2JqZWN0KVxyXG4gIGxldCB7IGxlbmd0aCB9ID0gcHJvcHNcclxuICBsZXQgaW5kZXggPSAtMVxyXG5cclxuICB3aGlsZSAobGVuZ3RoLS0pIHtcclxuICAgIGNvbnN0IGtleSA9IHByb3BzWysraW5kZXhdXHJcbiAgICBpZiAoaXRlcmF0ZWUoaXRlcmFibGVba2V5XSwga2V5LCBpdGVyYWJsZSkgPT09IGZhbHNlKSB7XHJcbiAgICAgIGJyZWFrXHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBvYmplY3RcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYmFzZUZvclxyXG4iXSwibWFwcGluZ3MiOiI4OENBZVk7QUFBQSwyRkFmWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBU0EsUUFBTyxDQUFDQyxNQUFNLENBQUVDLFFBQVEsQ0FBRUMsUUFBUSxDQUFFLHlCQUMzQyxLQUFNQyxTQUFRLDBCQUFHQyxNQUFNLENBQUNKLE1BQU0sQ0FBQyxFQUMvQixLQUFNSyxNQUFLLDBCQUFHSCxRQUFRLENBQUNGLE1BQU0sQ0FBQyxFQUM5QixHQUFJLENBQUVNLE1BQU8sQ0FBQywwQkFBR0QsS0FBSyxFQUN0QixHQUFJRSxNQUFLLDBCQUFHLENBQUMsQ0FBQywwQkFFZCxNQUFPRCxNQUFNLEVBQUUsQ0FBRSxDQUNmLEtBQU1FLElBQUcsMEJBQUdILEtBQUssQ0FBQyxFQUFFRSxLQUFLLENBQUMsMEJBQzFCLEdBQUlOLFFBQVEsQ0FBQ0UsUUFBUSxDQUFDSyxHQUFHLENBQUMsQ0FBRUEsR0FBRyxDQUFFTCxRQUFRLENBQUMsR0FBSyxLQUFLLENBQUUsb0RBQ3BELE1BQ0YsQ0FBQyxpQ0FDSCxDQUFDLHdCQUNELE1BQU9ILE9BQU0sQ0FDZixDQUVBLGNBQWVELFFBQU8ifQ==