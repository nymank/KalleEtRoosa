function cov_1e387bf93w(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\createCaseFirst.js";var hash="dbc6f5822c1d00e12e60534d6ab563344b520d97";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\createCaseFirst.js",statementMap:{"0":{start:{line:13,column:2},end:{line:31,column:3}},"1":{start:{line:14,column:4},end:{line:16,column:5}},"2":{start:{line:15,column:6},end:{line:15,column:15}},"3":{start:{line:18,column:23},end:{line:20,column:17}},"4":{start:{line:22,column:16},end:{line:24,column:17}},"5":{start:{line:26,column:21},end:{line:28,column:23}},"6":{start:{line:30,column:4},end:{line:30,column:39}}},fnMap:{"0":{name:"createCaseFirst",decl:{start:{line:12,column:9},end:{line:12,column:24}},loc:{start:{line:12,column:37},end:{line:32,column:1}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:9},end:{line:13,column:10}},loc:{start:{line:13,column:21},end:{line:31,column:3}},line:13}},branchMap:{"0":{loc:{start:{line:14,column:4},end:{line:16,column:5}},type:"if",locations:[{start:{line:14,column:4},end:{line:16,column:5}},{start:{line:14,column:4},end:{line:16,column:5}}],line:14},"1":{loc:{start:{line:18,column:23},end:{line:20,column:17}},type:"cond-expr",locations:[{start:{line:19,column:8},end:{line:19,column:29}},{start:{line:20,column:8},end:{line:20,column:17}}],line:18},"2":{loc:{start:{line:22,column:16},end:{line:24,column:17}},type:"cond-expr",locations:[{start:{line:23,column:8},end:{line:23,column:21}},{start:{line:24,column:8},end:{line:24,column:17}}],line:22},"3":{loc:{start:{line:26,column:21},end:{line:28,column:23}},type:"cond-expr",locations:[{start:{line:27,column:8},end:{line:27,column:41}},{start:{line:28,column:8},end:{line:28,column:23}}],line:26}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"dbc6f5822c1d00e12e60534d6ab563344b520d97"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1e387bf93w=function(){return actualCoverage;};}return actualCoverage;}cov_1e387bf93w();import castSlice from'./castSlice.js';import hasUnicode from'./hasUnicode.js';import stringToArray from'./stringToArray.js';/**
 * Creates a function like `lowerFirst`.
 *
 * @private
 * @param {string} methodName The name of the `String` case method to use.
 * @returns {Function} Returns the new case function.
 */function createCaseFirst(methodName){cov_1e387bf93w().f[0]++;cov_1e387bf93w().s[0]++;return string=>{cov_1e387bf93w().f[1]++;cov_1e387bf93w().s[1]++;if(!string){cov_1e387bf93w().b[0][0]++;cov_1e387bf93w().s[2]++;return'';}else{cov_1e387bf93w().b[0][1]++;}const strSymbols=(cov_1e387bf93w().s[3]++,hasUnicode(string)?(cov_1e387bf93w().b[1][0]++,stringToArray(string)):(cov_1e387bf93w().b[1][1]++,undefined));const chr=(cov_1e387bf93w().s[4]++,strSymbols?(cov_1e387bf93w().b[2][0]++,strSymbols[0]):(cov_1e387bf93w().b[2][1]++,string[0]));const trailing=(cov_1e387bf93w().s[5]++,strSymbols?(cov_1e387bf93w().b[3][0]++,castSlice(strSymbols,1).join('')):(cov_1e387bf93w().b[3][1]++,string.slice(1)));cov_1e387bf93w().s[6]++;return chr[methodName]()+trailing;};}export default createCaseFirst;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjYXN0U2xpY2UiLCJoYXNVbmljb2RlIiwic3RyaW5nVG9BcnJheSIsImNyZWF0ZUNhc2VGaXJzdCIsIm1ldGhvZE5hbWUiLCJzdHJpbmciLCJzdHJTeW1ib2xzIiwidW5kZWZpbmVkIiwiY2hyIiwidHJhaWxpbmciLCJqb2luIiwic2xpY2UiXSwic291cmNlcyI6WyJjcmVhdGVDYXNlRmlyc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNhc3RTbGljZSBmcm9tICcuL2Nhc3RTbGljZS5qcydcclxuaW1wb3J0IGhhc1VuaWNvZGUgZnJvbSAnLi9oYXNVbmljb2RlLmpzJ1xyXG5pbXBvcnQgc3RyaW5nVG9BcnJheSBmcm9tICcuL3N0cmluZ1RvQXJyYXkuanMnXHJcblxyXG4vKipcclxuICogQ3JlYXRlcyBhIGZ1bmN0aW9uIGxpa2UgYGxvd2VyRmlyc3RgLlxyXG4gKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBAcGFyYW0ge3N0cmluZ30gbWV0aG9kTmFtZSBUaGUgbmFtZSBvZiB0aGUgYFN0cmluZ2AgY2FzZSBtZXRob2QgdG8gdXNlLlxyXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBjYXNlIGZ1bmN0aW9uLlxyXG4gKi9cclxuZnVuY3Rpb24gY3JlYXRlQ2FzZUZpcnN0KG1ldGhvZE5hbWUpIHtcclxuICByZXR1cm4gKHN0cmluZykgPT4ge1xyXG4gICAgaWYgKCFzdHJpbmcpIHtcclxuICAgICAgcmV0dXJuICcnXHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgc3RyU3ltYm9scyA9IGhhc1VuaWNvZGUoc3RyaW5nKVxyXG4gICAgICA/IHN0cmluZ1RvQXJyYXkoc3RyaW5nKVxyXG4gICAgICA6IHVuZGVmaW5lZFxyXG5cclxuICAgIGNvbnN0IGNociA9IHN0clN5bWJvbHNcclxuICAgICAgPyBzdHJTeW1ib2xzWzBdXHJcbiAgICAgIDogc3RyaW5nWzBdXHJcblxyXG4gICAgY29uc3QgdHJhaWxpbmcgPSBzdHJTeW1ib2xzXHJcbiAgICAgID8gY2FzdFNsaWNlKHN0clN5bWJvbHMsIDEpLmpvaW4oJycpXHJcbiAgICAgIDogc3RyaW5nLnNsaWNlKDEpXHJcblxyXG4gICAgcmV0dXJuIGNoclttZXRob2ROYW1lXSgpICsgdHJhaWxpbmdcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUNhc2VGaXJzdFxyXG4iXSwibWFwcGluZ3MiOiIybkVBZVk7QUFBQSwyRkFmWixNQUFPQSxVQUFTLEtBQU0sZ0JBQWdCLENBQ3RDLE1BQU9DLFdBQVUsS0FBTSxpQkFBaUIsQ0FDeEMsTUFBT0MsY0FBYSxLQUFNLG9CQUFvQixDQUU5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVNDLGdCQUFlLENBQUNDLFVBQVUsQ0FBRSxpREFDbkMsTUFBUUMsT0FBTSxFQUFLLGlEQUNqQixHQUFJLENBQUNBLE1BQU0sQ0FBRSxvREFDWCxNQUFPLEVBQUUsQ0FDWCxDQUFDLGlDQUVELEtBQU1DLFdBQVUsMEJBQUdMLFVBQVUsQ0FBQ0ksTUFBTSxDQUFDLDZCQUNqQ0gsYUFBYSxDQUFDRyxNQUFNLENBQUMsOEJBQ3JCRSxTQUFTLEdBRWIsS0FBTUMsSUFBRywwQkFBR0YsVUFBVSw2QkFDbEJBLFVBQVUsQ0FBQyxDQUFDLENBQUMsOEJBQ2JELE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FFYixLQUFNSSxTQUFRLDBCQUFHSCxVQUFVLDZCQUN2Qk4sU0FBUyxDQUFDTSxVQUFVLENBQUUsQ0FBQyxDQUFDLENBQUNJLElBQUksQ0FBQyxFQUFFLENBQUMsOEJBQ2pDTCxNQUFNLENBQUNNLEtBQUssQ0FBQyxDQUFDLENBQUMsMkJBRW5CLE1BQU9ILElBQUcsQ0FBQ0osVUFBVSxDQUFDLEVBQUUsQ0FBR0ssUUFBUSxDQUNyQyxDQUFDLENBQ0gsQ0FFQSxjQUFlTixnQkFBZSJ9