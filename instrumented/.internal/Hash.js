function cov_13ypkf978s(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\Hash.js";var hash="c59141b4ffc8450fa8e10af092fc0a0cdcbf11b2";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\Hash.js",statementMap:{"0":{start:{line:2,column:23},end:{line:2,column:50}},"1":{start:{line:14,column:16},end:{line:14,column:18}},"2":{start:{line:15,column:19},end:{line:15,column:55}},"3":{start:{line:17,column:4},end:{line:17,column:16}},"4":{start:{line:18,column:4},end:{line:21,column:5}},"5":{start:{line:19,column:20},end:{line:19,column:34}},"6":{start:{line:20,column:6},end:{line:20,column:34}},"7":{start:{line:30,column:4},end:{line:30,column:39}},"8":{start:{line:31,column:4},end:{line:31,column:17}},"9":{start:{line:42,column:19},end:{line:42,column:61}},"10":{start:{line:43,column:4},end:{line:43,column:31}},"11":{start:{line:44,column:4},end:{line:44,column:17}},"12":{start:{line:55,column:17},end:{line:55,column:30}},"13":{start:{line:56,column:19},end:{line:56,column:28}},"14":{start:{line:57,column:4},end:{line:57,column:57}},"15":{start:{line:68,column:17},end:{line:68,column:30}},"16":{start:{line:69,column:4},end:{line:69,column:34}},"17":{start:{line:81,column:17},end:{line:81,column:30}},"18":{start:{line:82,column:4},end:{line:82,column:38}},"19":{start:{line:83,column:4},end:{line:83,column:60}},"20":{start:{line:84,column:4},end:{line:84,column:15}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:2},end:{line:13,column:3}},loc:{start:{line:13,column:23},end:{line:22,column:3}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:29,column:2},end:{line:29,column:3}},loc:{start:{line:29,column:10},end:{line:32,column:3}},line:29},"2":{name:"(anonymous_2)",decl:{start:{line:41,column:2},end:{line:41,column:3}},loc:{start:{line:41,column:14},end:{line:45,column:3}},line:41},"3":{name:"(anonymous_3)",decl:{start:{line:54,column:2},end:{line:54,column:3}},loc:{start:{line:54,column:11},end:{line:58,column:3}},line:54},"4":{name:"(anonymous_4)",decl:{start:{line:67,column:2},end:{line:67,column:3}},loc:{start:{line:67,column:11},end:{line:70,column:3}},line:67},"5":{name:"(anonymous_5)",decl:{start:{line:80,column:2},end:{line:80,column:3}},loc:{start:{line:80,column:18},end:{line:85,column:3}},line:80}},branchMap:{"0":{loc:{start:{line:15,column:19},end:{line:15,column:55}},type:"cond-expr",locations:[{start:{line:15,column:37},end:{line:15,column:38}},{start:{line:15,column:41},end:{line:15,column:55}}],line:15},"1":{loc:{start:{line:42,column:19},end:{line:42,column:61}},type:"binary-expr",locations:[{start:{line:42,column:19},end:{line:42,column:32}},{start:{line:42,column:36},end:{line:42,column:61}}],line:42},"2":{loc:{start:{line:43,column:17},end:{line:43,column:31}},type:"cond-expr",locations:[{start:{line:43,column:26},end:{line:43,column:27}},{start:{line:43,column:30},end:{line:43,column:31}}],line:43},"3":{loc:{start:{line:57,column:11},end:{line:57,column:57}},type:"cond-expr",locations:[{start:{line:57,column:39},end:{line:57,column:48}},{start:{line:57,column:51},end:{line:57,column:57}}],line:57},"4":{loc:{start:{line:82,column:17},end:{line:82,column:38}},type:"cond-expr",locations:[{start:{line:82,column:33},end:{line:82,column:34}},{start:{line:82,column:37},end:{line:82,column:38}}],line:82},"5":{loc:{start:{line:83,column:16},end:{line:83,column:60}},type:"cond-expr",locations:[{start:{line:83,column:38},end:{line:83,column:52}},{start:{line:83,column:55},end:{line:83,column:60}}],line:83}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c59141b4ffc8450fa8e10af092fc0a0cdcbf11b2"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_13ypkf978s=function(){return actualCoverage;};}return actualCoverage;}cov_13ypkf978s();/** Used to stand-in for `undefined` hash values. */const HASH_UNDEFINED=(cov_13ypkf978s().s[0]++,'__lodash_hash_undefined__');class Hash{/**
   * Creates a hash object.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */constructor(entries){cov_13ypkf978s().f[0]++;let index=(cov_13ypkf978s().s[1]++,-1);const length=(cov_13ypkf978s().s[2]++,entries==null?(cov_13ypkf978s().b[0][0]++,0):(cov_13ypkf978s().b[0][1]++,entries.length));cov_13ypkf978s().s[3]++;this.clear();cov_13ypkf978s().s[4]++;while(++index<length){const entry=(cov_13ypkf978s().s[5]++,entries[index]);cov_13ypkf978s().s[6]++;this.set(entry[0],entry[1]);}}/**
   * Removes all key-value entries from the hash.
   *
   * @memberOf Hash
   */clear(){cov_13ypkf978s().f[1]++;cov_13ypkf978s().s[7]++;this.__data__=Object.create(null);cov_13ypkf978s().s[8]++;this.size=0;}/**
   * Removes `key` and its value from the hash.
   *
   * @memberOf Hash
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */delete(key){cov_13ypkf978s().f[2]++;const result=(cov_13ypkf978s().s[9]++,(cov_13ypkf978s().b[1][0]++,this.has(key))&&(cov_13ypkf978s().b[1][1]++,delete this.__data__[key]));cov_13ypkf978s().s[10]++;this.size-=result?(cov_13ypkf978s().b[2][0]++,1):(cov_13ypkf978s().b[2][1]++,0);cov_13ypkf978s().s[11]++;return result;}/**
   * Gets the hash value for `key`.
   *
   * @memberOf Hash
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */get(key){cov_13ypkf978s().f[3]++;const data=(cov_13ypkf978s().s[12]++,this.__data__);const result=(cov_13ypkf978s().s[13]++,data[key]);cov_13ypkf978s().s[14]++;return result===HASH_UNDEFINED?(cov_13ypkf978s().b[3][0]++,undefined):(cov_13ypkf978s().b[3][1]++,result);}/**
   * Checks if a hash value for `key` exists.
   *
   * @memberOf Hash
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */has(key){cov_13ypkf978s().f[4]++;const data=(cov_13ypkf978s().s[15]++,this.__data__);cov_13ypkf978s().s[16]++;return data[key]!==undefined;}/**
   * Sets the hash `key` to `value`.
   *
   * @memberOf Hash
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the hash instance.
   */set(key,value){cov_13ypkf978s().f[5]++;const data=(cov_13ypkf978s().s[17]++,this.__data__);cov_13ypkf978s().s[18]++;this.size+=this.has(key)?(cov_13ypkf978s().b[4][0]++,0):(cov_13ypkf978s().b[4][1]++,1);cov_13ypkf978s().s[19]++;data[key]=value===undefined?(cov_13ypkf978s().b[5][0]++,HASH_UNDEFINED):(cov_13ypkf978s().b[5][1]++,value);cov_13ypkf978s().s[20]++;return this;}}export default Hash;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJIQVNIX1VOREVGSU5FRCIsIkhhc2giLCJjb25zdHJ1Y3RvciIsImVudHJpZXMiLCJpbmRleCIsImxlbmd0aCIsImNsZWFyIiwiZW50cnkiLCJzZXQiLCJfX2RhdGFfXyIsIk9iamVjdCIsImNyZWF0ZSIsInNpemUiLCJkZWxldGUiLCJrZXkiLCJyZXN1bHQiLCJoYXMiLCJnZXQiLCJkYXRhIiwidW5kZWZpbmVkIiwidmFsdWUiXSwic291cmNlcyI6WyJIYXNoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIHRvIHN0YW5kLWluIGZvciBgdW5kZWZpbmVkYCBoYXNoIHZhbHVlcy4gKi9cclxuY29uc3QgSEFTSF9VTkRFRklORUQgPSAnX19sb2Rhc2hfaGFzaF91bmRlZmluZWRfXydcclxuXHJcbmNsYXNzIEhhc2gge1xyXG5cclxuICAvKipcclxuICAgKiBDcmVhdGVzIGEgaGFzaCBvYmplY3QuXHJcbiAgICpcclxuICAgKiBAcHJpdmF0ZVxyXG4gICAqIEBjb25zdHJ1Y3RvclxyXG4gICAqIEBwYXJhbSB7QXJyYXl9IFtlbnRyaWVzXSBUaGUga2V5LXZhbHVlIHBhaXJzIHRvIGNhY2hlLlxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKGVudHJpZXMpIHtcclxuICAgIGxldCBpbmRleCA9IC0xXHJcbiAgICBjb25zdCBsZW5ndGggPSBlbnRyaWVzID09IG51bGwgPyAwIDogZW50cmllcy5sZW5ndGhcclxuXHJcbiAgICB0aGlzLmNsZWFyKClcclxuICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XHJcbiAgICAgIGNvbnN0IGVudHJ5ID0gZW50cmllc1tpbmRleF1cclxuICAgICAgdGhpcy5zZXQoZW50cnlbMF0sIGVudHJ5WzFdKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgaGFzaC5cclxuICAgKlxyXG4gICAqIEBtZW1iZXJPZiBIYXNoXHJcbiAgICovXHJcbiAgY2xlYXIoKSB7XHJcbiAgICB0aGlzLl9fZGF0YV9fID0gT2JqZWN0LmNyZWF0ZShudWxsKVxyXG4gICAgdGhpcy5zaXplID0gMFxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogUmVtb3ZlcyBga2V5YCBhbmQgaXRzIHZhbHVlIGZyb20gdGhlIGhhc2guXHJcbiAgICpcclxuICAgKiBAbWVtYmVyT2YgSGFzaFxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gcmVtb3ZlLlxyXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cclxuICAgKi9cclxuICBkZWxldGUoa2V5KSB7XHJcbiAgICBjb25zdCByZXN1bHQgPSB0aGlzLmhhcyhrZXkpICYmIGRlbGV0ZSB0aGlzLl9fZGF0YV9fW2tleV1cclxuICAgIHRoaXMuc2l6ZSAtPSByZXN1bHQgPyAxIDogMFxyXG4gICAgcmV0dXJuIHJlc3VsdFxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2V0cyB0aGUgaGFzaCB2YWx1ZSBmb3IgYGtleWAuXHJcbiAgICpcclxuICAgKiBAbWVtYmVyT2YgSGFzaFxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LlxyXG4gICAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS5cclxuICAgKi9cclxuICBnZXQoa2V5KSB7XHJcbiAgICBjb25zdCBkYXRhID0gdGhpcy5fX2RhdGFfX1xyXG4gICAgY29uc3QgcmVzdWx0ID0gZGF0YVtrZXldXHJcbiAgICByZXR1cm4gcmVzdWx0ID09PSBIQVNIX1VOREVGSU5FRCA/IHVuZGVmaW5lZCA6IHJlc3VsdFxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ2hlY2tzIGlmIGEgaGFzaCB2YWx1ZSBmb3IgYGtleWAgZXhpc3RzLlxyXG4gICAqXHJcbiAgICogQG1lbWJlck9mIEhhc2hcclxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxyXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbnRyeSBmb3IgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXHJcbiAgICovXHJcbiAgaGFzKGtleSkge1xyXG4gICAgY29uc3QgZGF0YSA9IHRoaXMuX19kYXRhX19cclxuICAgIHJldHVybiBkYXRhW2tleV0gIT09IHVuZGVmaW5lZFxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2V0cyB0aGUgaGFzaCBga2V5YCB0byBgdmFsdWVgLlxyXG4gICAqXHJcbiAgICogQG1lbWJlck9mIEhhc2hcclxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC5cclxuICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuXHJcbiAgICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgaGFzaCBpbnN0YW5jZS5cclxuICAgKi9cclxuICBzZXQoa2V5LCB2YWx1ZSkge1xyXG4gICAgY29uc3QgZGF0YSA9IHRoaXMuX19kYXRhX19cclxuICAgIHRoaXMuc2l6ZSArPSB0aGlzLmhhcyhrZXkpID8gMCA6IDFcclxuICAgIGRhdGFba2V5XSA9IHZhbHVlID09PSB1bmRlZmluZWQgPyBIQVNIX1VOREVGSU5FRCA6IHZhbHVlXHJcbiAgICByZXR1cm4gdGhpc1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSGFzaFxyXG4iXSwibWFwcGluZ3MiOiI2K0hBZVk7QUFBQSwyRkFmWixvREFDQSxLQUFNQSxlQUFjLDBCQUFHLDJCQUEyQixFQUVsRCxLQUFNQyxLQUFLLENBRVQ7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FDRUMsV0FBVyxDQUFDQyxPQUFPLENBQUUseUJBQ25CLEdBQUlDLE1BQUssMEJBQUcsQ0FBQyxDQUFDLEVBQ2QsS0FBTUMsT0FBTSwwQkFBR0YsT0FBTyxFQUFJLElBQUksNkJBQUcsQ0FBQyw4QkFBR0EsT0FBTyxDQUFDRSxNQUFNLDJCQUVuRCxJQUFJLENBQUNDLEtBQUssRUFBRSx5QkFDWixNQUFPLEVBQUVGLEtBQUssQ0FBR0MsTUFBTSxDQUFFLENBQ3ZCLEtBQU1FLE1BQUssMEJBQUdKLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDLDBCQUM1QixJQUFJLENBQUNJLEdBQUcsQ0FBQ0QsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFFQSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDOUIsQ0FDRixDQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsS0FDRUQsS0FBSyxFQUFHLGlEQUNOLElBQUksQ0FBQ0csUUFBUSxDQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQyxJQUFJLENBQUMseUJBQ25DLElBQUksQ0FBQ0MsSUFBSSxDQUFHLENBQUMsQ0FDZixDQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQ0VDLE1BQU0sQ0FBQ0MsR0FBRyxDQUFFLHlCQUNWLEtBQU1DLE9BQU0sMEJBQUcsZ0NBQUksQ0FBQ0MsR0FBRyxDQUFDRixHQUFHLENBQUMsK0JBQUksTUFBTyxLQUFJLENBQUNMLFFBQVEsQ0FBQ0ssR0FBRyxDQUFDLDRCQUN6RCxJQUFJLENBQUNGLElBQUksRUFBSUcsTUFBTSw2QkFBRyxDQUFDLDhCQUFHLENBQUMsMkJBQzNCLE1BQU9BLE9BQU0sQ0FDZixDQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQ0VFLEdBQUcsQ0FBQ0gsR0FBRyxDQUFFLHlCQUNQLEtBQU1JLEtBQUksMkJBQUcsSUFBSSxDQUFDVCxRQUFRLEVBQzFCLEtBQU1NLE9BQU0sMkJBQUdHLElBQUksQ0FBQ0osR0FBRyxDQUFDLDJCQUN4QixNQUFPQyxPQUFNLEdBQUtmLGNBQWMsNkJBQUdtQixTQUFTLDhCQUFHSixNQUFNLEVBQ3ZELENBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FDRUMsR0FBRyxDQUFDRixHQUFHLENBQUUseUJBQ1AsS0FBTUksS0FBSSwyQkFBRyxJQUFJLENBQUNULFFBQVEsMkJBQzFCLE1BQU9TLEtBQUksQ0FBQ0osR0FBRyxDQUFDLEdBQUtLLFNBQVMsQ0FDaEMsQ0FFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQ0VYLEdBQUcsQ0FBQ00sR0FBRyxDQUFFTSxLQUFLLENBQUUseUJBQ2QsS0FBTUYsS0FBSSwyQkFBRyxJQUFJLENBQUNULFFBQVEsMkJBQzFCLElBQUksQ0FBQ0csSUFBSSxFQUFJLElBQUksQ0FBQ0ksR0FBRyxDQUFDRixHQUFHLENBQUMsNkJBQUcsQ0FBQyw4QkFBRyxDQUFDLDJCQUNsQ0ksSUFBSSxDQUFDSixHQUFHLENBQUMsQ0FBR00sS0FBSyxHQUFLRCxTQUFTLDZCQUFHbkIsY0FBYyw4QkFBR29CLEtBQUssMkJBQ3hELE1BQU8sS0FBSSxDQUNiLENBQ0YsQ0FFQSxjQUFlbkIsS0FBSSJ9