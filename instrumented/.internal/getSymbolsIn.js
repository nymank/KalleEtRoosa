function cov_19jgyim98q(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\getSymbolsIn.js";var hash="9c11505795783c6b432c71ec12ba53f9c2882901";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\getSymbolsIn.js",statementMap:{"0":{start:{line:11,column:17},end:{line:11,column:19}},"1":{start:{line:12,column:2},end:{line:15,column:3}},"2":{start:{line:13,column:4},end:{line:13,column:38}},"3":{start:{line:14,column:4},end:{line:14,column:50}},"4":{start:{line:16,column:2},end:{line:16,column:15}}},fnMap:{"0":{name:"getSymbolsIn",decl:{start:{line:10,column:9},end:{line:10,column:21}},loc:{start:{line:10,column:30},end:{line:17,column:1}},line:10}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"9c11505795783c6b432c71ec12ba53f9c2882901"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_19jgyim98q=function(){return actualCoverage;};}return actualCoverage;}cov_19jgyim98q();import getSymbols from'./getSymbols.js';/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */function getSymbolsIn(object){cov_19jgyim98q().f[0]++;const result=(cov_19jgyim98q().s[0]++,[]);cov_19jgyim98q().s[1]++;while(object){cov_19jgyim98q().s[2]++;result.push(...getSymbols(object));cov_19jgyim98q().s[3]++;object=Object.getPrototypeOf(Object(object));}cov_19jgyim98q().s[4]++;return result;}export default getSymbolsIn;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRTeW1ib2xzIiwiZ2V0U3ltYm9sc0luIiwib2JqZWN0IiwicmVzdWx0IiwicHVzaCIsIk9iamVjdCIsImdldFByb3RvdHlwZU9mIl0sInNvdXJjZXMiOlsiZ2V0U3ltYm9sc0luLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBnZXRTeW1ib2xzIGZyb20gJy4vZ2V0U3ltYm9scy5qcydcclxuXHJcbi8qKlxyXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBvd24gYW5kIGluaGVyaXRlZCBlbnVtZXJhYmxlIHN5bWJvbHMgb2YgYG9iamVjdGAuXHJcbiAqXHJcbiAqIEBwcml2YXRlXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cclxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBzeW1ib2xzLlxyXG4gKi9cclxuZnVuY3Rpb24gZ2V0U3ltYm9sc0luKG9iamVjdCkge1xyXG4gIGNvbnN0IHJlc3VsdCA9IFtdXHJcbiAgd2hpbGUgKG9iamVjdCkge1xyXG4gICAgcmVzdWx0LnB1c2goLi4uZ2V0U3ltYm9scyhvYmplY3QpKVxyXG4gICAgb2JqZWN0ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKE9iamVjdChvYmplY3QpKVxyXG4gIH1cclxuICByZXR1cm4gcmVzdWx0XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGdldFN5bWJvbHNJblxyXG4iXSwibWFwcGluZ3MiOiJnaUNBZVk7QUFBQSwyRkFmWixNQUFPQSxXQUFVLEtBQU0saUJBQWlCLENBRXhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBU0MsYUFBWSxDQUFDQyxNQUFNLENBQUUseUJBQzVCLEtBQU1DLE9BQU0sMEJBQUcsRUFBRSwwQkFDakIsTUFBT0QsTUFBTSxDQUFFLHlCQUNiQyxNQUFNLENBQUNDLElBQUksQ0FBQyxHQUFHSixVQUFVLENBQUNFLE1BQU0sQ0FBQyxDQUFDLHlCQUNsQ0EsTUFBTSxDQUFHRyxNQUFNLENBQUNDLGNBQWMsQ0FBQ0QsTUFBTSxDQUFDSCxNQUFNLENBQUMsQ0FBQyxDQUNoRCxDQUFDLHdCQUNELE1BQU9DLE9BQU0sQ0FDZixDQUVBLGNBQWVGLGFBQVkifQ==