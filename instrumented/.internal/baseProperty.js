function cov_2otlv4qr5h(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\baseProperty.js";var hash="21ebd69e0c690fe96a2f8d41b264423f15bdcc30";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\baseProperty.js",statementMap:{"0":{start:{line:9,column:2},end:{line:9,column:61}},"1":{start:{line:9,column:21},end:{line:9,column:61}}},fnMap:{"0":{name:"baseProperty",decl:{start:{line:8,column:9},end:{line:8,column:21}},loc:{start:{line:8,column:27},end:{line:10,column:1}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:9},end:{line:9,column:10}},loc:{start:{line:9,column:21},end:{line:9,column:61}},line:9}},branchMap:{"0":{loc:{start:{line:9,column:21},end:{line:9,column:61}},type:"cond-expr",locations:[{start:{line:9,column:38},end:{line:9,column:47}},{start:{line:9,column:50},end:{line:9,column:61}}],line:9}},s:{"0":0,"1":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"21ebd69e0c690fe96a2f8d41b264423f15bdcc30"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2otlv4qr5h=function(){return actualCoverage;};}return actualCoverage;}cov_2otlv4qr5h();/**
 * The base implementation of `property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */function baseProperty(key){cov_2otlv4qr5h().f[0]++;cov_2otlv4qr5h().s[0]++;return object=>{cov_2otlv4qr5h().f[1]++;cov_2otlv4qr5h().s[1]++;return object==null?(cov_2otlv4qr5h().b[0][0]++,undefined):(cov_2otlv4qr5h().b[0][1]++,object[key]);};}export default baseProperty;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlUHJvcGVydHkiLCJrZXkiLCJvYmplY3QiLCJ1bmRlZmluZWQiXSwic291cmNlcyI6WyJiYXNlUHJvcGVydHkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBwcm9wZXJ0eWAgd2l0aG91dCBzdXBwb3J0IGZvciBkZWVwIHBhdGhzLlxyXG4gKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGdldC5cclxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYWNjZXNzb3IgZnVuY3Rpb24uXHJcbiAqL1xyXG5mdW5jdGlvbiBiYXNlUHJvcGVydHkoa2V5KSB7XHJcbiAgcmV0dXJuIChvYmplY3QpID0+IG9iamVjdCA9PSBudWxsID8gdW5kZWZpbmVkIDogb2JqZWN0W2tleV1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYmFzZVByb3BlcnR5XHJcbiJdLCJtYXBwaW5ncyI6ImtzQ0FlWTtBQUFBLDJGQWZaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBU0EsYUFBWSxDQUFDQyxHQUFHLENBQUUsaURBQ3pCLE1BQVFDLE9BQU0sRUFBSyx1REFBQUEsT0FBTSxFQUFJLElBQUksNkJBQUdDLFNBQVMsOEJBQUdELE1BQU0sQ0FBQ0QsR0FBRyxDQUFDLEVBQUQsQ0FBQyxDQUM3RCxDQUVBLGNBQWVELGFBQVkifQ==