function cov_29by1rh2te(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\isStrictComparable.js";var hash="d73cf6022189158b0b6f5a128c97b6d534283aec";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\isStrictComparable.js",statementMap:{"0":{start:{line:12,column:2},end:{line:12,column:44}}},fnMap:{"0":{name:"isStrictComparable",decl:{start:{line:11,column:9},end:{line:11,column:27}},loc:{start:{line:11,column:35},end:{line:13,column:1}},line:11}},branchMap:{"0":{loc:{start:{line:12,column:9},end:{line:12,column:44}},type:"binary-expr",locations:[{start:{line:12,column:9},end:{line:12,column:24}},{start:{line:12,column:28},end:{line:12,column:44}}],line:12}},s:{"0":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d73cf6022189158b0b6f5a128c97b6d534283aec"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_29by1rh2te=function(){return actualCoverage;};}return actualCoverage;}cov_29by1rh2te();import isObject from'../isObject.js';/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */function isStrictComparable(value){cov_29by1rh2te().f[0]++;cov_29by1rh2te().s[0]++;return(cov_29by1rh2te().b[0][0]++,value===value)&&(cov_29by1rh2te().b[0][1]++,!isObject(value));}export default isStrictComparable;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpc09iamVjdCIsImlzU3RyaWN0Q29tcGFyYWJsZSIsInZhbHVlIl0sInNvdXJjZXMiOlsiaXNTdHJpY3RDb21wYXJhYmxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpc09iamVjdCBmcm9tICcuLi9pc09iamVjdC5qcydcclxuXHJcbi8qKlxyXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBzdWl0YWJsZSBmb3Igc3RyaWN0IGVxdWFsaXR5IGNvbXBhcmlzb25zLCBpLmUuIGA9PT1gLlxyXG4gKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cclxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaWYgc3VpdGFibGUgZm9yIHN0cmljdFxyXG4gKiAgZXF1YWxpdHkgY29tcGFyaXNvbnMsIGVsc2UgYGZhbHNlYC5cclxuICovXHJcbmZ1bmN0aW9uIGlzU3RyaWN0Q29tcGFyYWJsZSh2YWx1ZSkge1xyXG4gIHJldHVybiB2YWx1ZSA9PT0gdmFsdWUgJiYgIWlzT2JqZWN0KHZhbHVlKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBpc1N0cmljdENvbXBhcmFibGVcclxuIl0sIm1hcHBpbmdzIjoiaWhDQWVZO0FBQUEsMkZBZlosTUFBT0EsU0FBUSxLQUFNLGdCQUFnQixDQUVyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBU0MsbUJBQWtCLENBQUNDLEtBQUssQ0FBRSxpREFDakMsTUFBTyw0QkFBQUEsS0FBSyxHQUFLQSxLQUFLLCtCQUFJLENBQUNGLFFBQVEsQ0FBQ0UsS0FBSyxDQUFDLEVBQzVDLENBRUEsY0FBZUQsbUJBQWtCIn0=