function cov_2oqfsd1ie3(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\stringToPath.js";var hash="d2178024f6a4349f429af4c3f2fa9a059feeb56e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\stringToPath.js",statementMap:{"0":{start:{line:3,column:22},end:{line:3,column:39}},"1":{start:{line:4,column:21},end:{line:4,column:31}},"2":{start:{line:5,column:19},end:{line:17,column:8}},"3":{start:{line:26,column:21},end:{line:42,column:2}},"4":{start:{line:27,column:17},end:{line:27,column:19}},"5":{start:{line:28,column:2},end:{line:30,column:3}},"6":{start:{line:29,column:4},end:{line:29,column:19}},"7":{start:{line:31,column:2},end:{line:40,column:4}},"8":{start:{line:32,column:14},end:{line:32,column:19}},"9":{start:{line:33,column:4},end:{line:38,column:5}},"10":{start:{line:34,column:6},end:{line:34,column:49}},"11":{start:{line:36,column:9},end:{line:38,column:5}},"12":{start:{line:37,column:6},end:{line:37,column:29}},"13":{start:{line:39,column:4},end:{line:39,column:20}},"14":{start:{line:41,column:2},end:{line:41,column:15}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:26,column:35},end:{line:26,column:36}},loc:{start:{line:26,column:47},end:{line:42,column:1}},line:26},"1":{name:"(anonymous_1)",decl:{start:{line:31,column:29},end:{line:31,column:30}},loc:{start:{line:31,column:70},end:{line:40,column:3}},line:31}},branchMap:{"0":{loc:{start:{line:28,column:2},end:{line:30,column:3}},type:"if",locations:[{start:{line:28,column:2},end:{line:30,column:3}},{start:{line:28,column:2},end:{line:30,column:3}}],line:28},"1":{loc:{start:{line:33,column:4},end:{line:38,column:5}},type:"if",locations:[{start:{line:33,column:4},end:{line:38,column:5}},{start:{line:33,column:4},end:{line:38,column:5}}],line:33},"2":{loc:{start:{line:36,column:9},end:{line:38,column:5}},type:"if",locations:[{start:{line:36,column:9},end:{line:38,column:5}},{start:{line:36,column:9},end:{line:38,column:5}}],line:36}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d2178024f6a4349f429af4c3f2fa9a059feeb56e"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2oqfsd1ie3=function(){return actualCoverage;};}return actualCoverage;}cov_2oqfsd1ie3();import memoizeCapped from'./memoizeCapped.js';const charCodeOfDot=(cov_2oqfsd1ie3().s[0]++,'.'.charCodeAt(0));const reEscapeChar=(cov_2oqfsd1ie3().s[1]++,/\\(\\)?/g);const rePropName=(cov_2oqfsd1ie3().s[2]++,RegExp(// Match anything that isn't a dot or bracket.
'[^.[\\]]+'+'|'+// Or match property names within brackets.
'\\[(?:'+// Match a non-string expression.
'([^"\'][^[]*)'+'|'+// Or match strings (supports escaping characters).
'(["\'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2'+')\\]'+'|'+// Or match "" as the space between consecutive dots or empty brackets.
'(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))','g'));/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */const stringToPath=(cov_2oqfsd1ie3().s[3]++,memoizeCapped(string=>{cov_2oqfsd1ie3().f[0]++;const result=(cov_2oqfsd1ie3().s[4]++,[]);cov_2oqfsd1ie3().s[5]++;if(string.charCodeAt(0)===charCodeOfDot){cov_2oqfsd1ie3().b[0][0]++;cov_2oqfsd1ie3().s[6]++;result.push('');}else{cov_2oqfsd1ie3().b[0][1]++;}cov_2oqfsd1ie3().s[7]++;string.replace(rePropName,(match,expression,quote,subString)=>{cov_2oqfsd1ie3().f[1]++;let key=(cov_2oqfsd1ie3().s[8]++,match);cov_2oqfsd1ie3().s[9]++;if(quote){cov_2oqfsd1ie3().b[1][0]++;cov_2oqfsd1ie3().s[10]++;key=subString.replace(reEscapeChar,'$1');}else{cov_2oqfsd1ie3().b[1][1]++;cov_2oqfsd1ie3().s[11]++;if(expression){cov_2oqfsd1ie3().b[2][0]++;cov_2oqfsd1ie3().s[12]++;key=expression.trim();}else{cov_2oqfsd1ie3().b[2][1]++;}}cov_2oqfsd1ie3().s[13]++;result.push(key);});cov_2oqfsd1ie3().s[14]++;return result;}));export default stringToPath;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZW1vaXplQ2FwcGVkIiwiY2hhckNvZGVPZkRvdCIsImNoYXJDb2RlQXQiLCJyZUVzY2FwZUNoYXIiLCJyZVByb3BOYW1lIiwiUmVnRXhwIiwic3RyaW5nVG9QYXRoIiwic3RyaW5nIiwicmVzdWx0IiwicHVzaCIsInJlcGxhY2UiLCJtYXRjaCIsImV4cHJlc3Npb24iLCJxdW90ZSIsInN1YlN0cmluZyIsImtleSIsInRyaW0iXSwic291cmNlcyI6WyJzdHJpbmdUb1BhdGguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1lbW9pemVDYXBwZWQgZnJvbSAnLi9tZW1vaXplQ2FwcGVkLmpzJ1xyXG5cclxuY29uc3QgY2hhckNvZGVPZkRvdCA9ICcuJy5jaGFyQ29kZUF0KDApXHJcbmNvbnN0IHJlRXNjYXBlQ2hhciA9IC9cXFxcKFxcXFwpPy9nXHJcbmNvbnN0IHJlUHJvcE5hbWUgPSBSZWdFeHAoXHJcbiAgLy8gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIGRvdCBvciBicmFja2V0LlxyXG4gICdbXi5bXFxcXF1dKycgKyAnfCcgK1xyXG4gIC8vIE9yIG1hdGNoIHByb3BlcnR5IG5hbWVzIHdpdGhpbiBicmFja2V0cy5cclxuICAnXFxcXFsoPzonICtcclxuICAgIC8vIE1hdGNoIGEgbm9uLXN0cmluZyBleHByZXNzaW9uLlxyXG4gICAgJyhbXlwiXFwnXVteW10qKScgKyAnfCcgK1xyXG4gICAgLy8gT3IgbWF0Y2ggc3RyaW5ncyAoc3VwcG9ydHMgZXNjYXBpbmcgY2hhcmFjdGVycykuXHJcbiAgICAnKFtcIlxcJ10pKCg/Oig/IVxcXFwyKVteXFxcXFxcXFxdfFxcXFxcXFxcLikqPylcXFxcMicgK1xyXG4gICcpXFxcXF0nKyAnfCcgK1xyXG4gIC8vIE9yIG1hdGNoIFwiXCIgYXMgdGhlIHNwYWNlIGJldHdlZW4gY29uc2VjdXRpdmUgZG90cyBvciBlbXB0eSBicmFja2V0cy5cclxuICAnKD89KD86XFxcXC58XFxcXFtcXFxcXSkoPzpcXFxcLnxcXFxcW1xcXFxdfCQpKSdcclxuICAsICdnJylcclxuXHJcbi8qKlxyXG4gKiBDb252ZXJ0cyBgc3RyaW5nYCB0byBhIHByb3BlcnR5IHBhdGggYXJyYXkuXHJcbiAqXHJcbiAqIEBwcml2YXRlXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgVGhlIHN0cmluZyB0byBjb252ZXJ0LlxyXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIHByb3BlcnR5IHBhdGggYXJyYXkuXHJcbiAqL1xyXG5jb25zdCBzdHJpbmdUb1BhdGggPSBtZW1vaXplQ2FwcGVkKChzdHJpbmcpID0+IHtcclxuICBjb25zdCByZXN1bHQgPSBbXVxyXG4gIGlmIChzdHJpbmcuY2hhckNvZGVBdCgwKSA9PT0gY2hhckNvZGVPZkRvdCkge1xyXG4gICAgcmVzdWx0LnB1c2goJycpXHJcbiAgfVxyXG4gIHN0cmluZy5yZXBsYWNlKHJlUHJvcE5hbWUsIChtYXRjaCwgZXhwcmVzc2lvbiwgcXVvdGUsIHN1YlN0cmluZykgPT4ge1xyXG4gICAgbGV0IGtleSA9IG1hdGNoXHJcbiAgICBpZiAocXVvdGUpIHtcclxuICAgICAga2V5ID0gc3ViU3RyaW5nLnJlcGxhY2UocmVFc2NhcGVDaGFyLCAnJDEnKVxyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoZXhwcmVzc2lvbikge1xyXG4gICAgICBrZXkgPSBleHByZXNzaW9uLnRyaW0oKVxyXG4gICAgfVxyXG4gICAgcmVzdWx0LnB1c2goa2V5KVxyXG4gIH0pXHJcbiAgcmV0dXJuIHJlc3VsdFxyXG59KVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgc3RyaW5nVG9QYXRoXHJcbiJdLCJtYXBwaW5ncyI6InczRUFlWTtBQUFBLDJGQWZaLE1BQU9BLGNBQWEsS0FBTSxvQkFBb0IsQ0FFOUMsS0FBTUMsY0FBYSwwQkFBRyxHQUFHLENBQUNDLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFDdkMsS0FBTUMsYUFBWSwwQkFBRyxVQUFVLEVBQy9CLEtBQU1DLFdBQVUsMEJBQUdDLE1BQU0sQ0FDdkI7QUFDQSxXQUFXLENBQUcsR0FBRyxDQUNqQjtBQUNBLFFBQVEsQ0FDTjtBQUNBLGVBQWUsQ0FBRyxHQUFHLENBQ3JCO0FBQ0Esd0NBQXdDLENBQzFDLE1BQU0sQ0FBRSxHQUFHLENBQ1g7QUFDQSxvQ0FBb0MsQ0FDbEMsR0FBRyxDQUFDLEVBRVI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxLQUFNQyxhQUFZLDBCQUFHTixhQUFhLENBQUVPLE1BQU0sRUFBSyx5QkFDN0MsS0FBTUMsT0FBTSwwQkFBRyxFQUFFLDBCQUNqQixHQUFJRCxNQUFNLENBQUNMLFVBQVUsQ0FBQyxDQUFDLENBQUMsR0FBS0QsYUFBYSxDQUFFLG9EQUMxQ08sTUFBTSxDQUFDQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQ2pCLENBQUMseURBQ0RGLE1BQU0sQ0FBQ0csT0FBTyxDQUFDTixVQUFVLENBQUUsQ0FBQ08sS0FBSyxDQUFFQyxVQUFVLENBQUVDLEtBQUssQ0FBRUMsU0FBUyxHQUFLLHlCQUNsRSxHQUFJQyxJQUFHLDBCQUFHSixLQUFLLDBCQUNmLEdBQUlFLEtBQUssQ0FBRSxxREFDVEUsR0FBRyxDQUFHRCxTQUFTLENBQUNKLE9BQU8sQ0FBQ1AsWUFBWSxDQUFFLElBQUksQ0FBQyxDQUM3QyxDQUFDLElBQ0ksd0RBQUlTLFVBQVUsQ0FBRSxxREFDbkJHLEdBQUcsQ0FBR0gsVUFBVSxDQUFDSSxJQUFJLEVBQUUsQ0FDekIsQ0FBQyxpQ0FBRCxDQUFDLHlCQUNEUixNQUFNLENBQUNDLElBQUksQ0FBQ00sR0FBRyxDQUFDLENBQ2xCLENBQUMsQ0FBQywwQkFDRixNQUFPUCxPQUFNLENBQ2YsQ0FBQyxDQUFDLEVBRUYsY0FBZUYsYUFBWSJ9