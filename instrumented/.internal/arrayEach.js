function cov_id0wpz0j2(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\arrayEach.js";var hash="4a1855276e1da07f5eb57393a2291cce30228cf3";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\arrayEach.js",statementMap:{"0":{start:{line:10,column:14},end:{line:10,column:16}},"1":{start:{line:11,column:17},end:{line:11,column:29}},"2":{start:{line:13,column:2},end:{line:17,column:3}},"3":{start:{line:14,column:4},end:{line:16,column:5}},"4":{start:{line:15,column:6},end:{line:15,column:11}},"5":{start:{line:18,column:2},end:{line:18,column:14}}},fnMap:{"0":{name:"arrayEach",decl:{start:{line:9,column:9},end:{line:9,column:18}},loc:{start:{line:9,column:36},end:{line:19,column:1}},line:9}},branchMap:{"0":{loc:{start:{line:14,column:4},end:{line:16,column:5}},type:"if",locations:[{start:{line:14,column:4},end:{line:16,column:5}},{start:{line:14,column:4},end:{line:16,column:5}}],line:14}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"4a1855276e1da07f5eb57393a2291cce30228cf3"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_id0wpz0j2=function(){return actualCoverage;};}return actualCoverage;}cov_id0wpz0j2();/**
 * A specialized version of `forEach` for arrays.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */function arrayEach(array,iteratee){cov_id0wpz0j2().f[0]++;let index=(cov_id0wpz0j2().s[0]++,-1);const length=(cov_id0wpz0j2().s[1]++,array.length);cov_id0wpz0j2().s[2]++;while(++index<length){cov_id0wpz0j2().s[3]++;if(iteratee(array[index],index,array)===false){cov_id0wpz0j2().b[0][0]++;cov_id0wpz0j2().s[4]++;break;}else{cov_id0wpz0j2().b[0][1]++;}}cov_id0wpz0j2().s[5]++;return array;}export default arrayEach;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhcnJheUVhY2giLCJhcnJheSIsIml0ZXJhdGVlIiwiaW5kZXgiLCJsZW5ndGgiXSwic291cmNlcyI6WyJhcnJheUVhY2guanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgZm9yRWFjaGAgZm9yIGFycmF5cy5cclxuICpcclxuICogQHByaXZhdGVcclxuICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxyXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC5cclxuICovXHJcbmZ1bmN0aW9uIGFycmF5RWFjaChhcnJheSwgaXRlcmF0ZWUpIHtcclxuICBsZXQgaW5kZXggPSAtMVxyXG4gIGNvbnN0IGxlbmd0aCA9IGFycmF5Lmxlbmd0aFxyXG5cclxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xyXG4gICAgaWYgKGl0ZXJhdGVlKGFycmF5W2luZGV4XSwgaW5kZXgsIGFycmF5KSA9PT0gZmFsc2UpIHtcclxuICAgICAgYnJlYWtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIGFycmF5XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFycmF5RWFjaFxyXG4iXSwibWFwcGluZ3MiOiJxeENBZVk7QUFBQSx5RkFmWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBU0EsVUFBUyxDQUFDQyxLQUFLLENBQUVDLFFBQVEsQ0FBRSx3QkFDbEMsR0FBSUMsTUFBSyx5QkFBRyxDQUFDLENBQUMsRUFDZCxLQUFNQyxPQUFNLHlCQUFHSCxLQUFLLENBQUNHLE1BQU0seUJBRTNCLE1BQU8sRUFBRUQsS0FBSyxDQUFHQyxNQUFNLENBQUUsd0JBQ3ZCLEdBQUlGLFFBQVEsQ0FBQ0QsS0FBSyxDQUFDRSxLQUFLLENBQUMsQ0FBRUEsS0FBSyxDQUFFRixLQUFLLENBQUMsR0FBSyxLQUFLLENBQUUsa0RBQ2xELE1BQ0YsQ0FBQyxnQ0FDSCxDQUFDLHVCQUNELE1BQU9BLE1BQUssQ0FDZCxDQUVBLGNBQWVELFVBQVMifQ==