function cov_1cd5hxi81t(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\initCloneObject.js";var hash="faad93338ae189dc6250633b7469a1f638b3c36c";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\initCloneObject.js",statementMap:{"0":{start:{line:11,column:2},end:{line:13,column:8}}},fnMap:{"0":{name:"initCloneObject",decl:{start:{line:10,column:9},end:{line:10,column:24}},loc:{start:{line:10,column:33},end:{line:14,column:1}},line:10}},branchMap:{"0":{loc:{start:{line:11,column:9},end:{line:13,column:8}},type:"cond-expr",locations:[{start:{line:12,column:6},end:{line:12,column:50}},{start:{line:13,column:6},end:{line:13,column:8}}],line:11},"1":{loc:{start:{line:11,column:10},end:{line:11,column:74}},type:"binary-expr",locations:[{start:{line:11,column:10},end:{line:11,column:50}},{start:{line:11,column:54},end:{line:11,column:74}}],line:11}},s:{"0":0},f:{"0":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"faad93338ae189dc6250633b7469a1f638b3c36c"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1cd5hxi81t=function(){return actualCoverage;};}return actualCoverage;}cov_1cd5hxi81t();import isPrototype from'./isPrototype.js';/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */function initCloneObject(object){cov_1cd5hxi81t().f[0]++;cov_1cd5hxi81t().s[0]++;return(cov_1cd5hxi81t().b[1][0]++,typeof object.constructor==='function')&&(cov_1cd5hxi81t().b[1][1]++,!isPrototype(object))?(cov_1cd5hxi81t().b[0][0]++,Object.create(Object.getPrototypeOf(object))):(cov_1cd5hxi81t().b[0][1]++,{});}export default initCloneObject;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpc1Byb3RvdHlwZSIsImluaXRDbG9uZU9iamVjdCIsIm9iamVjdCIsImNvbnN0cnVjdG9yIiwiT2JqZWN0IiwiY3JlYXRlIiwiZ2V0UHJvdG90eXBlT2YiXSwic291cmNlcyI6WyJpbml0Q2xvbmVPYmplY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGlzUHJvdG90eXBlIGZyb20gJy4vaXNQcm90b3R5cGUuanMnXHJcblxyXG4vKipcclxuICogSW5pdGlhbGl6ZXMgYW4gb2JqZWN0IGNsb25lLlxyXG4gKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY2xvbmUuXHJcbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGluaXRpYWxpemVkIGNsb25lLlxyXG4gKi9cclxuZnVuY3Rpb24gaW5pdENsb25lT2JqZWN0KG9iamVjdCkge1xyXG4gIHJldHVybiAodHlwZW9mIG9iamVjdC5jb25zdHJ1Y3RvciA9PT0gJ2Z1bmN0aW9uJyAmJiAhaXNQcm90b3R5cGUob2JqZWN0KSlcclxuICAgID8gT2JqZWN0LmNyZWF0ZShPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqZWN0KSlcclxuICAgIDoge31cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgaW5pdENsb25lT2JqZWN0XHJcbiJdLCJtYXBwaW5ncyI6Inl0Q0FlWTtBQUFBLDJGQWZaLE1BQU9BLFlBQVcsS0FBTSxrQkFBa0IsQ0FFMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxRQUFTQyxnQkFBZSxDQUFDQyxNQUFNLENBQUUsaURBQy9CLE1BQVEsa0NBQU9BLE9BQU0sQ0FBQ0MsV0FBVyxHQUFLLFVBQVUsK0JBQUksQ0FBQ0gsV0FBVyxDQUFDRSxNQUFNLENBQUMsOEJBQ3BFRSxNQUFNLENBQUNDLE1BQU0sQ0FBQ0QsTUFBTSxDQUFDRSxjQUFjLENBQUNKLE1BQU0sQ0FBQyxDQUFDLDhCQUM1QyxDQUFDLENBQUMsRUFDUixDQUVBLGNBQWVELGdCQUFlIn0=