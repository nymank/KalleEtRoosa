function cov_1aktoco4dv(){var path="C:\\git\\KalleEtRoosa\\src\\.internal\\baseWhile.js";var hash="045c7e788c9fe38f4e2d590acc1ed035c1c44b2b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\git\\KalleEtRoosa\\src\\.internal\\baseWhile.js",statementMap:{"0":{start:{line:14,column:21},end:{line:14,column:26}},"1":{start:{line:15,column:14},end:{line:15,column:37}},"2":{start:{line:17,column:2},end:{line:18,column:45}},"3":{start:{line:20,column:2},end:{line:22,column:77}}},fnMap:{"0":{name:"baseWhile",decl:{start:{line:13,column:9},end:{line:13,column:18}},loc:{start:{line:13,column:56},end:{line:23,column:1}},line:13}},branchMap:{"0":{loc:{start:{line:15,column:14},end:{line:15,column:37}},type:"cond-expr",locations:[{start:{line:15,column:26},end:{line:15,column:32}},{start:{line:15,column:35},end:{line:15,column:37}}],line:15},"1":{loc:{start:{line:17,column:9},end:{line:18,column:41}},type:"binary-expr",locations:[{start:{line:17,column:10},end:{line:17,column:48}},{start:{line:18,column:4},end:{line:18,column:41}}],line:17},"2":{loc:{start:{line:17,column:10},end:{line:17,column:48}},type:"cond-expr",locations:[{start:{line:17,column:22},end:{line:17,column:29}},{start:{line:17,column:32},end:{line:17,column:48}}],line:17},"3":{loc:{start:{line:20,column:9},end:{line:22,column:77}},type:"cond-expr",locations:[{start:{line:21,column:6},end:{line:21,column:77}},{start:{line:22,column:6},end:{line:22,column:77}}],line:20},"4":{loc:{start:{line:21,column:20},end:{line:21,column:41}},type:"cond-expr",locations:[{start:{line:21,column:32},end:{line:21,column:33}},{start:{line:21,column:36},end:{line:21,column:41}}],line:21},"5":{loc:{start:{line:21,column:45},end:{line:21,column:75}},type:"cond-expr",locations:[{start:{line:21,column:57},end:{line:21,column:66}},{start:{line:21,column:69},end:{line:21,column:75}}],line:21},"6":{loc:{start:{line:22,column:20},end:{line:22,column:45}},type:"cond-expr",locations:[{start:{line:22,column:32},end:{line:22,column:41}},{start:{line:22,column:44},end:{line:22,column:45}}],line:22},"7":{loc:{start:{line:22,column:49},end:{line:22,column:75}},type:"cond-expr",locations:[{start:{line:22,column:61},end:{line:22,column:67}},{start:{line:22,column:70},end:{line:22,column:75}}],line:22}},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"045c7e788c9fe38f4e2d590acc1ed035c1c44b2b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1aktoco4dv=function(){return actualCoverage;};}return actualCoverage;}cov_1aktoco4dv();import slice from'../slice.js';/**
 * The base implementation of methods like `dropWhile` and `takeWhile`.
 *
 * @private
 * @param {Array} array The array to query.
 * @param {Function} predicate The function invoked per iteration.
 * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Array} Returns the slice of `array`.
 */function baseWhile(array,predicate,isDrop,fromRight){cov_1aktoco4dv().f[0]++;const{length}=(cov_1aktoco4dv().s[0]++,array);let index=(cov_1aktoco4dv().s[1]++,fromRight?(cov_1aktoco4dv().b[0][0]++,length):(cov_1aktoco4dv().b[0][1]++,-1));cov_1aktoco4dv().s[2]++;while((cov_1aktoco4dv().b[1][0]++,fromRight?(cov_1aktoco4dv().b[2][0]++,index--):(cov_1aktoco4dv().b[2][1]++,++index<length))&&(cov_1aktoco4dv().b[1][1]++,predicate(array[index],index,array))){}cov_1aktoco4dv().s[3]++;return isDrop?(cov_1aktoco4dv().b[3][0]++,slice(array,fromRight?(cov_1aktoco4dv().b[4][0]++,0):(cov_1aktoco4dv().b[4][1]++,index),fromRight?(cov_1aktoco4dv().b[5][0]++,index+1):(cov_1aktoco4dv().b[5][1]++,length))):(cov_1aktoco4dv().b[3][1]++,slice(array,fromRight?(cov_1aktoco4dv().b[6][0]++,index+1):(cov_1aktoco4dv().b[6][1]++,0),fromRight?(cov_1aktoco4dv().b[7][0]++,length):(cov_1aktoco4dv().b[7][1]++,index)));}export default baseWhile;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzbGljZSIsImJhc2VXaGlsZSIsImFycmF5IiwicHJlZGljYXRlIiwiaXNEcm9wIiwiZnJvbVJpZ2h0IiwibGVuZ3RoIiwiaW5kZXgiXSwic291cmNlcyI6WyJiYXNlV2hpbGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNsaWNlIGZyb20gJy4uL3NsaWNlLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIG1ldGhvZHMgbGlrZSBgZHJvcFdoaWxlYCBhbmQgYHRha2VXaGlsZWAuXHJcbiAqXHJcbiAqIEBwcml2YXRlXHJcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBxdWVyeS5cclxuICogQHBhcmFtIHtGdW5jdGlvbn0gcHJlZGljYXRlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXHJcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2lzRHJvcF0gU3BlY2lmeSBkcm9wcGluZyBlbGVtZW50cyBpbnN0ZWFkIG9mIHRha2luZyB0aGVtLlxyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtmcm9tUmlnaHRdIFNwZWNpZnkgaXRlcmF0aW5nIGZyb20gcmlnaHQgdG8gbGVmdC5cclxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBzbGljZSBvZiBgYXJyYXlgLlxyXG4gKi9cclxuZnVuY3Rpb24gYmFzZVdoaWxlKGFycmF5LCBwcmVkaWNhdGUsIGlzRHJvcCwgZnJvbVJpZ2h0KSB7XHJcbiAgY29uc3QgeyBsZW5ndGggfSA9IGFycmF5XHJcbiAgbGV0IGluZGV4ID0gZnJvbVJpZ2h0ID8gbGVuZ3RoIDogLTFcclxuXHJcbiAgd2hpbGUgKChmcm9tUmlnaHQgPyBpbmRleC0tIDogKytpbmRleCA8IGxlbmd0aCkgJiZcclxuICAgIHByZWRpY2F0ZShhcnJheVtpbmRleF0sIGluZGV4LCBhcnJheSkpIHt9XHJcblxyXG4gIHJldHVybiBpc0Ryb3BcclxuICAgID8gc2xpY2UoYXJyYXksIChmcm9tUmlnaHQgPyAwIDogaW5kZXgpLCAoZnJvbVJpZ2h0ID8gaW5kZXggKyAxIDogbGVuZ3RoKSlcclxuICAgIDogc2xpY2UoYXJyYXksIChmcm9tUmlnaHQgPyBpbmRleCArIDEgOiAwKSwgKGZyb21SaWdodCA/IGxlbmd0aCA6IGluZGV4KSlcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYmFzZVdoaWxlXHJcbiJdLCJtYXBwaW5ncyI6IituRkFlWTtBQUFBLDJGQWZaLE1BQU9BLE1BQUssS0FBTSxhQUFhLENBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsUUFBU0MsVUFBUyxDQUFDQyxLQUFLLENBQUVDLFNBQVMsQ0FBRUMsTUFBTSxDQUFFQyxTQUFTLENBQUUseUJBQ3RELEtBQU0sQ0FBRUMsTUFBTyxDQUFDLDBCQUFHSixLQUFLLEVBQ3hCLEdBQUlLLE1BQUssMEJBQUdGLFNBQVMsNkJBQUdDLE1BQU0sOEJBQUcsQ0FBQyxDQUFDLDJCQUVuQyxNQUFPLDRCQUFDRCxTQUFTLDZCQUFHRSxLQUFLLEVBQUUsOEJBQUcsRUFBRUEsS0FBSyxDQUFHRCxNQUFNLGdDQUM1Q0gsU0FBUyxDQUFDRCxLQUFLLENBQUNLLEtBQUssQ0FBQyxDQUFFQSxLQUFLLENBQUVMLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyx3QkFFM0MsTUFBT0UsT0FBTSw2QkFDVEosS0FBSyxDQUFDRSxLQUFLLENBQUdHLFNBQVMsNkJBQUcsQ0FBQyw4QkFBR0UsS0FBSyxFQUFJRixTQUFTLDZCQUFHRSxLQUFLLENBQUcsQ0FBQyw4QkFBR0QsTUFBTSxFQUFFLDhCQUN2RU4sS0FBSyxDQUFDRSxLQUFLLENBQUdHLFNBQVMsNkJBQUdFLEtBQUssQ0FBRyxDQUFDLDhCQUFHLENBQUMsRUFBSUYsU0FBUyw2QkFBR0MsTUFBTSw4QkFBR0MsS0FBSyxFQUFFLEVBQzdFLENBRUEsY0FBZU4sVUFBUyJ9